{"repository_name":"nats","body":"# NATS\n\nNATS is a message broker for distributed systems.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     nats:\n       github: jgaskins/nats\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nYou can use NATS in a publish/subscribe or request/reply paradigm.\n\n### Publish/Subscribe\n\nFor publish/subscribe, let's consider the following class to be shared, representing an event that will be published by one service and picked up by another:\n\n```crystal\nrequire \"uuid\"\nrequire \"json\"\nrequire \"uuid/json\"\n\nstruct UserRegisteredEvent\n  include JSON::Serializable\n\n  getter id : UUID\n  getter email : String\n  getter name : String\n\n  def initialize(@id, @email, @name)\n  end\nend\n```\n\nIn one service, we can subscribe to a subject that will be sent all of the events pertaining to a user registering:\n\n```crystal\nrequire \"nats\"\n\nnats = NATS::Client.new(URI.parse(ENV[\"NATS_URL\"]))\n\n# Subscribe to all messages on \"customers.registration\" with an optional queue\n# group. A message will only be delivered to a single client in a given queue\n# group.\nnats.subscribe \"customers.registration\", queue_group: \"cart-service\" do |msg|\n  new_user = UserRegisteredEvent.from_json(msg.data)\n\n  # This message represents that a new customer has registered, presumably sent\n  # by our identity/authentication/user service. We create a record for this\n  # customer in our own database so we don't always need to request the info\n  # from that service.\n  UserQuery.new.create_from_message(new_user)\nend\n\n# Accept wildcard messages. This would match:\n# - orders.commercial.fulfilled\n# - orders.individual.fulfilled\nnats.subscribe \"orders.*.shipped\", queue_group: \"cart-service\" do |msg|\n  # ...\nend\n\n# Since the subscribe blocks above do not block execution, we need to keep the\n# main fiber from exiting. In a real-world app, you might trap a TERM/INT signal\n# to allow the app to close the connection gracefully.\nsleep\n```\n\nAnd then to publish on those topics:\n\n```crystal\nrequire \"nats\"\n\nnats = NATS::Client.new(URI.parse(ENV[\"NATS_URL\"]))\n\n# We can publish a message with a given subject. In this example, we'll\n# publish a message saying Jolene has registered.\nnats.publish \"customers.registration\", UserRegisteredEvent.new(\n  id: UUID.random,\n  name: \"Jolene\",\n  email: \"jolene@gonnatakeyourman.com\",\n).to_json\n\nnats.close\n```\n\n### Request/Reply\n\nLet's consider an orders service that we may want to send requests to.\n\n```crystal\nrequire \"uuid\"\nrequire \"json\"\nrequire \"uuid/json\"\nrequire \"db\"\n\nmodule Orders\n  struct Get\n    include JSON::Serializable\n\n    getter id : UUID\n\n    def initialize(@id)\n    end\n  end\nend\n\nstruct Order\n  include DB::Serializable\n  include JSON::Serializable\n\n  getter id : UUID\n  getter address : String\n  getter city : String\n  getter state : String\n  getter postal_code : String\nend\n```\n\n#### Define the request handler\n\n```crystal\nrequire \"nats\"\n\nnats = NATS::Client.new(URI.parse(ENV[\"NATS_URL\"]))\n\n# Subscribe to the subject that the request will be sent to\nnats.subscribe \"orders.get\", do |msg|\n  request = Orders::Get.from_json(msg.data)\n\n  order = OrderQuery.new.with_id(request.id)\n\n  nats.reply msg, order.to_json\nend\n```\n\n#### Sending the request\n\n```crystal\nrequire \"nats\"\n\nnats = NATS::Client.new(URI.parse(ENV[\"NATS_URL\"]))\n\n# Send the request to the subject it is expected to be received on:\norder = nats.request \"orders.get\",\n  message: Orders::Get.new(order_id).to_json,\n  timeout: 5.seconds # A timeout must be specified\n\npp order\n```\n\n## Development\n\nTODO: Write development instructions here\n\n## Contributing\n\n1. Fork it (<https://github.com/jgaskins/nats/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Jamie Gaskins](https://github.com/jgaskins) - creator and maintainer\n","program":{"html_id":"nats/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"nats","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"nats/NATS","path":"NATS.html","kind":"module","full_name":"NATS","name":"NATS","abstract":false,"locations":[{"filename":"src/client.cr","line_number":6,"url":null},{"filename":"src/error.cr","line_number":1,"url":null},{"filename":"src/jetstream.cr","line_number":6,"url":null},{"filename":"src/kv.cr","line_number":5,"url":null},{"filename":"src/nats.cr","line_number":36,"url":null},{"filename":"src/nkeys.cr","line_number":7,"url":null},{"filename":"src/nuid.cr","line_number":1,"url":null},{"filename":"src/objects.cr","line_number":7,"url":null},{"filename":"src/subscription.cr","line_number":1,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"LOG","name":"LOG","value":"::Log.for(self)"},{"id":"VERSION","name":"VERSION","value":"\"1.1.0\""}],"doc":"NATS is a pub/sub message bus.\n\n```\nrequire \"nats\"\n\n# Connect to a NATS server running on localhost\nnats = NATS::Client.new\n\n# Connect to a single remote NATS server\nnats = NATS::Client.new(URI.parse(ENV[\"NATS_URL\"]))\n\n# Connect to a NATS cluster, specified by the NATS_URLS environment variable\n# as a comma-separated list of URLs\nservers = ENV[\"NATS_URLS\"]\n  .split(',')\n  .map { |url| URI.parse(url) }\nnats = NATS::Client.new(servers: %w[\n  nats://nats-1\n  nats://nats-2\n  nats://nats-3\n])\n```","summary":"<p>NATS is a pub/sub message bus.</p>","types":[{"html_id":"nats/NATS/Client","path":"NATS/Client.html","kind":"class","full_name":"NATS::Client","name":"Client","abstract":false,"superclass":{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/client.cr","line_number":9,"url":null},{"filename":"src/jetstream.cr","line_number":982,"url":null},{"filename":"src/kv.cr","line_number":532,"url":null},{"filename":"src/objects.cr","line_number":340,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"BUFFER_SIZE","name":"BUFFER_SIZE","value":"1 << 15"},{"id":"MAX_OUTBOUND_INTERVAL","name":"MAX_OUTBOUND_INTERVAL","value":"10.milliseconds"},{"id":"MAX_PUBLISH_SIZE","name":"MAX_PUBLISH_SIZE","value":"1 * MEGABYTE"},{"id":"MEGABYTE","name":"MEGABYTE","value":"1 << 20"}],"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"doc":"Instantiating a `NATS::Client` makes a connection to one of the given NATS\nservers.","summary":"<p>Instantiating a <code><a href=\"../NATS/Client.html\">NATS::Client</a></code> makes a connection to one of the given NATS servers.</p>","constructors":[{"html_id":"new(servers:Array(URI),ping_interval:Time::Span=2.minutes,max_pings_out=2,nkeys_file:String?=nil)-class-method","name":"new","doc":"Connect to a NATS cluster at the given URIs\n\n```\nnats = NATS::Client.new([\n  URI.parse(\"nats://nats-1.example.com\"),\n  URI.parse(\"nats://nats-2.example.com\"),\n  URI.parse(\"nats://nats-3.example.com\"),\n])\n```","summary":"<p>Connect to a NATS cluster at the given URIs</p>","abstract":false,"args":[{"name":"servers","external_name":"servers","restriction":"Array(URI)"},{"name":"ping_interval","default_value":"2.minutes","external_name":"ping_interval","restriction":"Time::Span"},{"name":"max_pings_out","default_value":"2","external_name":"max_pings_out","restriction":""},{"name":"nkeys_file","default_value":"nil","external_name":"nkeys_file","restriction":"String | ::Nil"}],"args_string":"(servers : Array(URI), ping_interval : Time::Span = 2.minutes, max_pings_out = 2, nkeys_file : String? = nil)","args_html":"(servers : Array(URI), ping_interval : Time::Span = <span class=\"n\">2</span>.minutes, max_pings_out = <span class=\"n\">2</span>, nkeys_file : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/client.cr","line_number":93,"url":null},"def":{"name":"new","args":[{"name":"servers","external_name":"servers","restriction":"Array(URI)"},{"name":"ping_interval","default_value":"2.minutes","external_name":"ping_interval","restriction":"Time::Span"},{"name":"max_pings_out","default_value":"2","external_name":"max_pings_out","restriction":""},{"name":"nkeys_file","default_value":"nil","external_name":"nkeys_file","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(servers, ping_interval, max_pings_out, nkeys_file)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(uri:URI,ping_interval=2.minutes,max_pings_out=2,nkeys_file:String?=nil)-class-method","name":"new","doc":"Connect to a single NATS server at the given URI\n\n```\nnats = NATS::Client.new(URI.parse(\"nats://nats.example.com\"))\n```","summary":"<p>Connect to a single NATS server at the given URI</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"ping_interval","default_value":"2.minutes","external_name":"ping_interval","restriction":""},{"name":"max_pings_out","default_value":"2","external_name":"max_pings_out","restriction":""},{"name":"nkeys_file","default_value":"nil","external_name":"nkeys_file","restriction":"String | ::Nil"}],"args_string":"(uri : URI, ping_interval = 2.minutes, max_pings_out = 2, nkeys_file : String? = nil)","args_html":"(uri : URI, ping_interval = <span class=\"n\">2</span>.minutes, max_pings_out = <span class=\"n\">2</span>, nkeys_file : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/client.cr","line_number":75,"url":null},"def":{"name":"new","args":[{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"ping_interval","default_value":"2.minutes","external_name":"ping_interval","restriction":""},{"name":"max_pings_out","default_value":"2","external_name":"max_pings_out","restriction":""},{"name":"nkeys_file","default_value":"nil","external_name":"nkeys_file","restriction":"String | ::Nil"}],"visibility":"Public","body":"new([uri], ping_interval: ping_interval, max_pings_out: max_pings_out, nkeys_file: nkeys_file)"}},{"html_id":"new(*,ping_interval=2.minutes,max_pings_out=2,nkeys_file:String?=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ping_interval","default_value":"2.minutes","external_name":"ping_interval","restriction":""},{"name":"max_pings_out","default_value":"2","external_name":"max_pings_out","restriction":""},{"name":"nkeys_file","default_value":"nil","external_name":"nkeys_file","restriction":"String | ::Nil"}],"args_string":"(*, ping_interval = 2.minutes, max_pings_out = 2, nkeys_file : String? = nil)","args_html":"(*, ping_interval = <span class=\"n\">2</span>.minutes, max_pings_out = <span class=\"n\">2</span>, nkeys_file : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/client.cr","line_number":58,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ping_interval","default_value":"2.minutes","external_name":"ping_interval","restriction":""},{"name":"max_pings_out","default_value":"2","external_name":"max_pings_out","restriction":""},{"name":"nkeys_file","default_value":"nil","external_name":"nkeys_file","restriction":"String | ::Nil"}],"splat_index":0,"visibility":"Public","body":"new(servers: ((ENV.fetch(\"NATS_SERVERS\", \"nats:///\")).split(',')).map do |url|\n  URI.parse(url)\nend, ping_interval: ping_interval, max_pings_out: max_pings_out, nkeys_file: nkeys_file)"}}],"instance_methods":[{"html_id":"close-instance-method","name":"close","doc":"Close this NATS connection. This should be done explicitly before exiting\nthe program so that the NATS server can remove any subscriptions that were\nassociated with this client.","summary":"<p>Close this NATS connection.</p>","abstract":false,"location":{"filename":"src/client.cr","line_number":653,"url":null},"def":{"name":"close","visibility":"Public","body":"begin\n  if @state.closed?\n    return\n  end\n  LOG.debug do\n    \"Flushing before closing...\"\n  end\n  flush\n  @socket.close\n  @state = :closed\n  LOG.debug do\n    \"Connection closed\"\n  end\nrescue IO::Error\nend"}},{"html_id":"flush(timeout=2.seconds)-instance-method","name":"flush","doc":"Flush the client's output buffer over the wire","summary":"<p>Flush the client's output buffer over the wire</p>","abstract":false,"args":[{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":""}],"args_string":"(timeout = 2.seconds)","args_html":"(timeout = <span class=\"n\">2</span>.seconds)","location":{"filename":"src/client.cr","line_number":457,"url":null},"def":{"name":"flush","args":[{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":""}],"visibility":"Public","body":"channel = Channel(Nil).new(1)\nping(channel)\nLOG.debug do\n  \"Flushing buffer...\"\nend\n@out.synchronize do\n  @socket.flush\nend\nFiber.yield\nselect\nwhen channel.receive\nwhen timeout(timeout)\n  raise(Error.new(\"Flush did not complete within duration: #{timeout}\"))\nend\n\n"}},{"html_id":"jetstream-instance-method","name":"jetstream","doc":"Returns a `NATS::JetStream::Client` that uses this client's connection to\nthe NATS server.","summary":"<p>Returns a <code><a href=\"../NATS/JetStream/Client.html\">NATS::JetStream::Client</a></code> that uses this client's connection to the NATS server.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":985,"url":null},"def":{"name":"jetstream","visibility":"Public","body":"@jetstream || (@jetstream = JetStream::Client.new(self))"}},{"html_id":"kv-instance-method","name":"kv","doc":"Returns a `NATS::KV::Client` that uses this client's connection to\nthe NATS server.","summary":"<p>Returns a <code><a href=\"../NATS/KV/Client.html\">NATS::KV::Client</a></code> that uses this client's connection to the NATS server.</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  NATS KV support is experimental and subject to change as NATS support for it changes</p>","abstract":false,"location":{"filename":"src/kv.cr","line_number":536,"url":null},"def":{"name":"kv","visibility":"Public","body":"@kv || (@kv = KV::Client.new(self))"}},{"html_id":"objects:Objects::Client-instance-method","name":"objects","abstract":false,"location":{"filename":"src/objects.cr","line_number":341,"url":null},"def":{"name":"objects","return_type":"Objects::Client","visibility":"Public","body":"if (value = @objects).nil?\n  @objects = (Objects::Client.new(self))\nelse\n  value\nend"}},{"html_id":"on_disconnect(&on_disconnect)-instance-method","name":"on_disconnect","doc":"Execute the given block whenever this client is disconnected from the NATS\nserver.\n\n```\nnats = NATS::Client.new\nnats.on_disconnect { Datadog.metrics.increment \"nats.disconnect\" }\n```","summary":"<p>Execute the given block whenever this client is disconnected from the NATS server.</p>","abstract":false,"location":{"filename":"src/client.cr","line_number":685,"url":null},"def":{"name":"on_disconnect","yields":0,"block_arg":{"name":"on_disconnect","external_name":"on_disconnect","restriction":""},"visibility":"Public","body":"@on_disconnect = on_disconnect\nself\n"}},{"html_id":"on_error(&on_error:Exception->Nil)-instance-method","name":"on_error","doc":"Execute the given block whenever an exception is raised inside this NATS\nclient.\n\n```\nnats = NATS::Client.new\nnats.on_error { |error| Honeybadger.notify error }\n```","summary":"<p>Execute the given block whenever an exception is raised inside this NATS client.</p>","abstract":false,"location":{"filename":"src/client.cr","line_number":672,"url":null},"def":{"name":"on_error","yields":1,"block_arg":{"name":"on_error","external_name":"on_error","restriction":"(Exception -> Nil)"},"visibility":"Public","body":"@on_error = on_error\nself\n"}},{"html_id":"on_reconnect(&on_reconnect)-instance-method","name":"on_reconnect","doc":"Execute the given block whenever this client is reconnected to the NATS\nserver.\n\n```\nnats = NATS::Client.new\nnats.on_reconnect { Datadog.metrics.increment \"nats.reconnect\" }\n```","summary":"<p>Execute the given block whenever this client is reconnected to the NATS server.</p>","abstract":false,"location":{"filename":"src/client.cr","line_number":698,"url":null},"def":{"name":"on_reconnect","yields":0,"block_arg":{"name":"on_reconnect","external_name":"on_reconnect","restriction":""},"visibility":"Public","body":"@on_reconnect = on_reconnect\nself\n"}},{"html_id":"ping(channel=Channel(Nil).new(1))-instance-method","name":"ping","abstract":false,"args":[{"name":"channel","default_value":"Channel(Nil).new(1)","external_name":"channel","restriction":""}],"args_string":"(channel = Channel(Nil).new(1))","args_html":"(channel = <span class=\"t\">Channel</span>(<span class=\"t\">Nil</span>).<span class=\"k\">new</span>(<span class=\"n\">1</span>))","location":{"filename":"src/client.cr","line_number":472,"url":null},"def":{"name":"ping","args":[{"name":"channel","default_value":"Channel(Nil).new(1)","external_name":"channel","restriction":""}],"visibility":"Public","body":"LOG.debug do\n  \"Sending PING\"\nend\nwrite do\n  @io << \"PING\\r\\n\"\n  @ping_count.add(1)\n  @pings.send(channel)\nend\n"}},{"html_id":"publish(subject:String,data:Payload=Bytes.empty,reply_to:String?=nil,headers:Headers?=nil):Nil-instance-method","name":"publish","doc":"Publish the given message data (either `Bytes` for binary data or `String` for text) on the given NATS subject, optionally supplying a `reply_to` subject (if expecting a reply or to notify the receiver where to send updates) and any `headers`.\n\n```\n# Send an empty message to a subject\nnats.publish \"hello\"\n\n# Serialize an object to a subject\nnats.publish \"orders.#{order.id}\", order.to_json\n\n# Tell a recipient where to send results. For example, to stream results\n# to a given subject:\nreply_subject = \"replies.orders.list.customer.123\"\norders = [] of Order\nnats.subscribe reply_subject do |msg|\n  case result = (Order | Complete).from_json(msg.data)\n  in Order\n    orders << result\n  in Complete\n    nats.unsubscribe reply_subject\n  end\nend\nnats.publish \"orders.list.customer.123\", reply_to: reply_subject\n\n# Publish a message to NATS JetStream with a message-deduplication header\n# for idempotency:\nnats.jetstream.subscribe consumer_subject, queue_group: \"my-service\" do |msg|\n  # ...\nend\nnats.publish orders_subject, order.to_json, headers: {\n  # Deduplicate using the equivalent of a cache key\n  \"Nats-Msg-Id\" => \"order-submitted-#{order.id}-#{order.updated_at.to_json}\",\n}\n```","summary":"<p>Publish the given message data (either <code>Bytes</code> for binary data or <code>String</code> for text) on the given NATS subject, optionally supplying a <code>reply_to</code> subject (if expecting a reply or to notify the receiver where to send updates) and any <code>headers</code>.</p>","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"data","default_value":"Bytes.empty","external_name":"data","restriction":"Payload"},{"name":"reply_to","default_value":"nil","external_name":"reply_to","restriction":"String | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Headers | ::Nil"}],"args_string":"(subject : String, data : Payload = Bytes.empty, reply_to : String? = nil, headers : Headers? = nil) : Nil","args_html":"(subject : String, data : <a href=\"../NATS/Payload.html\">Payload</a> = <span class=\"t\">Bytes</span>.empty, reply_to : String? = <span class=\"n\">nil</span>, headers : <a href=\"../NATS/Client/Headers.html\">Headers</a>? = <span class=\"n\">nil</span>) : Nil","location":{"filename":"src/client.cr","line_number":396,"url":null},"def":{"name":"publish","args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"data","default_value":"Bytes.empty","external_name":"data","restriction":"Payload"},{"name":"reply_to","default_value":"nil","external_name":"reply_to","restriction":"String | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Headers | ::Nil"}],"return_type":"Nil","visibility":"Public","body":"if data.bytesize > MAX_PUBLISH_SIZE\n  raise(Error.new(\"Attempted to publish message of size #{data.bytesize}. Cannot publish messages larger than #{MAX_PUBLISH_SIZE}.\"))\nend\nLOG.debug do\n  \"Publishing #{data.bytesize} bytes to #{subject.inspect}, reply_to: #{reply_to.inspect}, headers: #{headers.inspect}\"\nend\nwrite do\n  if headers\n    @io << \"HPUB \"\n  else\n    @io << \"PUB \"\n  end\n  @io << subject\n  if reply_to\n    (@io << ' ') << reply_to\n  end\n  if headers\n    nats_header_preamble = \"NATS/1.0\\r\\n\"\n    header_length = nats_header_preamble.bytesize + 2\n    each_as_array(headers) do |key, values|\n      values.each do |value|\n        header_length = header_length + ((key.bytesize + value.bytesize) + 4)\n      end\n    end\n    (@io << ' ') << header_length\n    ((@io << ' ') << (header_length + data.bytesize)) << \"\\r\\n\"\n    @io << nats_header_preamble\n    each_as_array(headers) do |key, values|\n      values.each do |value|\n        (((@io << key) << \": \") << value) << \"\\r\\n\"\n      end\n    end\n    @io << \"\\r\\n\"\n  else\n    ((@io << ' ') << data.bytesize) << \"\\r\\n\"\n  end\n  @io.write(data.to_slice)\n  @io << \"\\r\\n\"\nend\n"}},{"html_id":"publish(message:Message):Nil-instance-method","name":"publish","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"Message"}],"args_string":"(message : Message) : Nil","args_html":"(message : <a href=\"../NATS/Message.html\">Message</a>) : Nil","location":{"filename":"src/client.cr","line_number":452,"url":null},"def":{"name":"publish","args":[{"name":"message","external_name":"message","restriction":"Message"}],"return_type":"Nil","visibility":"Public","body":"publish(message.subject, message.raw_data, message.reply_to, message.headers)"}},{"html_id":"reply(msg:Message,data:Payload):Nil-instance-method","name":"reply","doc":"Send the given `data` to the `msg`'s `reply_to` subject, often used in a\nrequest/reply messaging model.\n\n```\nnats.subscribe \"orders.*\", queue_group: \"orders-service\" do |msg|\n  _, id = msg.subject.split('.') # Similar to HTTP path routing\n\n  if order = OrderQuery.new.find_by(id: id)\n    nats.reply msg, {order: order}.to_json\n  else\n    nats.reply msg, {error: \"No order with that id found\"}.to_json\n  end\nend\n```","summary":"<p>Send the given <code>data</code> to the <code>msg</code>'s <code>reply_to</code> subject, often used in a request/reply messaging model.</p>","abstract":false,"args":[{"name":"msg","external_name":"msg","restriction":"Message"},{"name":"data","external_name":"data","restriction":"Payload"}],"args_string":"(msg : Message, data : Payload) : Nil","args_html":"(msg : <a href=\"../NATS/Message.html\">Message</a>, data : <a href=\"../NATS/Payload.html\">Payload</a>) : Nil","location":{"filename":"src/client.cr","line_number":355,"url":null},"def":{"name":"reply","args":[{"name":"msg","external_name":"msg","restriction":"Message"},{"name":"data","external_name":"data","restriction":"Payload"}],"return_type":"Nil","visibility":"Public","body":"if subject = msg.reply_to\n  publish(subject, data)\nelse\n  raise(NotAReply.new(\"Cannot reply to a message that has no return address\", msg))\nend"}},{"html_id":"request(subject:String,data:Payload=\"\",timeout:Time::Span=2.seconds,headers:Headers?=nil):Message?-instance-method","name":"request","doc":"Make a synchronous request to subscribers of the given `subject`, waiting\nup to `timeout` for a response from any of the subscribers. The first\nmessage to come back will be returned. If no messages comes back before\nthe `timeout` elapses, `nil` is returned.\n\n```\nif order_response = nats.request(\"orders.info.#{order_id}\")\n  response << Order.from_json(String.new(order_response.body))\nelse\n  response.status = :service_unavailable\nend\n```","summary":"<p>Make a synchronous request to subscribers of the given <code>subject</code>, waiting up to <code>timeout</code> for a response from any of the subscribers.</p>","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"data","default_value":"\"\"","external_name":"data","restriction":"Payload"},{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":"Time::Span"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Headers | ::Nil"}],"args_string":"(subject : String, data : Payload = \"\", timeout : Time::Span = 2.seconds, headers : Headers? = nil) : Message?","args_html":"(subject : String, data : <a href=\"../NATS/Payload.html\">Payload</a> = <span class=\"s\">&quot;&quot;</span>, timeout : Time::Span = <span class=\"n\">2</span>.seconds, headers : <a href=\"../NATS/Client/Headers.html\">Headers</a>? = <span class=\"n\">nil</span>) : <a href=\"../NATS/Message.html\">Message</a>?","location":{"filename":"src/client.cr","line_number":293,"url":null},"def":{"name":"request","args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"data","default_value":"\"\"","external_name":"data","restriction":"Payload"},{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":"Time::Span"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Headers | ::Nil"}],"return_type":"Message | ::Nil","visibility":"Public","body":"channel = Channel(Message).new(1)\ninbox = NUID.next\nkey = \"#{@inbox_prefix}.#{inbox}\"\n@inbox_handlers[key] = ->(msg : Message) do\n  channel.send(msg)\nend\npublish(subject, data, reply_to: key, headers: headers)\n@out.synchronize do\n  @socket.flush\nend\nbegin\n  select\nwhen msg = channel.receive\n    msg\nwhen timeout(timeout)\n    nil\nend\n\nensure\n  @inbox_handlers.delete(key)\nend\n"}},{"html_id":"request(subject:String,data:Payload=\"\",timeout=2.seconds,&block:Message->):Nil-instance-method","name":"request","doc":"Make an asynchronous request to subscribers of the given `subject`, not\nwaiting for a response. The first message to come back will be passed to\nthe block.","summary":"<p>Make an asynchronous request to subscribers of the given <code>subject</code>, not waiting for a response.</p>","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"data","default_value":"\"\"","external_name":"data","restriction":"Payload"},{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":""}],"args_string":"(subject : String, data : Payload = \"\", timeout = 2.seconds, &block : Message -> ) : Nil","args_html":"(subject : String, data : <a href=\"../NATS/Payload.html\">Payload</a> = <span class=\"s\">&quot;&quot;</span>, timeout = <span class=\"n\">2</span>.seconds, &block : <a href=\"../NATS/Message.html\">Message</a> -> ) : Nil","location":{"filename":"src/client.cr","line_number":324,"url":null},"def":{"name":"request","args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"data","default_value":"\"\"","external_name":"data","restriction":"Payload"},{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":""}],"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Message ->)"},"return_type":"Nil","visibility":"Public","body":"inbox = NUID.next\nkey = \"#{@inbox_prefix}.#{inbox}\"\n@inbox_handlers[key] = ->(msg : Message) do\n  block.call(msg)\n  @inbox_handlers.delete(key)\nend\npublish(subject, data, reply_to: key)\nspawn(remove_key(key, after: timeout))\n"}},{"html_id":"server_info:ServerInfo-instance-method","name":"server_info","abstract":false,"location":{"filename":"src/client.cr","line_number":55,"url":null},"def":{"name":"server_info","return_type":"ServerInfo","visibility":"Public","body":"@server_info"}},{"html_id":"state:State-instance-method","name":"state","doc":"The current state of the connection","summary":"<p>The current state of the connection</p>","abstract":false,"location":{"filename":"src/client.cr","line_number":54,"url":null},"def":{"name":"state","return_type":"State","visibility":"Public","body":"@state"}},{"html_id":"subscribe(subject:String,queue_group:String?=nil,sid=@current_sid.add(1),max_in_flight=64000,&block:Message,Subscription->):Subscription-instance-method","name":"subscribe","doc":"Subscribe to the given `subject`, optionally with a `queue_group` (so that\neach message is delivered to this application once instead of once for\neach instance of the application), executing the given block for each\nmessage.\n\n```\nrequire \"nats\"\n\nnats = NATS::Client.new\nnats.subscribe \"orders.created\" do |msg|\n  order = Order.from_json(msg.data)\n\n  # ...\nend\n```","summary":"<p>Subscribe to the given <code>subject</code>, optionally with a <code>queue_group</code> (so that each message is delivered to this application once instead of once for each instance of the application), executing the given block for each message.</p>","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"queue_group","default_value":"nil","external_name":"queue_group","restriction":"String | ::Nil"},{"name":"sid","default_value":"@current_sid.add(1)","external_name":"sid","restriction":""},{"name":"max_in_flight","default_value":"64000","external_name":"max_in_flight","restriction":""}],"args_string":"(subject : String, queue_group : String? = nil, sid = @current_sid.add(1), max_in_flight = 64000, &block : Message, Subscription -> ) : Subscription","args_html":"(subject : String, queue_group : String? = <span class=\"n\">nil</span>, sid = @current_sid.add(<span class=\"n\">1</span>), max_in_flight = <span class=\"n\">64000</span>, &block : <a href=\"../NATS/Message.html\">Message</a>, <a href=\"../NATS/Subscription.html\">Subscription</a> -> ) : <a href=\"../NATS/Subscription.html\">Subscription</a>","location":{"filename":"src/client.cr","line_number":224,"url":null},"def":{"name":"subscribe","args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"queue_group","default_value":"nil","external_name":"queue_group","restriction":"String | ::Nil"},{"name":"sid","default_value":"@current_sid.add(1)","external_name":"sid","restriction":""},{"name":"max_in_flight","default_value":"64000","external_name":"max_in_flight","restriction":""}],"yields":2,"block_arg":{"name":"block","external_name":"block","restriction":"(Message, Subscription ->)"},"return_type":"Subscription","visibility":"Public","body":"LOG.debug do\n  \"Subscribing to #{subject.inspect}, queue_group: #{queue_group.inspect}, sid: #{sid}\"\nend\nwrite do\n  ((@io << \"SUB \") << subject) << ' '\n  if queue_group\n    (@io << queue_group) << ' '\n  end\n  (@io << sid) << \"\\r\\n\"\nend\n@subscriptions[sid] = (Subscription.new(subject, sid, queue_group, max_in_flight: max_in_flight, &block)).tap(&.start)\n"}},{"html_id":"unsubscribe(subscription:Subscription,max_messages:Int):Nil-instance-method","name":"unsubscribe","doc":"Unsubscribe from the given subscription after the specified number of messages has been received.","summary":"<p>Unsubscribe from the given subscription after the specified number of messages has been received.</p>","abstract":false,"args":[{"name":"subscription","external_name":"subscription","restriction":"Subscription"},{"name":"max_messages","external_name":"max_messages","restriction":"Int"}],"args_string":"(subscription : Subscription, max_messages : Int) : Nil","args_html":"(subscription : <a href=\"../NATS/Subscription.html\">Subscription</a>, max_messages : Int) : Nil","location":{"filename":"src/client.cr","line_number":261,"url":null},"def":{"name":"unsubscribe","args":[{"name":"subscription","external_name":"subscription","restriction":"Subscription"},{"name":"max_messages","external_name":"max_messages","restriction":"Int"}],"return_type":"Nil","visibility":"Public","body":"unsubscribe(subscription.sid, max_messages)"}},{"html_id":"unsubscribe(subscription:Subscription):Nil-instance-method","name":"unsubscribe","doc":"Unsubscribe from the given subscription\n\n```\nnats = NATS::Client.new\n\nnew_orders = [] of NATS::Message\nsubscription = nats.subscribe \"orders.created.*\" do |msg|\n  messages << msg\nend\n\nspawn do\n  sleep 10.seconds\n  nats.unsubscribe subscription\nend\n```","summary":"<p>Unsubscribe from the given subscription</p>","abstract":false,"args":[{"name":"subscription","external_name":"subscription","restriction":"Subscription"}],"args_string":"(subscription : Subscription) : Nil","args_html":"(subscription : <a href=\"../NATS/Subscription.html\">Subscription</a>) : Nil","location":{"filename":"src/client.cr","line_number":256,"url":null},"def":{"name":"unsubscribe","args":[{"name":"subscription","external_name":"subscription","restriction":"Subscription"}],"return_type":"Nil","visibility":"Public","body":"unsubscribe(subscription.sid)"}}],"types":[{"html_id":"nats/NATS/Client/ClientClosed","path":"NATS/Client/ClientClosed.html","kind":"class","full_name":"NATS::Client::ClientClosed","name":"ClientClosed","abstract":false,"superclass":{"html_id":"nats/NATS/Client/Error","kind":"class","full_name":"NATS::Client::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Client/Error","kind":"class","full_name":"NATS::Client::Error","name":"Error"},{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/client.cr","line_number":756,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/Client","kind":"class","full_name":"NATS::Client","name":"Client"},"doc":"Raised when an attempt is made to communicate with the NATS server using\na client instance that has been explicitly closed.","summary":"<p>Raised when an attempt is made to communicate with the NATS server using a client instance that has been explicitly closed.</p>"},{"html_id":"nats/NATS/Client/Error","path":"NATS/Client/Error.html","kind":"class","full_name":"NATS::Client::Error","name":"Error","abstract":false,"superclass":{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/client.cr","line_number":16,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"nats/NATS/Client/ClientClosed","kind":"class","full_name":"NATS::Client::ClientClosed","name":"ClientClosed"}],"namespace":{"html_id":"nats/NATS/Client","kind":"class","full_name":"NATS::Client","name":"Client"}},{"html_id":"nats/NATS/Client/Headers","path":"NATS/Client/Headers.html","kind":"alias","full_name":"NATS::Client::Headers","name":"Headers","abstract":false,"locations":[{"filename":"src/client.cr","line_number":14,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"(HTTP::Headers | Hash(String, Array(String) | String))","aliased_html":"HTTP::Headers | Hash(String, Array(String) | String)","const":false,"namespace":{"html_id":"nats/NATS/Client","kind":"class","full_name":"NATS::Client","name":"Client"}},{"html_id":"nats/NATS/Client/State","path":"NATS/Client/State.html","kind":"enum","full_name":"NATS::Client::State","name":"State","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/client.cr","line_number":20,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Connecting","name":"Connecting","value":"0","doc":"The connection is currently awaiting a completed NATS connection. We\ncould be awaiting TCP, TLS, NATS protocol handshake, synchronization,\netc. Ideally, a client doesn't spend more than a few milliseconds in\nthis state.","summary":"<p>The connection is currently awaiting a completed NATS connection.</p>"},{"id":"Connected","name":"Connected","value":"1","doc":"A successful NATS connection has been made.","summary":"<p>A successful NATS connection has been made.</p>"},{"id":"Disconnected","name":"Disconnected","value":"2","doc":"The client has been disconnected and is either currently executing its\ndisconnect handler or is waiting on the reconnect backoff period.","summary":"<p>The client has been disconnected and is either currently executing its disconnect handler or is waiting on the reconnect backoff period.</p>"},{"id":"Reconnecting","name":"Reconnecting","value":"3","doc":"The disconnect handler has been invoked, the backoff period has elapsed\nand the client is currenty attempting to reconnect to the NATS server.","summary":"<p>The disconnect handler has been invoked, the backoff period has elapsed and the client is currenty attempting to reconnect to the NATS server.</p>"},{"id":"Closed","name":"Closed","value":"4","doc":"The client has been explicitly closed with `NATS::Client#close`.","summary":"<p>The client has been explicitly closed with <code><a href=\"../../NATS/Client.html#close-instance-method\">NATS::Client#close</a></code>.</p>"}],"namespace":{"html_id":"nats/NATS/Client","kind":"class","full_name":"NATS::Client","name":"Client"},"doc":"The current state of the client's connection","summary":"<p>The current state of the client's connection</p>","instance_methods":[{"html_id":"closed?-instance-method","name":"closed?","abstract":false,"location":{"filename":"src/client.cr","line_number":39,"url":null},"def":{"name":"closed?","visibility":"Public","body":"self == Closed"}},{"html_id":"connected?-instance-method","name":"connected?","abstract":false,"location":{"filename":"src/client.cr","line_number":28,"url":null},"def":{"name":"connected?","visibility":"Public","body":"self == Connected"}},{"html_id":"connecting?-instance-method","name":"connecting?","abstract":false,"location":{"filename":"src/client.cr","line_number":25,"url":null},"def":{"name":"connecting?","visibility":"Public","body":"self == Connecting"}},{"html_id":"disconnected?-instance-method","name":"disconnected?","abstract":false,"location":{"filename":"src/client.cr","line_number":32,"url":null},"def":{"name":"disconnected?","visibility":"Public","body":"self == Disconnected"}},{"html_id":"reconnecting?-instance-method","name":"reconnecting?","abstract":false,"location":{"filename":"src/client.cr","line_number":36,"url":null},"def":{"name":"reconnecting?","visibility":"Public","body":"self == Reconnecting"}}]}]},{"html_id":"nats/NATS/Error","path":"NATS/Error.html","kind":"class","full_name":"NATS::Error","name":"Error","abstract":false,"superclass":{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/error.cr","line_number":3,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"nats/NATS/Client/Error","kind":"class","full_name":"NATS::Client::Error","name":"Error"},{"html_id":"nats/NATS/JetStream/Error","kind":"class","full_name":"NATS::JetStream::Error","name":"Error"},{"html_id":"nats/NATS/KV/Error","kind":"class","full_name":"NATS::KV::Error","name":"Error"},{"html_id":"nats/NATS/NKeys/Error","kind":"class","full_name":"NATS::NKeys::Error","name":"Error"},{"html_id":"nats/NATS/NotAReply","kind":"class","full_name":"NATS::NotAReply","name":"NotAReply"},{"html_id":"nats/NATS/Objects/Error","kind":"class","full_name":"NATS::Objects::Error","name":"Error"},{"html_id":"nats/NATS/ServerNotRespondingToPings","kind":"class","full_name":"NATS::ServerNotRespondingToPings","name":"ServerNotRespondingToPings"},{"html_id":"nats/NATS/UnknownCommand","kind":"class","full_name":"NATS::UnknownCommand","name":"UnknownCommand"}],"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"doc":"Generic error","summary":"<p>Generic error</p>"},{"html_id":"nats/NATS/JetStream","path":"NATS/JetStream.html","kind":"module","full_name":"NATS::JetStream","name":"JetStream","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":10,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"doc":"NATS JetStream provides at-least-once delivery guarantees with the\npossibility of exactly-once for some use cases, allowing NATS to be used for\nscenarios where 100% delivery of messages and events is required.","summary":"<p>NATS JetStream provides at-least-once delivery guarantees with the possibility of exactly-once for some use cases, allowing NATS to be used for scenarios where 100% delivery of messages and events is required.</p>","types":[{"html_id":"nats/NATS/JetStream/API","path":"NATS/JetStream/API.html","kind":"module","full_name":"NATS::JetStream::API","name":"API","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":315,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream","kind":"module","full_name":"NATS::JetStream","name":"JetStream"},"types":[{"html_id":"nats/NATS/JetStream/API/Message","path":"NATS/JetStream/API/Message.html","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message","abstract":true,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":316,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"subclasses":[{"html_id":"nats/NATS/JetStream/API/V1/APIError","kind":"struct","full_name":"NATS::JetStream::API::V1::APIError","name":"APIError"},{"html_id":"nats/NATS/JetStream/API/V1/ClusterInfo","kind":"struct","full_name":"NATS::JetStream::API::V1::ClusterInfo","name":"ClusterInfo"},{"html_id":"nats/NATS/JetStream/API/V1/Consumer","kind":"struct","full_name":"NATS::JetStream::API::V1::Consumer","name":"Consumer"},{"html_id":"nats/NATS/JetStream/API/V1/Consumer/Sequence","kind":"struct","full_name":"NATS::JetStream::API::V1::Consumer::Sequence","name":"Sequence"},{"html_id":"nats/NATS/JetStream/API/V1/ConsumerConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::ConsumerConfig","name":"ConsumerConfig"},{"html_id":"nats/NATS/JetStream/API/V1/ConsumerListResponse","kind":"struct","full_name":"NATS::JetStream::API::V1::ConsumerListResponse","name":"ConsumerListResponse"},{"html_id":"nats/NATS/JetStream/API/V1/ExternalStream","kind":"struct","full_name":"NATS::JetStream::API::V1::ExternalStream","name":"ExternalStream"},{"html_id":"nats/NATS/JetStream/API/V1/PeerInfo","kind":"struct","full_name":"NATS::JetStream::API::V1::PeerInfo","name":"PeerInfo"},{"html_id":"nats/NATS/JetStream/API/V1/Stream","kind":"struct","full_name":"NATS::JetStream::API::V1::Stream","name":"Stream"},{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamConfig","name":"StreamConfig"},{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig/Placement","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamConfig::Placement","name":"Placement"},{"html_id":"nats/NATS/JetStream/API/V1/StreamGetMsgResponse","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamGetMsgResponse","name":"StreamGetMsgResponse"},{"html_id":"nats/NATS/JetStream/API/V1/StreamListResponse","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamListResponse","name":"StreamListResponse"},{"html_id":"nats/NATS/JetStream/API/V1/StreamSourceInfo","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamSourceInfo","name":"StreamSourceInfo"},{"html_id":"nats/NATS/JetStream/API/V1/StreamState","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamState","name":"StreamState"}],"namespace":{"html_id":"nats/NATS/JetStream/API","kind":"module","full_name":"NATS::JetStream::API","name":"API"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":317,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}]},{"html_id":"nats/NATS/JetStream/API/V1","path":"NATS/JetStream/API/V1.html","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":320,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API","kind":"module","full_name":"NATS::JetStream::API","name":"API"},"types":[{"html_id":"nats/NATS/JetStream/API/V1/APIError","path":"NATS/JetStream/API/V1/APIError.html","kind":"struct","full_name":"NATS::JetStream::API::V1::APIError","name":"APIError","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":573,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":573,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"code:Int64-instance-method","name":"code","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":574,"url":null},"def":{"name":"code","return_type":"Int64","visibility":"Public","body":"@code"}},{"html_id":"description:String?-instance-method","name":"description","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":576,"url":null},"def":{"name":"description","return_type":"String | ::Nil","visibility":"Public","body":"@description"}},{"html_id":"err_code:UInt16?-instance-method","name":"err_code","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":575,"url":null},"def":{"name":"err_code","return_type":"UInt16 | ::Nil","visibility":"Public","body":"@err_code"}}]},{"html_id":"nats/NATS/JetStream/API/V1/ClusterInfo","path":"NATS/JetStream/API/V1/ClusterInfo.html","kind":"struct","full_name":"NATS::JetStream::API::V1::ClusterInfo","name":"ClusterInfo","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":954,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":954,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"leader:String?-instance-method","name":"leader","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":956,"url":null},"def":{"name":"leader","return_type":"String | ::Nil","visibility":"Public","body":"@leader"}},{"html_id":"name:String?-instance-method","name":"name","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":955,"url":null},"def":{"name":"name","return_type":"String | ::Nil","visibility":"Public","body":"@name"}},{"html_id":"replicas:Array(PeerInfo)-instance-method","name":"replicas","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":957,"url":null},"def":{"name":"replicas","return_type":"Array(PeerInfo)","visibility":"Public","body":"@replicas"}}]},{"html_id":"nats/NATS/JetStream/API/V1/Consumer","path":"NATS/JetStream/API/V1/Consumer.html","kind":"struct","full_name":"NATS::JetStream::API::V1::Consumer","name":"Consumer","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":767,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":767,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"ack_floor:Sequence-instance-method","name":"ack_floor","doc":"The number of messages that have been acknowledged for this consumer/stream","summary":"<p>The number of messages that have been acknowledged for this consumer/stream</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":784,"url":null},"def":{"name":"ack_floor","return_type":"Sequence","visibility":"Public","body":"@ack_floor"}},{"html_id":"cluster:ClusterInfo?-instance-method","name":"cluster","doc":"Where this consumer's data lives in the cluster","summary":"<p>Where this consumer's data lives in the cluster</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":799,"url":null},"def":{"name":"cluster","return_type":"ClusterInfo | ::Nil","visibility":"Public","body":"@cluster"}},{"html_id":"config:ConsumerConfig-instance-method","name":"config","doc":"The configuration used to create this consumer (including its defaults)","summary":"<p>The configuration used to create this consumer (including its defaults)</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":778,"url":null},"def":{"name":"config","return_type":"ConsumerConfig","visibility":"Public","body":"@config"}},{"html_id":"created:Time-instance-method","name":"created","doc":"The timestamp when this consumer was created","summary":"<p>The timestamp when this consumer was created</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":775,"url":null},"def":{"name":"created","return_type":"Time","visibility":"Public","body":"@created"}},{"html_id":"delivered:Sequence-instance-method","name":"delivered","doc":"The number of times this consumer has delivered messages for this stream","summary":"<p>The number of times this consumer has delivered messages for this stream</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":781,"url":null},"def":{"name":"delivered","return_type":"Sequence","visibility":"Public","body":"@delivered"}},{"html_id":"name:String-instance-method","name":"name","doc":"The name of this consumer","summary":"<p>The name of this consumer</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":772,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"num_ack_pending:Int64-instance-method","name":"num_ack_pending","doc":"The number of messages currently in-flight that are awaiting acknowledgement","summary":"<p>The number of messages currently in-flight that are awaiting acknowledgement</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":787,"url":null},"def":{"name":"num_ack_pending","return_type":"Int64","visibility":"Public","body":"@num_ack_pending"}},{"html_id":"num_pending:Int64-instance-method","name":"num_pending","doc":"The number of messages in the stream that this consumer has not delivered at all yet","summary":"<p>The number of messages in the stream that this consumer has not delivered at all yet</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":796,"url":null},"def":{"name":"num_pending","return_type":"Int64","visibility":"Public","body":"@num_pending"}},{"html_id":"num_redelivered:Int64-instance-method","name":"num_redelivered","doc":"The number of messages that have been redelivered","summary":"<p>The number of messages that have been redelivered</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":790,"url":null},"def":{"name":"num_redelivered","return_type":"Int64","visibility":"Public","body":"@num_redelivered"}},{"html_id":"num_waiting:Int64-instance-method","name":"num_waiting","doc":"The number of messages that are currently waiting","summary":"<p>The number of messages that are currently waiting</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":793,"url":null},"def":{"name":"num_waiting","return_type":"Int64","visibility":"Public","body":"@num_waiting"}},{"html_id":"push_bound?:Bool-instance-method","name":"push_bound?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":801,"url":null},"def":{"name":"push_bound?","return_type":"Bool","visibility":"Public","body":"@push_bound"}},{"html_id":"stream_name:String-instance-method","name":"stream_name","doc":"The name of the stream this consumer sources its messages from","summary":"<p>The name of the stream this consumer sources its messages from</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":769,"url":null},"def":{"name":"stream_name","return_type":"String","visibility":"Public","body":"@stream_name"}}],"types":[{"html_id":"nats/NATS/JetStream/API/V1/Consumer/Sequence","path":"NATS/JetStream/API/V1/Consumer/Sequence.html","kind":"struct","full_name":"NATS::JetStream::API::V1::Consumer::Sequence","name":"Sequence","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":805,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1/Consumer","kind":"struct","full_name":"NATS::JetStream::API::V1::Consumer","name":"Consumer"},"doc":"The sequence represense a cursor for how many messages have been\ndelivered or acknowledged for this consumer and stream.","summary":"<p>The sequence represense a cursor for how many messages have been delivered or acknowledged for this consumer and stream.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"The sequence represense a cursor for how many messages have been\ndelivered or acknowledged for this consumer and stream.","summary":"<p>The sequence represense a cursor for how many messages have been delivered or acknowledged for this consumer and stream.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":805,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"consumer_seq:Int64-instance-method","name":"consumer_seq","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":806,"url":null},"def":{"name":"consumer_seq","return_type":"Int64","visibility":"Public","body":"@consumer_seq"}},{"html_id":"stream_seq:Int64-instance-method","name":"stream_seq","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":807,"url":null},"def":{"name":"stream_seq","return_type":"Int64","visibility":"Public","body":"@stream_seq"}}]}]},{"html_id":"nats/NATS/JetStream/API/V1/ConsumerConfig","path":"NATS/JetStream/API/V1/ConsumerConfig.html","kind":"struct","full_name":"NATS::JetStream::API::V1::ConsumerConfig","name":"ConsumerConfig","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":811,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":811,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(deliver_subject=nil,durable_name=nil,ack_policy:AckPolicy=:explicit,deliver_policy:DeliverPolicy=:all,replay_policy:ReplayPolicy=:instant,ack_wait=nil,filter_subject=nil,max_deliver=nil,opt_start_seq=nil,sample_frequency=nil,opt_start_time=nil,rate_limit_bps=nil,max_ack_pending:Int?=nil,max_waiting:Int?=nil,idle_heartbeat=nil,flow_control=false,deliver_group=durable_name)-class-method","name":"new","abstract":false,"args":[{"name":"deliver_subject","default_value":"nil","external_name":"deliver_subject","restriction":""},{"name":"durable_name","default_value":"nil","external_name":"durable_name","restriction":""},{"name":"ack_policy","default_value":":explicit","external_name":"ack_policy","restriction":"AckPolicy"},{"name":"deliver_policy","default_value":":all","external_name":"deliver_policy","restriction":"DeliverPolicy"},{"name":"replay_policy","default_value":":instant","external_name":"replay_policy","restriction":"ReplayPolicy"},{"name":"ack_wait","default_value":"nil","external_name":"ack_wait","restriction":""},{"name":"filter_subject","default_value":"nil","external_name":"filter_subject","restriction":""},{"name":"max_deliver","default_value":"nil","external_name":"max_deliver","restriction":""},{"name":"opt_start_seq","default_value":"nil","external_name":"opt_start_seq","restriction":""},{"name":"sample_frequency","default_value":"nil","external_name":"sample_frequency","restriction":""},{"name":"opt_start_time","default_value":"nil","external_name":"opt_start_time","restriction":""},{"name":"rate_limit_bps","default_value":"nil","external_name":"rate_limit_bps","restriction":""},{"name":"max_ack_pending","default_value":"nil","external_name":"max_ack_pending","restriction":"Int | ::Nil"},{"name":"max_waiting","default_value":"nil","external_name":"max_waiting","restriction":"Int | ::Nil"},{"name":"idle_heartbeat","default_value":"nil","external_name":"idle_heartbeat","restriction":""},{"name":"flow_control","default_value":"false","external_name":"flow_control","restriction":""},{"name":"deliver_group","default_value":"durable_name","external_name":"deliver_group","restriction":""}],"args_string":"(deliver_subject = nil, durable_name = nil, ack_policy : AckPolicy = :explicit, deliver_policy : DeliverPolicy = :all, replay_policy : ReplayPolicy = :instant, ack_wait = nil, filter_subject = nil, max_deliver = nil, opt_start_seq = nil, sample_frequency = nil, opt_start_time = nil, rate_limit_bps = nil, max_ack_pending : Int? = nil, max_waiting : Int? = nil, idle_heartbeat = nil, flow_control = false, deliver_group = durable_name)","args_html":"(deliver_subject = <span class=\"n\">nil</span>, durable_name = <span class=\"n\">nil</span>, ack_policy : <a href=\"../../../../NATS/JetStream/API/V1/ConsumerConfig/AckPolicy.html\">AckPolicy</a> = <span class=\"n\">:explicit</span>, deliver_policy : <a href=\"../../../../NATS/JetStream/API/V1/ConsumerConfig/DeliverPolicy.html\">DeliverPolicy</a> = <span class=\"n\">:all</span>, replay_policy : <a href=\"../../../../NATS/JetStream/API/V1/ConsumerConfig/ReplayPolicy.html\">ReplayPolicy</a> = <span class=\"n\">:instant</span>, ack_wait = <span class=\"n\">nil</span>, filter_subject = <span class=\"n\">nil</span>, max_deliver = <span class=\"n\">nil</span>, opt_start_seq = <span class=\"n\">nil</span>, sample_frequency = <span class=\"n\">nil</span>, opt_start_time = <span class=\"n\">nil</span>, rate_limit_bps = <span class=\"n\">nil</span>, max_ack_pending : Int? = <span class=\"n\">nil</span>, max_waiting : Int? = <span class=\"n\">nil</span>, idle_heartbeat = <span class=\"n\">nil</span>, flow_control = <span class=\"n\">false</span>, deliver_group = durable_name)","location":{"filename":"src/jetstream.cr","line_number":852,"url":null},"def":{"name":"new","args":[{"name":"deliver_subject","default_value":"nil","external_name":"deliver_subject","restriction":""},{"name":"durable_name","default_value":"nil","external_name":"durable_name","restriction":""},{"name":"ack_policy","default_value":":explicit","external_name":"ack_policy","restriction":"AckPolicy"},{"name":"deliver_policy","default_value":":all","external_name":"deliver_policy","restriction":"DeliverPolicy"},{"name":"replay_policy","default_value":":instant","external_name":"replay_policy","restriction":"ReplayPolicy"},{"name":"ack_wait","default_value":"nil","external_name":"ack_wait","restriction":""},{"name":"filter_subject","default_value":"nil","external_name":"filter_subject","restriction":""},{"name":"max_deliver","default_value":"nil","external_name":"max_deliver","restriction":""},{"name":"opt_start_seq","default_value":"nil","external_name":"opt_start_seq","restriction":""},{"name":"sample_frequency","default_value":"nil","external_name":"sample_frequency","restriction":""},{"name":"opt_start_time","default_value":"nil","external_name":"opt_start_time","restriction":""},{"name":"rate_limit_bps","default_value":"nil","external_name":"rate_limit_bps","restriction":""},{"name":"max_ack_pending","default_value":"nil","external_name":"max_ack_pending","restriction":"Int | ::Nil"},{"name":"max_waiting","default_value":"nil","external_name":"max_waiting","restriction":"Int | ::Nil"},{"name":"idle_heartbeat","default_value":"nil","external_name":"idle_heartbeat","restriction":""},{"name":"flow_control","default_value":"false","external_name":"flow_control","restriction":""},{"name":"deliver_group","default_value":"durable_name","external_name":"deliver_group","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(deliver_subject, durable_name, ack_policy, deliver_policy, replay_policy, ack_wait, filter_subject, max_deliver, opt_start_seq, sample_frequency, opt_start_time, rate_limit_bps, max_ack_pending, max_waiting, idle_heartbeat, flow_control, deliver_group)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"ack_policy:AckPolicy-instance-method","name":"ack_policy","doc":"AckPolicy\tHow messages should be acknowledged, AckNone, AckAll or AckExplicit","summary":"<p>AckPolicy\tHow messages should be acknowledged, AckNone, AckAll or AckExplicit</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":813,"url":null},"def":{"name":"ack_policy","return_type":"AckPolicy","visibility":"Public","body":"@ack_policy"}},{"html_id":"ack_wait:Time::Span?-instance-method","name":"ack_wait","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":816,"url":null},"def":{"name":"ack_wait","return_type":"Time::Span | ::Nil","visibility":"Public","body":"@ack_wait"}},{"html_id":"deliver_group:String?-instance-method","name":"deliver_group","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":824,"url":null},"def":{"name":"deliver_group","return_type":"String | ::Nil","visibility":"Public","body":"@deliver_group"}},{"html_id":"deliver_policy:DeliverPolicy-instance-method","name":"deliver_policy","doc":"DeliverPolicy\tThe initial starting mode of the consumer, DeliverAll, DeliverLast, DeliverNew, DeliverByStartSequence or DeliverByStartTime","summary":"<p>DeliverPolicy\tThe initial starting mode of the consumer, DeliverAll, DeliverLast, DeliverNew, DeliverByStartSequence or DeliverByStartTime</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":818,"url":null},"def":{"name":"deliver_policy","return_type":"DeliverPolicy","visibility":"Public","body":"@deliver_policy"}},{"html_id":"deliver_subject:String?-instance-method","name":"deliver_subject","doc":"DeliverySubject\tThe subject to deliver observed messages, when not set, a pull-based Consumer is created","summary":"<p>DeliverySubject\tThe subject to deliver observed messages, when not set, a pull-based Consumer is created</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":820,"url":null},"def":{"name":"deliver_subject","return_type":"String | ::Nil","visibility":"Public","body":"@deliver_subject"}},{"html_id":"description:String?-instance-method","name":"description","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":825,"url":null},"def":{"name":"description","return_type":"String | ::Nil","visibility":"Public","body":"@description"}},{"html_id":"durable_name:String?-instance-method","name":"durable_name","doc":"Durable\tThe name of the Consumer","summary":"<p>Durable\tThe name of the Consumer</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":822,"url":null},"def":{"name":"durable_name","return_type":"String | ::Nil","visibility":"Public","body":"@durable_name"}},{"html_id":"filter_subject:String?-instance-method","name":"filter_subject","doc":"FilterSubject\tWhen consuming from a Stream with many subjects, or wildcards, select only a specific incoming subjects, supports wildcards","summary":"<p>FilterSubject\tWhen consuming from a Stream with many subjects, or wildcards, select only a specific incoming subjects, supports wildcards</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":836,"url":null},"def":{"name":"filter_subject","return_type":"String | ::Nil","visibility":"Public","body":"@filter_subject"}},{"html_id":"flow_control?:Bool-instance-method","name":"flow_control?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":829,"url":null},"def":{"name":"flow_control?","return_type":"Bool","visibility":"Public","body":"@flow_control"}},{"html_id":"idle_heartbeat:Time::Span?-instance-method","name":"idle_heartbeat","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":828,"url":null},"def":{"name":"idle_heartbeat","return_type":"Time::Span | ::Nil","visibility":"Public","body":"@idle_heartbeat"}},{"html_id":"max_ack_pending:Int64?-instance-method","name":"max_ack_pending","doc":"MaxAckPending\tThe maximum number of messages without acknowledgement that can be outstanding, once this limit is reached message delivery will be suspended","summary":"<p>MaxAckPending\tThe maximum number of messages without acknowledgement that can be outstanding, once this limit is reached message delivery will be suspended</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":850,"url":null},"def":{"name":"max_ack_pending","return_type":"Int64 | ::Nil","visibility":"Public","body":"@max_ack_pending"}},{"html_id":"max_deliver:Int64?-instance-method","name":"max_deliver","doc":"MaxDeliver\tMaximum amount times a specific message will be delivered. Use this to avoid poison pills crashing all your services forever","summary":"<p>MaxDeliver\tMaximum amount times a specific message will be delivered.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":838,"url":null},"def":{"name":"max_deliver","return_type":"Int64 | ::Nil","visibility":"Public","body":"@max_deliver"}},{"html_id":"max_waiting:Int64?-instance-method","name":"max_waiting","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":826,"url":null},"def":{"name":"max_waiting","return_type":"Int64 | ::Nil","visibility":"Public","body":"@max_waiting"}},{"html_id":"opt_start_seq:Int64?-instance-method","name":"opt_start_seq","doc":"OptStartSeq\tWhen first consuming messages from the Stream start at this particular message in the set","summary":"<p>OptStartSeq\tWhen first consuming messages from the Stream start at this particular message in the set</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":840,"url":null},"def":{"name":"opt_start_seq","return_type":"Int64 | ::Nil","visibility":"Public","body":"@opt_start_seq"}},{"html_id":"opt_start_time:Time?-instance-method","name":"opt_start_time","doc":"OptStartTime\tWhen first consuming messages from the Stream start with messages on or after this time","summary":"<p>OptStartTime\tWhen first consuming messages from the Stream start with messages on or after this time</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":846,"url":null},"def":{"name":"opt_start_time","return_type":"Time | ::Nil","visibility":"Public","body":"@opt_start_time"}},{"html_id":"rate_limit_bps:UInt64?-instance-method","name":"rate_limit_bps","doc":"RateLimit\tThe rate of message delivery in bits per second","summary":"<p>RateLimit\tThe rate of message delivery in bits per second</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":848,"url":null},"def":{"name":"rate_limit_bps","return_type":"UInt64 | ::Nil","visibility":"Public","body":"@rate_limit_bps"}},{"html_id":"replay_policy:ReplayPolicy-instance-method","name":"replay_policy","doc":"ReplayPolicy\tHow messages are sent ReplayInstant or ReplayOriginal","summary":"<p>ReplayPolicy\tHow messages are sent ReplayInstant or ReplayOriginal</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":842,"url":null},"def":{"name":"replay_policy","return_type":"ReplayPolicy","visibility":"Public","body":"@replay_policy"}},{"html_id":"sample_frequency:String?-instance-method","name":"sample_frequency","doc":"SampleFrequency\tWhat percentage of acknowledgements should be samples for observability, 0-100","summary":"<p>SampleFrequency\tWhat percentage of acknowledgements should be samples for observability, 0-100</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":844,"url":null},"def":{"name":"sample_frequency","return_type":"String | ::Nil","visibility":"Public","body":"@sample_frequency"}}],"types":[{"html_id":"nats/NATS/JetStream/API/V1/ConsumerConfig/AckPolicy","path":"NATS/JetStream/API/V1/ConsumerConfig/AckPolicy.html","kind":"enum","full_name":"NATS::JetStream::API::V1::ConsumerConfig::AckPolicy","name":"AckPolicy","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":879,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"None","name":"None","value":"0","doc":"No acknowledgements are required. All messages are considered\nacknowledged on delivery.","summary":"<p>No acknowledgements are required.</p>"},{"id":"All","name":"All","value":"1","doc":"Acknowledging a message acknowledges all messages that came before\nit.","summary":"<p>Acknowledging a message acknowledges all messages that came before it.</p>"},{"id":"Explicit","name":"Explicit","value":"2","doc":"Every message must be acknowledged individually. This is the\ndefault.","summary":"<p>Every message must be acknowledged individually.</p>"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/ConsumerConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::ConsumerConfig","name":"ConsumerConfig"},"doc":"The way this consumer expects messages to be acknowledged.\n\nSee [AckPolicy in the NATS server code](https://github.com/nats-io/nats-server/blob/3aa8e63b290ac4ba1c99193827b3f66ad5679904/server/consumer.go#L136-L143)","summary":"<p>The way this consumer expects messages to be acknowledged.</p>","instance_methods":[{"html_id":"all?-instance-method","name":"all?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":886,"url":null},"def":{"name":"all?","visibility":"Public","body":"self == All"}},{"html_id":"explicit?-instance-method","name":"explicit?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":890,"url":null},"def":{"name":"explicit?","visibility":"Public","body":"self == Explicit"}},{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":882,"url":null},"def":{"name":"none?","visibility":"Public","body":"self == None"}}]},{"html_id":"nats/NATS/JetStream/API/V1/ConsumerConfig/DeliverPolicy","path":"NATS/JetStream/API/V1/ConsumerConfig/DeliverPolicy.html","kind":"enum","full_name":"NATS::JetStream::API::V1::ConsumerConfig::DeliverPolicy","name":"DeliverPolicy","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":896,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"All","name":"All","value":"0","doc":"Deliver _all_ messages from a stream via this consumer","summary":"<p>Deliver <em>all</em> messages from a stream via this consumer</p>"},{"id":"Last","name":"Last","value":"1","doc":"Start from the current last message in the stream when this\nconsumer was created","summary":"<p>Start from the current last message in the stream when this consumer was created</p>"},{"id":"New","name":"New","value":"2","doc":"Start _after_ the current last message in the stream when this\nconsumer was created. This is different from `Last` in that it\nwill not begin delivering messages until more are published.","summary":"<p>Start <em>after</em> the current last message in the stream when this consumer was created.</p>"},{"id":"ByStartSequence","name":"ByStartSequence","value":"3","doc":"Start delivery at the sequence in the stream denoted by\n`opt_start_seq`. `opt_start_seq` is _required_ when this\n`DeliverPolicy` is used.","summary":"<p>Start delivery at the sequence in the stream denoted by <code>opt_start_seq</code>.</p>"},{"id":"ByStartTime","name":"ByStartTime","value":"4","doc":"Start delivery at the first message whose `timestamp` is equal to\nor later than `opt_start_time`. `opt_start_time` is _required\nwhen this `DeliverPolicy` is used.","summary":"<p>Start delivery at the first message whose <code>timestamp</code> is equal to or later than <code>opt_start_time</code>.</p>"},{"id":"LastPerSubject","name":"LastPerSubject","value":"5","doc":"Similar to `Last`, but on a per-subject basis.","summary":"<p>Similar to <code><a href=\"../../../../../NATS/JetStream/API/V1/ConsumerConfig/DeliverPolicy.html#Last\">Last</a></code>, but on a per-subject basis.</p>"},{"id":"Undefined","name":"Undefined","value":"6","doc":"If you've got this set, something's probably borked. This value\nonly exists in this client because [the server can send it](https://github.com/nats-io/nats-server/blob/3aa8e63b290ac4ba1c99193827b3f66ad5679904/server/consumer.go#L118-L119).","summary":"<p>If you've got this set, something's probably borked.</p>"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/ConsumerConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::ConsumerConfig","name":"ConsumerConfig"},"doc":"Where to begin consuming messages from a stream.\n\nSee [DeliverPolicy in the NATS server code](https://github.com/nats-io/nats-server/blob/3aa8e63b290ac4ba1c99193827b3f66ad5679904/server/consumer.go#L105-L120)","summary":"<p>Where to begin consuming messages from a stream.</p>","instance_methods":[{"html_id":"all?-instance-method","name":"all?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":898,"url":null},"def":{"name":"all?","visibility":"Public","body":"self == All"}},{"html_id":"by_start_sequence?-instance-method","name":"by_start_sequence?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":912,"url":null},"def":{"name":"by_start_sequence?","visibility":"Public","body":"self == ByStartSequence"}},{"html_id":"by_start_time?-instance-method","name":"by_start_time?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":917,"url":null},"def":{"name":"by_start_time?","visibility":"Public","body":"self == ByStartTime"}},{"html_id":"last?-instance-method","name":"last?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":902,"url":null},"def":{"name":"last?","visibility":"Public","body":"self == Last"}},{"html_id":"last_per_subject?-instance-method","name":"last_per_subject?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":920,"url":null},"def":{"name":"last_per_subject?","visibility":"Public","body":"self == LastPerSubject"}},{"html_id":"new?-instance-method","name":"new?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":907,"url":null},"def":{"name":"new?","visibility":"Public","body":"self == New"}},{"html_id":"undefined?-instance-method","name":"undefined?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":924,"url":null},"def":{"name":"undefined?","visibility":"Public","body":"self == Undefined"}}]},{"html_id":"nats/NATS/JetStream/API/V1/ConsumerConfig/ReplayPolicy","path":"NATS/JetStream/API/V1/ConsumerConfig/ReplayPolicy.html","kind":"enum","full_name":"NATS::JetStream::API::V1::ConsumerConfig::ReplayPolicy","name":"ReplayPolicy","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":931,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Instant","name":"Instant","value":"0","doc":"Tells the NATS server to deliver messages immediately","summary":"<p>Tells the NATS server to deliver messages immediately</p>"},{"id":"Original","name":"Original","value":"1","doc":"Tells the NATS server to deliver messages at the rate they were\noriginally published.","summary":"<p>Tells the NATS server to deliver messages at the rate they were originally published.</p>"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/ConsumerConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::ConsumerConfig","name":"ConsumerConfig"},"doc":"A consumer's `replay_policy` is the pace at which to replay messages\nfrom a stream.\n\nSee [ReplayPolicy in the NATS server code](https://github.com/nats-io/nats-server/blob/3aa8e63b290ac4ba1c99193827b3f66ad5679904/server/consumer.go#L157-L162)","summary":"<p>A consumer's <code>replay_policy</code> is the pace at which to replay messages from a stream.</p>","instance_methods":[{"html_id":"instant?-instance-method","name":"instant?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":933,"url":null},"def":{"name":"instant?","visibility":"Public","body":"self == Instant"}},{"html_id":"original?-instance-method","name":"original?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":937,"url":null},"def":{"name":"original?","visibility":"Public","body":"self == Original"}}]}]},{"html_id":"nats/NATS/JetStream/API/V1/ConsumerListResponse","path":"NATS/JetStream/API/V1/ConsumerListResponse.html","kind":"struct","full_name":"NATS::JetStream::API::V1::ConsumerListResponse","name":"ConsumerListResponse","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":941,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":941,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"consumers:Array(Consumer)-instance-method","name":"consumers","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":947,"url":null},"def":{"name":"consumers","return_type":"Array(Consumer)","visibility":"Public","body":"@consumers"}},{"html_id":"each(&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":949,"url":null},"def":{"name":"each","yields":1,"visibility":"Public","body":"consumers.each do |c|\n  yield c\nend"}},{"html_id":"limit:Int64-instance-method","name":"limit","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":946,"url":null},"def":{"name":"limit","return_type":"Int64","visibility":"Public","body":"@limit"}},{"html_id":"offset:Int64-instance-method","name":"offset","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":945,"url":null},"def":{"name":"offset","return_type":"Int64","visibility":"Public","body":"@offset"}},{"html_id":"total:Int64-instance-method","name":"total","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":944,"url":null},"def":{"name":"total","return_type":"Int64","visibility":"Public","body":"@total"}}]},{"html_id":"nats/NATS/JetStream/API/V1/Consumers","path":"NATS/JetStream/API/V1/Consumers.html","kind":"struct","full_name":"NATS::JetStream::API::V1::Consumers","name":"Consumers","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":472,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"doc":"A NATS JetStream consumer is a message index sourced from a stream.\nIt can apply additional filters and records which messages are pending,\nacknowledged, etc, at the consumer layer.","summary":"<p>A NATS JetStream consumer is a message index sourced from a stream.</p>","constructors":[{"html_id":"new(nats:NATS::Client)-class-method","name":"new","abstract":false,"args":[{"name":"nats","external_name":"nats","restriction":"::NATS::Client"}],"args_string":"(nats : NATS::Client)","args_html":"(nats : <a href=\"../../../../NATS/Client.html\">NATS::Client</a>)","location":{"filename":"src/jetstream.cr","line_number":473,"url":null},"def":{"name":"new","args":[{"name":"nats","external_name":"nats","restriction":"::NATS::Client"}],"visibility":"Public","body":"_ = allocate\n_.initialize(nats)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create(stream_name:String,deliver_policy:ConsumerConfig::DeliverPolicy=:all,ack_policy:ConsumerConfig::AckPolicy=:explicit,**properties):Consumer-instance-method","name":"create","doc":"Create a consumer for the given stream with the given properties,\nwhich are passed unmodified to `NATS::JetStream::API::V1::Consumer.new`.","summary":"<p>Create a consumer for the given stream with the given properties, which are passed unmodified to <code><a href=\"../../../../NATS/JetStream/API/V1/Consumer.html#new%28pull%3AJSON%3A%3APullParser%29-class-method\">NATS::JetStream::API::V1::Consumer.new</a></code>.</p>","abstract":false,"args":[{"name":"stream_name","external_name":"stream_name","restriction":"String"},{"name":"deliver_policy","default_value":":all","external_name":"deliver_policy","restriction":"ConsumerConfig::DeliverPolicy"},{"name":"ack_policy","default_value":":explicit","external_name":"ack_policy","restriction":"ConsumerConfig::AckPolicy"}],"args_string":"(stream_name : String, deliver_policy : ConsumerConfig::DeliverPolicy = :all, ack_policy : ConsumerConfig::AckPolicy = :explicit, **properties) : Consumer","args_html":"(stream_name : String, deliver_policy : <a href=\"../../../../NATS/JetStream/API/V1/ConsumerConfig/DeliverPolicy.html\">ConsumerConfig::DeliverPolicy</a> = <span class=\"n\">:all</span>, ack_policy : <a href=\"../../../../NATS/JetStream/API/V1/ConsumerConfig/AckPolicy.html\">ConsumerConfig::AckPolicy</a> = <span class=\"n\">:explicit</span>, **properties) : <a href=\"../../../../NATS/JetStream/API/V1/Consumer.html\">Consumer</a>","location":{"filename":"src/jetstream.cr","line_number":478,"url":null},"def":{"name":"create","args":[{"name":"stream_name","external_name":"stream_name","restriction":"String"},{"name":"deliver_policy","default_value":":all","external_name":"deliver_policy","restriction":"ConsumerConfig::DeliverPolicy"},{"name":"ack_policy","default_value":":explicit","external_name":"ack_policy","restriction":"ConsumerConfig::AckPolicy"}],"double_splat":{"name":"properties","external_name":"properties","restriction":""},"return_type":"Consumer","visibility":"Public","body":"consumer_config = NATS::JetStream::API::V1::ConsumerConfig.new(**properties, deliver_policy: deliver_policy, ack_policy: ack_policy)\ncreate_consumer = {stream_name: stream_name, config: consumer_config}\nif durable_name = consumer_config.durable_name\n  create_consumer_subject = \"$JS.API.CONSUMER.DURABLE.CREATE.#{stream_name}.#{durable_name}\"\nelse\n  create_consumer_subject = \"$JS.API.CONSUMER.CREATE.#{stream_name}\"\nend\nif response = @nats.request(create_consumer_subject, create_consumer.to_json)\nelse\n  raise(JetStream::Error.new(\"Did not receive a response from NATS JetStream\"))\nend\ncase parsed = (Consumer | ErrorResponse).from_json(response.data)\nin Consumer\n  parsed\nin ErrorResponse\n  raise(JetStream::Error.new(\"#{parsed.error.description} (#{parsed.error.code})\"))\nend\n"}},{"html_id":"delete(stream:String,consumer:String)-instance-method","name":"delete","doc":"Delete the consumer with the given name associated with the stream\nwith the given name.","summary":"<p>Delete the consumer with the given name associated with the stream with the given name.</p>","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"String"},{"name":"consumer","external_name":"consumer","restriction":"String"}],"args_string":"(stream : String, consumer : String)","args_html":"(stream : String, consumer : String)","location":{"filename":"src/jetstream.cr","line_number":545,"url":null},"def":{"name":"delete","args":[{"name":"stream","external_name":"stream","restriction":"String"},{"name":"consumer","external_name":"consumer","restriction":"String"}],"visibility":"Public","body":"@nats.request(\"$JS.API.CONSUMER.DELETE.#{stream}.#{consumer}\")"}},{"html_id":"delete(stream:JetStream::API::V1::Stream,consumer:JetStream::API::V1::Consumer)-instance-method","name":"delete","doc":"Delete the given consumer for the given stream","summary":"<p>Delete the given consumer for the given stream</p>","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"JetStream::API::V1::Stream"},{"name":"consumer","external_name":"consumer","restriction":"JetStream::API::V1::Consumer"}],"args_string":"(stream : JetStream::API::V1::Stream, consumer : JetStream::API::V1::Consumer)","args_html":"(stream : <a href=\"../../../../NATS/JetStream/API/V1/Stream.html\">JetStream::API::V1::Stream</a>, consumer : <a href=\"../../../../NATS/JetStream/API/V1/Consumer.html\">JetStream::API::V1::Consumer</a>)","location":{"filename":"src/jetstream.cr","line_number":539,"url":null},"def":{"name":"delete","args":[{"name":"stream","external_name":"stream","restriction":"JetStream::API::V1::Stream"},{"name":"consumer","external_name":"consumer","restriction":"JetStream::API::V1::Consumer"}],"visibility":"Public","body":"delete(stream.config.name, consumer.name)"}},{"html_id":"delete(consumer:JetStream::API::V1::Consumer)-instance-method","name":"delete","doc":"Delete the given consumer for the given stream","summary":"<p>Delete the given consumer for the given stream</p>","abstract":false,"args":[{"name":"consumer","external_name":"consumer","restriction":"JetStream::API::V1::Consumer"}],"args_string":"(consumer : JetStream::API::V1::Consumer)","args_html":"(consumer : <a href=\"../../../../NATS/JetStream/API/V1/Consumer.html\">JetStream::API::V1::Consumer</a>)","location":{"filename":"src/jetstream.cr","line_number":534,"url":null},"def":{"name":"delete","args":[{"name":"consumer","external_name":"consumer","restriction":"JetStream::API::V1::Consumer"}],"visibility":"Public","body":"delete(consumer.stream_name, consumer.name)"}},{"html_id":"info(stream_name:String,name:String)-instance-method","name":"info","doc":"Return the consumer with the specified `name` associated with the\ngiven stream.","summary":"<p>Return the consumer with the specified <code>name</code> associated with the given stream.</p>","abstract":false,"args":[{"name":"stream_name","external_name":"stream_name","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(stream_name : String, name : String)","args_html":"(stream_name : String, name : String)","location":{"filename":"src/jetstream.cr","line_number":525,"url":null},"def":{"name":"info","args":[{"name":"stream_name","external_name":"stream_name","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"if consumer_response = @nats.request(\"$JS.API.CONSUMER.INFO.#{stream_name}.#{name}\")\n  NATS::JetStream::API::V1::Consumer.from_json(consumer_response.data)\nelse\n  raise(\"no info for #{name.inspect} (stream #{stream_name.inspect})\")\nend"}},{"html_id":"list(stream_name:String)-instance-method","name":"list","doc":"Returns a paginated list of consumers for the stream with the\nspecified name.","summary":"<p>Returns a paginated list of consumers for the stream with the specified name.</p>","abstract":false,"args":[{"name":"stream_name","external_name":"stream_name","restriction":"String"}],"args_string":"(stream_name : String)","args_html":"(stream_name : String)","location":{"filename":"src/jetstream.cr","line_number":515,"url":null},"def":{"name":"list","args":[{"name":"stream_name","external_name":"stream_name","restriction":"String"}],"visibility":"Public","body":"if consumers_response = @nats.request(\"$JS.API.CONSUMER.LIST.#{stream_name}\")\n  NATS::JetStream::API::V1::ConsumerListResponse.from_json(consumers_response.data)\nelse\n  raise(\"whoops\")\nend"}},{"html_id":"list(stream:JetStream::API::V1::Stream)-instance-method","name":"list","doc":"Returns a paginated list of consumers for the specified stream.","summary":"<p>Returns a paginated list of consumers for the specified stream.</p>","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"JetStream::API::V1::Stream"}],"args_string":"(stream : JetStream::API::V1::Stream)","args_html":"(stream : <a href=\"../../../../NATS/JetStream/API/V1/Stream.html\">JetStream::API::V1::Stream</a>)","location":{"filename":"src/jetstream.cr","line_number":509,"url":null},"def":{"name":"list","args":[{"name":"stream","external_name":"stream","restriction":"JetStream::API::V1::Stream"}],"visibility":"Public","body":"list(stream.config.name)"}}]},{"html_id":"nats/NATS/JetStream/API/V1/ErrorResponse","path":"NATS/JetStream/API/V1/ErrorResponse.html","kind":"struct","full_name":"NATS::JetStream::API::V1::ErrorResponse","name":"ErrorResponse","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":321,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":322,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"error:Error-instance-method","name":"error","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":324,"url":null},"def":{"name":"error","return_type":"Error","visibility":"Public","body":"@error"}}],"types":[{"html_id":"nats/NATS/JetStream/API/V1/ErrorResponse/Error","path":"NATS/JetStream/API/V1/ErrorResponse/Error.html","kind":"struct","full_name":"NATS::JetStream::API::V1::ErrorResponse::Error","name":"Error","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":326,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/ErrorResponse","kind":"struct","full_name":"NATS::JetStream::API::V1::ErrorResponse","name":"ErrorResponse"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":327,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"code:Int32-instance-method","name":"code","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":329,"url":null},"def":{"name":"code","return_type":"Int32","visibility":"Public","body":"@code"}},{"html_id":"description:String-instance-method","name":"description","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":331,"url":null},"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"}},{"html_id":"err_code:Errors-instance-method","name":"err_code","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":330,"url":null},"def":{"name":"err_code","return_type":"Errors","visibility":"Public","body":"@err_code"}}]}]},{"html_id":"nats/NATS/JetStream/API/V1/ExternalStream","path":"NATS/JetStream/API/V1/ExternalStream.html","kind":"struct","full_name":"NATS::JetStream::API::V1::ExternalStream","name":"ExternalStream","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":568,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":568,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"api:String-instance-method","name":"api","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":569,"url":null},"def":{"name":"api","return_type":"String","visibility":"Public","body":"@api"}},{"html_id":"deliver:String-instance-method","name":"deliver","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":570,"url":null},"def":{"name":"deliver","return_type":"String","visibility":"Public","body":"@deliver"}}]},{"html_id":"nats/NATS/JetStream/API/V1/NanosecondsConverter","path":"NATS/JetStream/API/V1/NanosecondsConverter.html","kind":"module","full_name":"NATS::JetStream::API::V1::NanosecondsConverter","name":"NanosecondsConverter","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":969,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"class_methods":[{"html_id":"from_json(json:JSON::PullParser)-class-method","name":"from_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::PullParser"}],"args_string":"(json : JSON::PullParser)","args_html":"(json : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":974,"url":null},"def":{"name":"from_json","args":[{"name":"json","external_name":"json","restriction":"JSON::PullParser"}],"visibility":"Public","body":"json.read_int.nanoseconds"}},{"html_id":"to_json(span:Time::Span,json:JSON::Builder)-class-method","name":"to_json","abstract":false,"args":[{"name":"span","external_name":"span","restriction":"Time::Span"},{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(span : Time::Span, json : JSON::Builder)","args_html":"(span : Time::Span, json : JSON::Builder)","location":{"filename":"src/jetstream.cr","line_number":970,"url":null},"def":{"name":"to_json","args":[{"name":"span","external_name":"span","restriction":"Time::Span"},{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":"json.number(span.total_nanoseconds.to_i64)"}}]},{"html_id":"nats/NATS/JetStream/API/V1/PeerInfo","path":"NATS/JetStream/API/V1/PeerInfo.html","kind":"struct","full_name":"NATS::JetStream::API::V1::PeerInfo","name":"PeerInfo","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":960,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":960,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"active:Time::Span-instance-method","name":"active","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":965,"url":null},"def":{"name":"active","return_type":"Time::Span","visibility":"Public","body":"@active"}},{"html_id":"current?:Bool-instance-method","name":"current?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":962,"url":null},"def":{"name":"current?","return_type":"Bool","visibility":"Public","body":"@current"}},{"html_id":"lag:UInt64-instance-method","name":"lag","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":966,"url":null},"def":{"name":"lag","return_type":"UInt64","visibility":"Public","body":"@lag"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":961,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"offline?:Bool-instance-method","name":"offline?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":963,"url":null},"def":{"name":"offline?","return_type":"Bool","visibility":"Public","body":"@offline"}}]},{"html_id":"nats/NATS/JetStream/API/V1/PubAck","path":"NATS/JetStream/API/V1/PubAck.html","kind":"struct","full_name":"NATS::JetStream::API::V1::PubAck","name":"PubAck","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":335,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":336,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"domain:String?-instance-method","name":"domain","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":342,"url":null},"def":{"name":"domain","return_type":"String | ::Nil","visibility":"Public","body":"@domain"}},{"html_id":"duplicate:Bool?-instance-method","name":"duplicate","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":341,"url":null},"def":{"name":"duplicate","return_type":"Bool | ::Nil","visibility":"Public","body":"@duplicate"}},{"html_id":"sequence:Int64-instance-method","name":"sequence","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":340,"url":null},"def":{"name":"sequence","return_type":"Int64","visibility":"Public","body":"@sequence"}},{"html_id":"stream:String-instance-method","name":"stream","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":338,"url":null},"def":{"name":"stream","return_type":"String","visibility":"Public","body":"@stream"}}]},{"html_id":"nats/NATS/JetStream/API/V1/Stream","path":"NATS/JetStream/API/V1/Stream.html","kind":"struct","full_name":"NATS::JetStream::API::V1::Stream","name":"Stream","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":550,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":550,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"cluster:ClusterInfo?-instance-method","name":"cluster","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":554,"url":null},"def":{"name":"cluster","return_type":"ClusterInfo | ::Nil","visibility":"Public","body":"@cluster"}},{"html_id":"config:StreamConfig-instance-method","name":"config","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":551,"url":null},"def":{"name":"config","return_type":"StreamConfig","visibility":"Public","body":"@config"}},{"html_id":"created:Time-instance-method","name":"created","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":552,"url":null},"def":{"name":"created","return_type":"Time","visibility":"Public","body":"@created"}},{"html_id":"mirror:StreamSourceInfo?-instance-method","name":"mirror","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":555,"url":null},"def":{"name":"mirror","return_type":"StreamSourceInfo | ::Nil","visibility":"Public","body":"@mirror"}},{"html_id":"sources:Array(StreamSourceInfo)-instance-method","name":"sources","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":556,"url":null},"def":{"name":"sources","return_type":"Array(StreamSourceInfo)","visibility":"Public","body":"@sources"}},{"html_id":"state:StreamState-instance-method","name":"state","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":553,"url":null},"def":{"name":"state","return_type":"StreamState","visibility":"Public","body":"@state"}}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig","path":"NATS/JetStream/API/V1/StreamConfig.html","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamConfig","name":"StreamConfig","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":658,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(name,subjects,description=nil,max_age=nil,max_bytes=nil,max_msg_size=nil,max_msgs=nil,max_msgs_per_subject=nil,max_consumers=nil,no_ack=false,replicas=nil,retention:RetentionPolicy?=nil,allow_rollup_headers=nil,deny_delete=nil,discard:DiscardPolicy?=nil,storage:Storage=:file)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"subjects","external_name":"subjects","restriction":""},{"name":"description","default_value":"nil","external_name":"description","restriction":""},{"name":"max_age","default_value":"nil","external_name":"max_age","restriction":""},{"name":"max_bytes","default_value":"nil","external_name":"max_bytes","restriction":""},{"name":"max_msg_size","default_value":"nil","external_name":"max_msg_size","restriction":""},{"name":"max_msgs","default_value":"nil","external_name":"max_msgs","restriction":""},{"name":"max_msgs_per_subject","default_value":"nil","external_name":"max_msgs_per_subject","restriction":""},{"name":"max_consumers","default_value":"nil","external_name":"max_consumers","restriction":""},{"name":"no_ack","default_value":"false","external_name":"no_ack","restriction":""},{"name":"replicas","default_value":"nil","external_name":"replicas","restriction":""},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"RetentionPolicy | ::Nil"},{"name":"allow_rollup_headers","default_value":"nil","external_name":"allow_rollup_headers","restriction":""},{"name":"deny_delete","default_value":"nil","external_name":"deny_delete","restriction":""},{"name":"discard","default_value":"nil","external_name":"discard","restriction":"DiscardPolicy | ::Nil"},{"name":"storage","default_value":":file","external_name":"storage","restriction":"Storage"}],"args_string":"(name, subjects, description = nil, max_age = nil, max_bytes = nil, max_msg_size = nil, max_msgs = nil, max_msgs_per_subject = nil, max_consumers = nil, no_ack = false, replicas = nil, retention : RetentionPolicy? = nil, allow_rollup_headers = nil, deny_delete = nil, discard : DiscardPolicy? = nil, storage : Storage = :file)","args_html":"(name, subjects, description = <span class=\"n\">nil</span>, max_age = <span class=\"n\">nil</span>, max_bytes = <span class=\"n\">nil</span>, max_msg_size = <span class=\"n\">nil</span>, max_msgs = <span class=\"n\">nil</span>, max_msgs_per_subject = <span class=\"n\">nil</span>, max_consumers = <span class=\"n\">nil</span>, no_ack = <span class=\"n\">false</span>, replicas = <span class=\"n\">nil</span>, retention : <a href=\"../../../../NATS/JetStream/API/V1/StreamConfig/RetentionPolicy.html\">RetentionPolicy</a>? = <span class=\"n\">nil</span>, allow_rollup_headers = <span class=\"n\">nil</span>, deny_delete = <span class=\"n\">nil</span>, discard : <a href=\"../../../../NATS/JetStream/API/V1/StreamConfig/DiscardPolicy.html\">DiscardPolicy</a>? = <span class=\"n\">nil</span>, storage : <a href=\"../../../../NATS/JetStream/API/V1/StreamConfig/Storage.html\">Storage</a> = <span class=\"n\">:file</span>)","location":{"filename":"src/jetstream.cr","line_number":746,"url":null},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"subjects","external_name":"subjects","restriction":""},{"name":"description","default_value":"nil","external_name":"description","restriction":""},{"name":"max_age","default_value":"nil","external_name":"max_age","restriction":""},{"name":"max_bytes","default_value":"nil","external_name":"max_bytes","restriction":""},{"name":"max_msg_size","default_value":"nil","external_name":"max_msg_size","restriction":""},{"name":"max_msgs","default_value":"nil","external_name":"max_msgs","restriction":""},{"name":"max_msgs_per_subject","default_value":"nil","external_name":"max_msgs_per_subject","restriction":""},{"name":"max_consumers","default_value":"nil","external_name":"max_consumers","restriction":""},{"name":"no_ack","default_value":"false","external_name":"no_ack","restriction":""},{"name":"replicas","default_value":"nil","external_name":"replicas","restriction":""},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"RetentionPolicy | ::Nil"},{"name":"allow_rollup_headers","default_value":"nil","external_name":"allow_rollup_headers","restriction":""},{"name":"deny_delete","default_value":"nil","external_name":"deny_delete","restriction":""},{"name":"discard","default_value":"nil","external_name":"discard","restriction":"DiscardPolicy | ::Nil"},{"name":"storage","default_value":":file","external_name":"storage","restriction":"Storage"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, subjects, description, max_age, max_bytes, max_msg_size, max_msgs, max_msgs_per_subject, max_consumers, no_ack, replicas, retention, allow_rollup_headers, deny_delete, discard, storage)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":658,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"allow_rollup_headers?:Bool?-instance-method","name":"allow_rollup_headers?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":741,"url":null},"def":{"name":"allow_rollup_headers?","return_type":"Bool | ::Nil","visibility":"Public","body":"@allow_rollup_headers"}},{"html_id":"deny_delete?:Bool?-instance-method","name":"deny_delete?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":743,"url":null},"def":{"name":"deny_delete?","return_type":"Bool | ::Nil","visibility":"Public","body":"@deny_delete"}},{"html_id":"deny_purge?:Bool?-instance-method","name":"deny_purge?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":742,"url":null},"def":{"name":"deny_purge?","return_type":"Bool | ::Nil","visibility":"Public","body":"@deny_purge"}},{"html_id":"description:String?-instance-method","name":"description","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":719,"url":null},"def":{"name":"description","return_type":"String | ::Nil","visibility":"Public","body":"@description"}},{"html_id":"discard:DiscardPolicy?-instance-method","name":"discard","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":734,"url":null},"def":{"name":"discard","return_type":"DiscardPolicy | ::Nil","visibility":"Public","body":"@discard"}},{"html_id":"duplicate_window:Time::Span?-instance-method","name":"duplicate_window","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":739,"url":null},"def":{"name":"duplicate_window","return_type":"Time::Span | ::Nil","visibility":"Public","body":"@duplicate_window"}},{"html_id":"max_age:Time::Span?-instance-method","name":"max_age","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":725,"url":null},"def":{"name":"max_age","return_type":"Time::Span | ::Nil","visibility":"Public","body":"@max_age"}},{"html_id":"max_bytes:Int64?-instance-method","name":"max_bytes","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":726,"url":null},"def":{"name":"max_bytes","return_type":"Int64 | ::Nil","visibility":"Public","body":"@max_bytes"}},{"html_id":"max_consumers:Int32?-instance-method","name":"max_consumers","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":730,"url":null},"def":{"name":"max_consumers","return_type":"Int32 | ::Nil","visibility":"Public","body":"@max_consumers"}},{"html_id":"max_msg_size:Int32?-instance-method","name":"max_msg_size","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":727,"url":null},"def":{"name":"max_msg_size","return_type":"Int32 | ::Nil","visibility":"Public","body":"@max_msg_size"}},{"html_id":"max_msgs:Int64?-instance-method","name":"max_msgs","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":728,"url":null},"def":{"name":"max_msgs","return_type":"Int64 | ::Nil","visibility":"Public","body":"@max_msgs"}},{"html_id":"max_msgs_per_subject:Int64?-instance-method","name":"max_msgs_per_subject","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":729,"url":null},"def":{"name":"max_msgs_per_subject","return_type":"Int64 | ::Nil","visibility":"Public","body":"@max_msgs_per_subject"}},{"html_id":"mirror:StreamSourceInfo?-instance-method","name":"mirror","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":736,"url":null},"def":{"name":"mirror","return_type":"StreamSourceInfo | ::Nil","visibility":"Public","body":"@mirror"}},{"html_id":"name:String-instance-method","name":"name","doc":"Name of this stream","summary":"<p>Name of this stream</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":718,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"no_ack?:Bool?-instance-method","name":"no_ack?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":731,"url":null},"def":{"name":"no_ack?","return_type":"Bool | ::Nil","visibility":"Public","body":"@no_ack"}},{"html_id":"placement:Placement?-instance-method","name":"placement","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":735,"url":null},"def":{"name":"placement","return_type":"Placement | ::Nil","visibility":"Public","body":"@placement"}},{"html_id":"replicas:Int32?-instance-method","name":"replicas","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":732,"url":null},"def":{"name":"replicas","return_type":"Int32 | ::Nil","visibility":"Public","body":"@replicas"}},{"html_id":"retention:RetentionPolicy?-instance-method","name":"retention","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":733,"url":null},"def":{"name":"retention","return_type":"RetentionPolicy | ::Nil","visibility":"Public","body":"@retention"}},{"html_id":"sealed?:Bool?-instance-method","name":"sealed?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":744,"url":null},"def":{"name":"sealed?","return_type":"Bool | ::Nil","visibility":"Public","body":"@sealed"}},{"html_id":"sources:Array(StreamSourceInfo)-instance-method","name":"sources","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":737,"url":null},"def":{"name":"sources","return_type":"Array(StreamSourceInfo)","visibility":"Public","body":"@sources"}},{"html_id":"storage:Storage-instance-method","name":"storage","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":723,"url":null},"def":{"name":"storage","return_type":"Storage","visibility":"Public","body":"@storage"}},{"html_id":"subjects:Array(String)-instance-method","name":"subjects","doc":"Which subjects this stream will listen for.","summary":"<p>Which subjects this stream will listen for.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":722,"url":null},"def":{"name":"subjects","return_type":"Array(String)","visibility":"Public","body":"@subjects"}}],"types":[{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig/DiscardPolicy","path":"NATS/JetStream/API/V1/StreamConfig/DiscardPolicy.html","kind":"enum","full_name":"NATS::JetStream::API::V1::StreamConfig::DiscardPolicy","name":"DiscardPolicy","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":703,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Old","name":"Old","value":"0","doc":"Drop old messages when the stream has reached a count or volume\nlimit","summary":"<p>Drop old messages when the stream has reached a count or volume limit</p>"},{"id":"New","name":"New","value":"1","doc":"Don't add new messages until old ones are discarded","summary":"<p>Don't add new messages until old ones are discarded</p>"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamConfig","name":"StreamConfig"},"doc":"The `DiscardPolicy` tells the NATS server which end of the stream to\ntruncate when the stream is full — should we start dropping old\nmessages or avoid adding new ones?","summary":"<p>The <code><a href=\"../../../../../NATS/JetStream/API/V1/StreamConfig/DiscardPolicy.html\">DiscardPolicy</a></code> tells the NATS server which end of the stream to truncate when the stream is full — should we start dropping old messages or avoid adding new ones?</p>","instance_methods":[{"html_id":"new?-instance-method","name":"new?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":709,"url":null},"def":{"name":"new?","visibility":"Public","body":"self == New"}},{"html_id":"old?-instance-method","name":"old?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":706,"url":null},"def":{"name":"old?","visibility":"Public","body":"self == Old"}}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig/Placement","path":"NATS/JetStream/API/V1/StreamConfig/Placement.html","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamConfig::Placement","name":"Placement","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":712,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamConfig","name":"StreamConfig"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":712,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"cluster:String-instance-method","name":"cluster","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":713,"url":null},"def":{"name":"cluster","return_type":"String","visibility":"Public","body":"@cluster"}},{"html_id":"tags:Array(String)-instance-method","name":"tags","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":714,"url":null},"def":{"name":"tags","return_type":"Array(String)","visibility":"Public","body":"@tags"}}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig/RetentionPolicy","path":"NATS/JetStream/API/V1/StreamConfig/RetentionPolicy.html","kind":"enum","full_name":"NATS::JetStream::API::V1::StreamConfig::RetentionPolicy","name":"RetentionPolicy","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":684,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Limits","name":"Limits","value":"0","doc":"Discard messages when the stream has reached the limit of either\nthe number of messages or the total stream size in bytes, or the\nmessage's max age has passed.","summary":"<p>Discard messages when the stream has reached the limit of either the number of messages or the total stream size in bytes, or the message's max age has passed.</p>"},{"id":"Interest","name":"Interest","value":"1","doc":"Discard a message when all subscribed consumers have acknowledged\nit to guarantee delivery but not keep the message in memory. This\nis the default behavior of AMQP.","summary":"<p>Discard a message when all subscribed consumers have acknowledged it to guarantee delivery but not keep the message in memory.</p>"},{"id":"Workqueue","name":"Workqueue","value":"2","doc":"Discard a message when the first consumer has acknowledged it, as\nin a work queue like Sidekiq.","summary":"<p>Discard a message when the first consumer has acknowledged it, as in a work queue like Sidekiq.</p>"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamConfig","name":"StreamConfig"},"doc":"The `RetentionPolicy` tells the NATS server when messages can be\ndiscarded. Your options are to wait until the a quantity/volume/time\nlimit has been reached, _all_ consumers have acknowledged, or _any_\nconsumers have acknowledged.\n\n```\njetstream.stream.create(\n  # ...\n  retention: :workqueue,\n)\n```","summary":"<p>The <code><a href=\"../../../../../NATS/JetStream/API/V1/StreamConfig/RetentionPolicy.html\">RetentionPolicy</a></code> tells the NATS server when messages can be discarded.</p>","instance_methods":[{"html_id":"interest?-instance-method","name":"interest?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":693,"url":null},"def":{"name":"interest?","visibility":"Public","body":"self == Interest"}},{"html_id":"limits?-instance-method","name":"limits?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":688,"url":null},"def":{"name":"limits?","visibility":"Public","body":"self == Limits"}},{"html_id":"workqueue?-instance-method","name":"workqueue?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":697,"url":null},"def":{"name":"workqueue?","visibility":"Public","body":"self == Workqueue"}}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig/Storage","path":"NATS/JetStream/API/V1/StreamConfig/Storage.html","kind":"enum","full_name":"NATS::JetStream::API::V1::StreamConfig::Storage","name":"Storage","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":661,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Memory","name":"Memory","value":"0","doc":"Store messages in memory. This is the fastest, but is not durable.\nIf the NATS server is restarted for any reason, the stream will\nbe dropped. Using this option may also increase the amount of\nmemory required by your NATS server. Use with caution.","summary":"<p>Store messages in memory.</p>"},{"id":"File","name":"File","value":"1","doc":"Store messages on disk. Always use this if your system depends on\n100% delivery.","summary":"<p>Store messages on disk.</p>"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/StreamConfig","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamConfig","name":"StreamConfig"},"doc":"The `Storage` parameter tells the NATS server how to store the\nmessages in the stream.","summary":"<p>The <code><a href=\"../../../../../NATS/JetStream/API/V1/StreamConfig/Storage.html\">Storage</a></code> parameter tells the NATS server how to store the messages in the stream.</p>","instance_methods":[{"html_id":"file?-instance-method","name":"file?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":670,"url":null},"def":{"name":"file?","visibility":"Public","body":"self == File"}},{"html_id":"memory?-instance-method","name":"memory?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":666,"url":null},"def":{"name":"memory?","visibility":"Public","body":"self == Memory"}}]}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamGetMsgResponse","path":"NATS/JetStream/API/V1/StreamGetMsgResponse.html","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamGetMsgResponse","name":"StreamGetMsgResponse","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":592,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":592,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"message:Message-instance-method","name":"message","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":593,"url":null},"def":{"name":"message","return_type":"Message","visibility":"Public","body":"@message"}}],"types":[{"html_id":"nats/NATS/JetStream/API/V1/StreamGetMsgResponse/Message","path":"NATS/JetStream/API/V1/StreamGetMsgResponse/Message.html","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamGetMsgResponse::Message","name":"Message","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":595,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/StreamGetMsgResponse","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamGetMsgResponse","name":"StreamGetMsgResponse"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":596,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"data:String-instance-method","name":"data","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":602,"url":null},"def":{"name":"data","return_type":"String","visibility":"Public","body":"if (value = @data).nil?\n  @data = (String.new(raw_data))\nelse\n  value\nend"}},{"html_id":"headers:Headers-instance-method","name":"headers","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":604,"url":null},"def":{"name":"headers","return_type":"Headers","visibility":"Public","body":"if (value = @headers).nil?\n  @headers = (HTTP::Headers.new)\nelse\n  value\nend"}},{"html_id":"on_to_json(builder:JSON::Builder):Nil-instance-method","name":"on_to_json","abstract":false,"args":[{"name":"builder","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","args_html":"(builder : JSON::Builder) : Nil","location":{"filename":"src/jetstream.cr","line_number":607,"url":null},"def":{"name":"on_to_json","args":[{"name":"builder","external_name":"builder","restriction":"JSON::Builder"}],"return_type":"Nil","visibility":"Public","body":"builder.field(\"data\", data)"}},{"html_id":"raw_data:Bytes-instance-method","name":"raw_data","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":600,"url":null},"def":{"name":"raw_data","return_type":"Bytes","visibility":"Public","body":"@raw_data"}},{"html_id":"seq:Int64-instance-method","name":"seq","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":598,"url":null},"def":{"name":"seq","return_type":"Int64","visibility":"Public","body":"@seq"}},{"html_id":"subject:String-instance-method","name":"subject","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":597,"url":null},"def":{"name":"subject","return_type":"String","visibility":"Public","body":"@subject"}},{"html_id":"time:Time-instance-method","name":"time","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":605,"url":null},"def":{"name":"time","return_type":"Time","visibility":"Public","body":"@time"}}],"types":[{"html_id":"nats/NATS/JetStream/API/V1/StreamGetMsgResponse/Message/Base64Data","path":"NATS/JetStream/API/V1/StreamGetMsgResponse/Message/Base64Data.html","kind":"module","full_name":"NATS::JetStream::API::V1::StreamGetMsgResponse::Message::Base64Data","name":"Base64Data","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":613,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1/StreamGetMsgResponse/Message","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamGetMsgResponse::Message","name":"Message"},"class_methods":[{"html_id":"from_json(json:JSON::PullParser)-class-method","name":"from_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::PullParser"}],"args_string":"(json : JSON::PullParser)","args_html":"(json : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":614,"url":null},"def":{"name":"from_json","args":[{"name":"json","external_name":"json","restriction":"JSON::PullParser"}],"visibility":"Public","body":"::Base64.decode(json.read_string)"}},{"html_id":"to_json(json:JSON::Builder,value:Bytes)-class-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"},{"name":"value","external_name":"value","restriction":"Bytes"}],"args_string":"(json : JSON::Builder, value : Bytes)","args_html":"(json : JSON::Builder, value : Bytes)","location":{"filename":"src/jetstream.cr","line_number":618,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"},{"name":"value","external_name":"value","restriction":"Bytes"}],"visibility":"Public","body":"json.string(::Base64.encode(value))"}}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamGetMsgResponse/Message/HeadersConverter","path":"NATS/JetStream/API/V1/StreamGetMsgResponse/Message/HeadersConverter.html","kind":"module","full_name":"NATS::JetStream::API::V1::StreamGetMsgResponse::Message::HeadersConverter","name":"HeadersConverter","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":623,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1/StreamGetMsgResponse/Message","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamGetMsgResponse::Message","name":"Message"},"class_methods":[{"html_id":"from_json(json:JSON::PullParser)-class-method","name":"from_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::PullParser"}],"args_string":"(json : JSON::PullParser)","args_html":"(json : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":624,"url":null},"def":{"name":"from_json","args":[{"name":"json","external_name":"json","restriction":"JSON::PullParser"}],"visibility":"Public","body":"if string = json.read_string_or_null\n  raw = Base64.decode_string(string)\n  headers = HTTP::Headers.new\n  raw.each_line do |line|\n    if separator_index = line.index(':')\n      key = line[0...separator_index]\n      value = line[(separator_index + 2)..]\n      headers.add(key, value)\n    end\n  end\n  headers\nend"}}]}]}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamListResponse","path":"NATS/JetStream/API/V1/StreamListResponse.html","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamListResponse","name":"StreamListResponse","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":579,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":579,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"each(&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":587,"url":null},"def":{"name":"each","yields":1,"visibility":"Public","body":"streams.each do |s|\n  yield s\nend"}},{"html_id":"limit:Int64-instance-method","name":"limit","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":584,"url":null},"def":{"name":"limit","return_type":"Int64","visibility":"Public","body":"@limit"}},{"html_id":"offset:Int64-instance-method","name":"offset","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":583,"url":null},"def":{"name":"offset","return_type":"Int64","visibility":"Public","body":"@offset"}},{"html_id":"streams:Array(Stream)-instance-method","name":"streams","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":585,"url":null},"def":{"name":"streams","return_type":"Array(Stream)","visibility":"Public","body":"@streams"}},{"html_id":"total:Int64-instance-method","name":"total","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":582,"url":null},"def":{"name":"total","return_type":"Int64","visibility":"Public","body":"@total"}}]},{"html_id":"nats/NATS/JetStream/API/V1/Streams","path":"NATS/JetStream/API/V1/Streams.html","kind":"struct","full_name":"NATS::JetStream::API::V1::Streams","name":"Streams","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":349,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"doc":"A stream in NATS JetStream represents the history of messages\npertaining to a given domain. When you publish a message to a subject\nthat a stream is monitoring, the stream then adds that message to its\nhistory in the order it was published.","summary":"<p>A stream in NATS JetStream represents the history of messages pertaining to a given domain.</p>","constructors":[{"html_id":"new(nats:NATS::Client)-class-method","name":"new","abstract":false,"args":[{"name":"nats","external_name":"nats","restriction":"::NATS::Client"}],"args_string":"(nats : NATS::Client)","args_html":"(nats : <a href=\"../../../../NATS/Client.html\">NATS::Client</a>)","location":{"filename":"src/jetstream.cr","line_number":350,"url":null},"def":{"name":"new","args":[{"name":"nats","external_name":"nats","restriction":"::NATS::Client"}],"visibility":"Public","body":"_ = allocate\n_.initialize(nats)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create(storage:StreamConfig::Storage,retention:StreamConfig::RetentionPolicy?=nil,discard:StreamConfig::DiscardPolicy?=nil,**kwargs)-instance-method","name":"create","doc":"Create a stream of the given storage type and with the given\nproperties, which are passed unmodified to\n`NATS::JetStream::API::V1::StreamConfig.new`.","summary":"<p>Create a stream of the given storage type and with the given properties, which are passed unmodified to <code><a href=\"../../../../NATS/JetStream/API/V1/StreamConfig.html#new%28name%2Csubjects%2Cdescription%3Dnil%2Cmax_age%3Dnil%2Cmax_bytes%3Dnil%2Cmax_msg_size%3Dnil%2Cmax_msgs%3Dnil%2Cmax_msgs_per_subject%3Dnil%2Cmax_consumers%3Dnil%2Cno_ack%3Dfalse%2Creplicas%3Dnil%2Cretention%3ARetentionPolicy%3F%3Dnil%2Callow_rollup_headers%3Dnil%2Cdeny_delete%3Dnil%2Cdiscard%3ADiscardPolicy%3F%3Dnil%2Cstorage%3AStorage%3D%3Afile%29-class-method\">NATS::JetStream::API::V1::StreamConfig.new</a></code>.</p>","abstract":false,"args":[{"name":"storage","external_name":"storage","restriction":"StreamConfig::Storage"},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"StreamConfig::RetentionPolicy | ::Nil"},{"name":"discard","default_value":"nil","external_name":"discard","restriction":"StreamConfig::DiscardPolicy | ::Nil"}],"args_string":"(storage : StreamConfig::Storage, retention : StreamConfig::RetentionPolicy? = nil, discard : StreamConfig::DiscardPolicy? = nil, **kwargs)","args_html":"(storage : <a href=\"../../../../NATS/JetStream/API/V1/StreamConfig/Storage.html\">StreamConfig::Storage</a>, retention : <a href=\"../../../../NATS/JetStream/API/V1/StreamConfig/RetentionPolicy.html\">StreamConfig::RetentionPolicy</a>? = <span class=\"n\">nil</span>, discard : <a href=\"../../../../NATS/JetStream/API/V1/StreamConfig/DiscardPolicy.html\">StreamConfig::DiscardPolicy</a>? = <span class=\"n\">nil</span>, **kwargs)","location":{"filename":"src/jetstream.cr","line_number":356,"url":null},"def":{"name":"create","args":[{"name":"storage","external_name":"storage","restriction":"StreamConfig::Storage"},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"StreamConfig::RetentionPolicy | ::Nil"},{"name":"discard","default_value":"nil","external_name":"discard","restriction":"StreamConfig::DiscardPolicy | ::Nil"}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"visibility":"Public","body":"begin\n  create_stream = JetStream::API::V1::StreamConfig.new(**kwargs, storage: storage, retention: retention, discard: discard)\n  if create_stream.name.includes?('.')\n    raise(JetStream::Error.new(\"Cannot create stream with '.' in the name\"))\n  end\n  if response = @nats.request(\"$JS.API.STREAM.CREATE.#{create_stream.name}\", create_stream.to_json)\n    case parsed = (JetStream::API::V1::Stream | ErrorResponse).from_json(response.data)\n    when ErrorResponse\n      raise(JetStream::Error.new(\"#{parsed.error.description} (#{parsed.error.code})\"))\n    else\n      parsed\n    end\n  else\n    raise(JetStream::Error.new(\"Did not receive a response from NATS JetStream\"))\n  end\nrescue ex\n  raise(ex)\nend"}},{"html_id":"delete(stream:String)-instance-method","name":"delete","doc":"Delete the stream with the given name","summary":"<p>Delete the stream with the given name</p>","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"String"}],"args_string":"(stream : String)","args_html":"(stream : String)","location":{"filename":"src/jetstream.cr","line_number":420,"url":null},"def":{"name":"delete","args":[{"name":"stream","external_name":"stream","restriction":"String"}],"visibility":"Public","body":"@nats.request(\"$JS.API.STREAM.DELETE.#{stream}\")"}},{"html_id":"delete(stream:JetStream::API::V1::Stream)-instance-method","name":"delete","doc":"Delete the given stream","summary":"<p>Delete the given stream</p>","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"JetStream::API::V1::Stream"}],"args_string":"(stream : JetStream::API::V1::Stream)","args_html":"(stream : <a href=\"../../../../NATS/JetStream/API/V1/Stream.html\">JetStream::API::V1::Stream</a>)","location":{"filename":"src/jetstream.cr","line_number":415,"url":null},"def":{"name":"delete","args":[{"name":"stream","external_name":"stream","restriction":"JetStream::API::V1::Stream"}],"visibility":"Public","body":"delete(stream.config.name)"}},{"html_id":"get_msg(stream:String,*,last_by_subject:String)-instance-method","name":"get_msg","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"last_by_subject","external_name":"last_by_subject","restriction":"String"}],"args_string":"(stream : String, *, last_by_subject : String)","args_html":"(stream : String, *, last_by_subject : String)","location":{"filename":"src/jetstream.cr","line_number":424,"url":null},"def":{"name":"get_msg","args":[{"name":"stream","external_name":"stream","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"last_by_subject","external_name":"last_by_subject","restriction":"String"}],"splat_index":1,"visibility":"Public","body":"get_msg(stream, {last_by_subj: last_by_subject})"}},{"html_id":"get_msg(stream:String,*,sequence:Int)-instance-method","name":"get_msg","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"sequence","external_name":"sequence","restriction":"Int"}],"args_string":"(stream : String, *, sequence : Int)","args_html":"(stream : String, *, sequence : Int)","location":{"filename":"src/jetstream.cr","line_number":428,"url":null},"def":{"name":"get_msg","args":[{"name":"stream","external_name":"stream","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"sequence","external_name":"sequence","restriction":"Int"}],"splat_index":1,"visibility":"Public","body":"get_msg(stream, {seq: sequence})"}},{"html_id":"info(name:String):NATS::JetStream::API::V1::Stream?-instance-method","name":"info","doc":"Get the current state of the stream with the given `name`","summary":"<p>Get the current state of the stream with the given <code>name</code></p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : NATS::JetStream::API::V1::Stream?","args_html":"(name : String) : <a href=\"../../../../NATS/JetStream/API/V1/Stream.html\">NATS::JetStream::API::V1::Stream</a>?","location":{"filename":"src/jetstream.cr","line_number":397,"url":null},"def":{"name":"info","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"::NATS::JetStream::API::V1::Stream | ::Nil","visibility":"Public","body":"if response = @nats.request(\"$JS.API.STREAM.INFO.#{name}\")\n  case parsed = (Stream | ErrorResponse).from_json(response.data)\n  in Stream\n    parsed\n  in ErrorResponse\n    if parsed.error.err_code.stream_not_found?\n      nil\n    else\n      raise(Error.new(parsed.error.description))\n    end\n  end\nelse\n  raise(Error.new(\"Response timed out while fetching stream #{name.inspect}\"))\nend"}},{"html_id":"list(subject:String?=nil)-instance-method","name":"list","doc":"List all available streams","summary":"<p>List all available streams</p>","abstract":false,"args":[{"name":"subject","default_value":"nil","external_name":"subject","restriction":"String | ::Nil"}],"args_string":"(subject : String? = nil)","args_html":"(subject : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/jetstream.cr","line_number":388,"url":null},"def":{"name":"list","args":[{"name":"subject","default_value":"nil","external_name":"subject","restriction":"String | ::Nil"}],"visibility":"Public","body":"if response = @nats.request(\"$JS.API.STREAM.LIST\", {subject: subject}.to_json)\n  NATS::JetStream::API::V1::StreamListResponse.from_json(response.data)\nelse\n  raise(\"whoops\")\nend"}},{"html_id":"purge(stream:String,subject:String):Int64-instance-method","name":"purge","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"String"},{"name":"subject","external_name":"subject","restriction":"String"}],"args_string":"(stream : String, subject : String) : Int64","args_html":"(stream : String, subject : String) : Int64","location":{"filename":"src/jetstream.cr","line_number":449,"url":null},"def":{"name":"purge","args":[{"name":"stream","external_name":"stream","restriction":"String"},{"name":"subject","external_name":"subject","restriction":"String"}],"return_type":"Int64","visibility":"Public","body":"if response = @nats.request(\"$JS.API.STREAM.PURGE.#{stream}\", {filter: subject}.to_json)\n  case parsed = (PurgeStreamResponse | ErrorResponse).from_json(response.data)\n  in PurgeStreamResponse\n    parsed.purged\n  in ErrorResponse\n    raise(Error.new(parsed.error.description))\n  end\nelse\n  raise(Error.new(\"Did not receive a response when purging stream #{stream.inspect} of subject #{subject.inspect}\"))\nend"}}],"types":[{"html_id":"nats/NATS/JetStream/API/V1/Streams/PurgeStreamResponse","path":"NATS/JetStream/API/V1/Streams/PurgeStreamResponse.html","kind":"struct","full_name":"NATS::JetStream::API::V1::Streams::PurgeStreamResponse","name":"PurgeStreamResponse","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":462,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"nats/NATS/JetStream/API/V1/Streams","kind":"struct","full_name":"NATS::JetStream::API::V1::Streams","name":"Streams"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":463,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"purged:Int64-instance-method","name":"purged","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":465,"url":null},"def":{"name":"purged","return_type":"Int64","visibility":"Public","body":"@purged"}}]}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamSourceInfo","path":"NATS/JetStream/API/V1/StreamSourceInfo.html","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamSourceInfo","name":"StreamSourceInfo","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":559,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":559,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"active:Time::Span-instance-method","name":"active","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":564,"url":null},"def":{"name":"active","return_type":"Time::Span","visibility":"Public","body":"@active"}},{"html_id":"error:APIError?-instance-method","name":"error","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":565,"url":null},"def":{"name":"error","return_type":"APIError | ::Nil","visibility":"Public","body":"@error"}},{"html_id":"external:ExternalStream?-instance-method","name":"external","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":561,"url":null},"def":{"name":"external","return_type":"ExternalStream | ::Nil","visibility":"Public","body":"@external"}},{"html_id":"lag:UInt64-instance-method","name":"lag","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":562,"url":null},"def":{"name":"lag","return_type":"UInt64","visibility":"Public","body":"@lag"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":560,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}}]},{"html_id":"nats/NATS/JetStream/API/V1/StreamState","path":"NATS/JetStream/API/V1/StreamState.html","kind":"struct","full_name":"NATS::JetStream::API::V1::StreamState","name":"StreamState","abstract":false,"superclass":{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},"ancestors":[{"html_id":"nats/NATS/JetStream/API/Message","kind":"struct","full_name":"NATS::JetStream::API::Message","name":"Message"},{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":648,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/API/V1","kind":"module","full_name":"NATS::JetStream::API::V1","name":"V1"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":648,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"bytes:Int64-instance-method","name":"bytes","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":650,"url":null},"def":{"name":"bytes","return_type":"Int64","visibility":"Public","body":"@bytes"}},{"html_id":"consumer_count:Int32-instance-method","name":"consumer_count","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":655,"url":null},"def":{"name":"consumer_count","return_type":"Int32","visibility":"Public","body":"@consumer_count"}},{"html_id":"first_seq:Int64-instance-method","name":"first_seq","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":651,"url":null},"def":{"name":"first_seq","return_type":"Int64","visibility":"Public","body":"@first_seq"}},{"html_id":"first_ts:Time-instance-method","name":"first_ts","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":652,"url":null},"def":{"name":"first_ts","return_type":"Time","visibility":"Public","body":"@first_ts"}},{"html_id":"last_seq:Int64-instance-method","name":"last_seq","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":653,"url":null},"def":{"name":"last_seq","return_type":"Int64","visibility":"Public","body":"@last_seq"}},{"html_id":"last_ts:Time-instance-method","name":"last_ts","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":654,"url":null},"def":{"name":"last_ts","return_type":"Time","visibility":"Public","body":"@last_ts"}},{"html_id":"messages:Int64-instance-method","name":"messages","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":649,"url":null},"def":{"name":"messages","return_type":"Int64","visibility":"Public","body":"@messages"}}]}]}]},{"html_id":"nats/NATS/JetStream/Client","path":"NATS/JetStream/Client.html","kind":"class","full_name":"NATS::JetStream::Client","name":"Client","abstract":false,"superclass":{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":31,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream","kind":"module","full_name":"NATS::JetStream","name":"JetStream"},"doc":"This class provides a client for NATS JetStream for at-least-once delivery.\nYou can either instantiate it with a NATS client or with the\n`NATS::Client#jetstream` method as a shortcut.","summary":"<p>This class provides a client for NATS JetStream for at-least-once delivery.</p>","constructors":[{"html_id":"new(nats:NATS::Client)-class-method","name":"new","abstract":false,"args":[{"name":"nats","external_name":"nats","restriction":"::NATS::Client"}],"args_string":"(nats : NATS::Client)","args_html":"(nats : <a href=\"../../NATS/Client.html\">NATS::Client</a>)","location":{"filename":"src/jetstream.cr","line_number":32,"url":null},"def":{"name":"new","args":[{"name":"nats","external_name":"nats","restriction":"::NATS::Client"}],"visibility":"Public","body":"_ = allocate\n_.initialize(nats)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"ack(msg:Message)-instance-method","name":"ack","doc":"Acknowledge success processing the specified message, usually called at\nthe end of your subscription block.\n\n```\njetstream.subscribe consumer do |msg|\n  # ...\n\n  jetstream.ack msg\nend\n```","summary":"<p>Acknowledge success processing the specified message, usually called at the end of your subscription block.</p>","abstract":false,"args":[{"name":"msg","external_name":"msg","restriction":"Message"}],"args_string":"(msg : Message)","args_html":"(msg : <a href=\"../../NATS/JetStream/Message.html\">Message</a>)","location":{"filename":"src/jetstream.cr","line_number":167,"url":null},"def":{"name":"ack","args":[{"name":"msg","external_name":"msg","restriction":"Message"}],"visibility":"Public","body":"@nats.publish(msg.reply_to, \"+ACK\")"}},{"html_id":"consumer-instance-method","name":"consumer","doc":"Returns an `API::Consumer` instance to interact with the NATS JetStream\nAPI for consumers.","summary":"<p>Returns an <code>API::Consumer</code> instance to interact with the NATS JetStream API for consumers.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":43,"url":null},"def":{"name":"consumer","visibility":"Public","body":"Consumers.new(@nats)"}},{"html_id":"nack(msg:Message)-instance-method","name":"nack","doc":"Negatively acknowledge the processing of a message, typically called\nwhen an exception is raised while processing.\n\n```\njetstream.subscribe consumer do |msg|\n  # doing some work\n\n  jetstream.ack msg # Successfully processed\n\n\nrescue ex\n  jetstream.nack msg # Processing was unsuccessful, try again.\nend\n```\n\nYou can also implement exponential backoff by pushing the nack into a\nfiber that sleeps for some time before:\n\n```\njetstream.subscribe consumer do |msg|\n  # ...\n\n\nrescue ex\n  # Very important to do this in a `spawn`. Do not block the `subscribe`\n  # handler for more than 1-2 seconds or the NATS server will see you as\n  # a slow client and terminate the connection.\n  spawn do\n    # Sleep at most for the amount of time that NATS will wait to redeliver\n    backoff = {\n      (2 ** msg.delivered_count).milliseconds,\n      # Cap backoff because NATS will redeliver it before this time anyway\n      consumer.config.ack_wait || 30.seconds,\n    }.min\n    sleep backoff\n    jetstream.nack msg\n  end\nend\n```","summary":"<p>Negatively acknowledge the processing of a message, typically called when an exception is raised while processing.</p>","abstract":false,"args":[{"name":"msg","external_name":"msg","restriction":"Message"}],"args_string":"(msg : Message)","args_html":"(msg : <a href=\"../../NATS/JetStream/Message.html\">Message</a>)","location":{"filename":"src/jetstream.cr","line_number":210,"url":null},"def":{"name":"nack","args":[{"name":"msg","external_name":"msg","restriction":"Message"}],"visibility":"Public","body":"@nats.publish(msg.reply_to, \"-NAK\")"}},{"html_id":"publish(subject:String,data:Payload,timeout:Time::Span=2.seconds,headers:Headers=HTTP::Headers.new,message_id:String?=nil,expected_last_message_id:String?=nil,expected_last_sequence:Int64?=nil,expected_stream:String?=nil,expected_last_subject_sequence:Int64?=nil)-instance-method","name":"publish","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"data","external_name":"data","restriction":"Payload"},{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":"Time::Span"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":"Headers"},{"name":"message_id","default_value":"nil","external_name":"message_id","restriction":"String | ::Nil"},{"name":"expected_last_message_id","default_value":"nil","external_name":"expected_last_message_id","restriction":"String | ::Nil"},{"name":"expected_last_sequence","default_value":"nil","external_name":"expected_last_sequence","restriction":"Int64 | ::Nil"},{"name":"expected_stream","default_value":"nil","external_name":"expected_stream","restriction":"String | ::Nil"},{"name":"expected_last_subject_sequence","default_value":"nil","external_name":"expected_last_subject_sequence","restriction":"Int64 | ::Nil"}],"args_string":"(subject : String, data : Payload, timeout : Time::Span = 2.seconds, headers : Headers = HTTP::Headers.new, message_id : String? = nil, expected_last_message_id : String? = nil, expected_last_sequence : Int64? = nil, expected_stream : String? = nil, expected_last_subject_sequence : Int64? = nil)","args_html":"(subject : String, data : <a href=\"../../NATS/Payload.html\">Payload</a>, timeout : Time::Span = <span class=\"n\">2</span>.seconds, headers : <a href=\"../../NATS/JetStream/Headers.html\">Headers</a> = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>, message_id : String? = <span class=\"n\">nil</span>, expected_last_message_id : String? = <span class=\"n\">nil</span>, expected_last_sequence : Int64? = <span class=\"n\">nil</span>, expected_stream : String? = <span class=\"n\">nil</span>, expected_last_subject_sequence : Int64? = <span class=\"n\">nil</span>)","location":{"filename":"src/jetstream.cr","line_number":47,"url":null},"def":{"name":"publish","args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"data","external_name":"data","restriction":"Payload"},{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":"Time::Span"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":"Headers"},{"name":"message_id","default_value":"nil","external_name":"message_id","restriction":"String | ::Nil"},{"name":"expected_last_message_id","default_value":"nil","external_name":"expected_last_message_id","restriction":"String | ::Nil"},{"name":"expected_last_sequence","default_value":"nil","external_name":"expected_last_sequence","restriction":"Int64 | ::Nil"},{"name":"expected_stream","default_value":"nil","external_name":"expected_stream","restriction":"String | ::Nil"},{"name":"expected_last_subject_sequence","default_value":"nil","external_name":"expected_last_subject_sequence","restriction":"Int64 | ::Nil"}],"visibility":"Public","body":"if message_id\n  headers[\"Nats-Msg-Id\"] = message_id\nend\nif expected_last_message_id\n  headers[\"Nats-Expected-Last-Msg-Id\"] = expected_last_message_id\nend\nif expected_stream\n  headers[\"Nats-Expected-Stream\"] = expected_stream\nend\nif expected_last_sequence\n  headers[\"Nats-Expected-Last-Sequence\"] = expected_last_sequence\nend\nif expected_last_subject_sequence\n  headers[\"Nats-Expected-Last-Subject-Sequence\"] = expected_last_subject_sequence\nend\nif response = @nats.request(subject, data, timeout: timeout, headers: headers)\n  (API::V1::PubAck | API::V1::ErrorResponse).from_json(response.data)\nend\n"}},{"html_id":"pull_subscribe(consumer:API::V1::Consumer,backlog:Int=64)-instance-method","name":"pull_subscribe","summary":"<p><span class=\"flag lime\">EXPERIMENTAL</span>  NATS JetStream pull subscriptions may be unstable</p>","abstract":false,"args":[{"name":"consumer","external_name":"consumer","restriction":"API::V1::Consumer"},{"name":"backlog","default_value":"64","external_name":"backlog","restriction":"Int"}],"args_string":"(consumer : API::V1::Consumer, backlog : Int = 64)","args_html":"(consumer : <a href=\"../../NATS/JetStream/API/V1/Consumer.html\">API::V1::Consumer</a>, backlog : Int = <span class=\"n\">64</span>)","location":{"filename":"src/jetstream.cr","line_number":113,"url":null},"def":{"name":"pull_subscribe","args":[{"name":"consumer","external_name":"consumer","restriction":"API::V1::Consumer"},{"name":"backlog","default_value":"64","external_name":"backlog","restriction":"Int"}],"visibility":"Public","body":"uuid = UUID.random\nsubject = \"#{consumer.config.durable_name}.#{uuid}\"\nchannel = Channel(Message).new(backlog)\nsubscription = @nats.subscribe(subject, queue_group: consumer.config.deliver_group) do |msg|\n  channel.send(Message.new(msg))\nend\nPullSubscription.new(subscription, consumer, channel, @nats)\n"}},{"html_id":"stream-instance-method","name":"stream","doc":"Returns an `API::Stream` instance to interact with the NATS JetStream\nAPI for streams.","summary":"<p>Returns an <code>API::Stream</code> instance to interact with the NATS JetStream API for streams.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":37,"url":null},"def":{"name":"stream","visibility":"Public","body":"Streams.new(@nats)"}},{"html_id":"subscribe(subject:String,queue_group:String?=nil,&block:Message->)-instance-method","name":"subscribe","doc":"Subscribe to the given subject with an optional queue group. This is\neffectively identical to `NATS::Client#subscribe`, but the message\nyielded to the block is a `NATS::JetStream::Message` instead of\na `NATS::Message`.\n\n```\njs = nats.jetstream\njs.subscribe \"orders.*\", queue_group: \"fulfillment\" do |msg|\n  # ...\n\n  js.ack msg\nend\n```\n\n_NOTE:_ If provided, the `queue_group` _must_ be the same as a `Consumer`'s `deliver_group` for NATS server 2.4.0 and above.","summary":"<p>Subscribe to the given subject with an optional queue group.</p>","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"queue_group","default_value":"nil","external_name":"queue_group","restriction":"String | ::Nil"}],"args_string":"(subject : String, queue_group : String? = nil, &block : Message -> )","args_html":"(subject : String, queue_group : String? = <span class=\"n\">nil</span>, &block : <a href=\"../../NATS/JetStream/Message.html\">Message</a> -> )","location":{"filename":"src/jetstream.cr","line_number":106,"url":null},"def":{"name":"subscribe","args":[{"name":"subject","external_name":"subject","restriction":"String"},{"name":"queue_group","default_value":"nil","external_name":"queue_group","restriction":"String | ::Nil"}],"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Message ->)"},"visibility":"Public","body":"@nats.subscribe(subject, queue_group: queue_group) do |msg|\n  block.call(Message.new(msg))\nend"}},{"html_id":"subscribe(consumer:JetStream::API::V1::Consumer,&block:Message->)-instance-method","name":"subscribe","doc":"Subscribe to messages delivered to the given consumer. Note that this\nconsumer _must_ be a push-based consumer. Pull-based consumers do not\nallow subscriptions because you must explicitly request the next\nmessage.\n\n```\njs = nats.jetstream\nconsumer = js.consumer.info(\"orders\", \"fulfillment\")\njs.subscribe consumer do |msg|\n  # ...\n\n  js.ack msg\nend\n```","summary":"<p>Subscribe to messages delivered to the given consumer.</p>","abstract":false,"args":[{"name":"consumer","external_name":"consumer","restriction":"JetStream::API::V1::Consumer"}],"args_string":"(consumer : JetStream::API::V1::Consumer, &block : Message -> )","args_html":"(consumer : <a href=\"../../NATS/JetStream/API/V1/Consumer.html\">JetStream::API::V1::Consumer</a>, &block : <a href=\"../../NATS/JetStream/Message.html\">Message</a> -> )","location":{"filename":"src/jetstream.cr","line_number":83,"url":null},"def":{"name":"subscribe","args":[{"name":"consumer","external_name":"consumer","restriction":"JetStream::API::V1::Consumer"}],"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Message ->)"},"visibility":"Public","body":"if subject = consumer.config.deliver_subject\n  subscribe(subject, queue_group: consumer.config.deliver_group, &block)\nelse\n  raise(ArgumentError.new(\"Consumer is not a push consumer (no `deliver_subject`)\"))\nend"}}],"types":[{"html_id":"nats/NATS/JetStream/Client/PullSubscription","path":"NATS/JetStream/Client/PullSubscription.html","kind":"class","full_name":"NATS::JetStream::Client::PullSubscription","name":"PullSubscription","abstract":false,"superclass":{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":125,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/Client","kind":"class","full_name":"NATS::JetStream::Client","name":"Client"},"constructors":[{"html_id":"new(nats_subscription,consumer,channel,nats)-class-method","name":"new","abstract":false,"args":[{"name":"nats_subscription","external_name":"nats_subscription","restriction":""},{"name":"consumer","external_name":"consumer","restriction":""},{"name":"channel","external_name":"channel","restriction":""},{"name":"nats","external_name":"nats","restriction":""}],"args_string":"(nats_subscription, consumer, channel, nats)","args_html":"(nats_subscription, consumer, channel, nats)","location":{"filename":"src/jetstream.cr","line_number":131,"url":null},"def":{"name":"new","args":[{"name":"nats_subscription","external_name":"nats_subscription","restriction":""},{"name":"consumer","external_name":"consumer","restriction":""},{"name":"channel","external_name":"channel","restriction":""},{"name":"nats","external_name":"nats","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(nats_subscription, consumer, channel, nats)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"consumer:API::V1::Consumer-instance-method","name":"consumer","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":127,"url":null},"def":{"name":"consumer","return_type":"API::V1::Consumer","visibility":"Public","body":"@consumer"}},{"html_id":"fetch(timeout:Time::Span=2.seconds)-instance-method","name":"fetch","abstract":false,"args":[{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":"Time::Span"}],"args_string":"(timeout : Time::Span = 2.seconds)","args_html":"(timeout : Time::Span = <span class=\"n\">2</span>.seconds)","location":{"filename":"src/jetstream.cr","line_number":134,"url":null},"def":{"name":"fetch","args":[{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":"Time::Span"}],"visibility":"Public","body":"(fetch(1, timeout: timeout)).first?"}},{"html_id":"fetch(message_count:Int,timeout:Time::Span=2.seconds):Enumerable(Message)-instance-method","name":"fetch","abstract":false,"args":[{"name":"message_count","external_name":"message_count","restriction":"Int"},{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":"Time::Span"}],"args_string":"(message_count : Int, timeout : Time::Span = 2.seconds) : Enumerable(Message)","args_html":"(message_count : Int, timeout : Time::Span = <span class=\"n\">2</span>.seconds) : Enumerable(<a href=\"../../../NATS/JetStream/Message.html\">Message</a>)","location":{"filename":"src/jetstream.cr","line_number":138,"url":null},"def":{"name":"fetch","args":[{"name":"message_count","external_name":"message_count","restriction":"Int"},{"name":"timeout","default_value":"2.seconds","external_name":"timeout","restriction":"Time::Span"}],"return_type":"Enumerable(Message)","visibility":"Public","body":"@nats.publish(\"$JS.API.CONSUMER.MSG.NEXT.#{consumer.stream_name}.#{consumer.config.durable_name}\", data: message_count.to_s, reply_to: @nats_subscription.subject)\nmsgs = Array(Message).new(initial_capacity: message_count)\nmessage_count.times do\n  select\nwhen msg = @channel.receive\n    msgs << msg\nwhen timeout(timeout)\n    break\nend\n\nend\nmsgs\n"}},{"html_id":"nats_subscription:NATS::Subscription-instance-method","name":"nats_subscription","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":126,"url":null},"def":{"name":"nats_subscription","return_type":"::NATS::Subscription","visibility":"Public","body":"@nats_subscription"}}]}]},{"html_id":"nats/NATS/JetStream/Consumers","path":"NATS/JetStream/Consumers.html","kind":"alias","full_name":"NATS::JetStream::Consumers","name":"Consumers","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":313,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"NATS::JetStream::API::V1::Consumers","aliased_html":"<a href=\"../../NATS/JetStream/API/V1/Consumers.html\">NATS::JetStream::API::V1::Consumers</a>","const":false,"namespace":{"html_id":"nats/NATS/JetStream","kind":"module","full_name":"NATS::JetStream","name":"JetStream"}},{"html_id":"nats/NATS/JetStream/Error","path":"NATS/JetStream/Error.html","kind":"class","full_name":"NATS::JetStream::Error","name":"Error","abstract":false,"superclass":{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":13,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream","kind":"module","full_name":"NATS::JetStream","name":"JetStream"}},{"html_id":"nats/NATS/JetStream/Errors","path":"NATS/JetStream/Errors.html","kind":"enum","full_name":"NATS::JetStream::Errors","name":"Errors","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":17,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"None","name":"None","value":"0","doc":"Should be wide enough?","summary":"<p>Should be wide enough?</p>"},{"id":"NoMessageFound","name":"NoMessageFound","value":"10037"},{"id":"StreamNotFound","name":"StreamNotFound","value":"10059"},{"id":"StreamWrongLastSequence","name":"StreamWrongLastSequence","value":"10071"}],"namespace":{"html_id":"nats/NATS/JetStream","kind":"module","full_name":"NATS::JetStream","name":"JetStream"},"doc":"https://github.com/nats-io/nats-server/blob/main/server/errors.json","summary":"<p>https://github.com/nats-io/nats-server/blob/main/server/errors.json</p>","constructors":[{"html_id":"new(json:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::PullParser"}],"args_string":"(json : JSON::PullParser)","args_html":"(json : JSON::PullParser)","location":{"filename":"src/jetstream.cr","line_number":23,"url":null},"def":{"name":"new","args":[{"name":"json","external_name":"json","restriction":"JSON::PullParser"}],"visibility":"Public","body":"new(json.read_int.to_i)"}}],"instance_methods":[{"html_id":"no_message_found?-instance-method","name":"no_message_found?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":19,"url":null},"def":{"name":"no_message_found?","visibility":"Public","body":"self == NoMessageFound"}},{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":18,"url":null},"def":{"name":"none?","visibility":"Public","body":"self == None"}},{"html_id":"stream_not_found?-instance-method","name":"stream_not_found?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":20,"url":null},"def":{"name":"stream_not_found?","visibility":"Public","body":"self == StreamNotFound"}},{"html_id":"stream_wrong_last_sequence?-instance-method","name":"stream_wrong_last_sequence?","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":21,"url":null},"def":{"name":"stream_wrong_last_sequence?","visibility":"Public","body":"self == StreamWrongLastSequence"}}]},{"html_id":"nats/NATS/JetStream/Headers","path":"NATS/JetStream/Headers.html","kind":"alias","full_name":"NATS::JetStream::Headers","name":"Headers","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":11,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"(HTTP::Headers | Hash(String, Array(String) | String))","aliased_html":"HTTP::Headers | Hash(String, Array(String) | String)","const":false,"namespace":{"html_id":"nats/NATS/JetStream","kind":"module","full_name":"NATS::JetStream","name":"JetStream"}},{"html_id":"nats/NATS/JetStream/Message","path":"NATS/JetStream/Message.html","kind":"struct","full_name":"NATS::JetStream::Message","name":"Message","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":220,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream","kind":"module","full_name":"NATS::JetStream","name":"JetStream"},"doc":"A `NATS::JetStream::Message` is very similar to a `NATS::Message` in that\nit represents a piece of information published by a NATS client (not\nnecessarily _this_ NATS client, though). This `Message` type contains more\ninformation, however, such as information about the stream and consumer\nit came from, how many times it's been delivered, etc.","summary":"<p>A <code><a href=\"../../NATS/JetStream/Message.html\">NATS::JetStream::Message</a></code> is very similar to a <code><a href=\"../../NATS/Message.html\">NATS::Message</a></code> in that it represents a piece of information published by a NATS client (not necessarily <em>this</em> NATS client, though).</p>","constructors":[{"html_id":"new(stream,consumer,delivered_count,stream_seq,consumer_seq,timestamp,pending,raw_data,subject,reply_to,headers)-class-method","name":"new","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":""},{"name":"consumer","external_name":"consumer","restriction":""},{"name":"delivered_count","external_name":"delivered_count","restriction":""},{"name":"stream_seq","external_name":"stream_seq","restriction":""},{"name":"consumer_seq","external_name":"consumer_seq","restriction":""},{"name":"timestamp","external_name":"timestamp","restriction":""},{"name":"pending","external_name":"pending","restriction":""},{"name":"raw_data","external_name":"raw_data","restriction":""},{"name":"subject","external_name":"subject","restriction":""},{"name":"reply_to","external_name":"reply_to","restriction":""},{"name":"headers","external_name":"headers","restriction":""}],"args_string":"(stream, consumer, delivered_count, stream_seq, consumer_seq, timestamp, pending, raw_data, subject, reply_to, headers)","args_html":"(stream, consumer, delivered_count, stream_seq, consumer_seq, timestamp, pending, raw_data, subject, reply_to, headers)","location":{"filename":"src/jetstream.cr","line_number":305,"url":null},"def":{"name":"new","args":[{"name":"stream","external_name":"stream","restriction":""},{"name":"consumer","external_name":"consumer","restriction":""},{"name":"delivered_count","external_name":"delivered_count","restriction":""},{"name":"stream_seq","external_name":"stream_seq","restriction":""},{"name":"consumer_seq","external_name":"consumer_seq","restriction":""},{"name":"timestamp","external_name":"timestamp","restriction":""},{"name":"pending","external_name":"pending","restriction":""},{"name":"raw_data","external_name":"raw_data","restriction":""},{"name":"subject","external_name":"subject","restriction":""},{"name":"reply_to","external_name":"reply_to","restriction":""},{"name":"headers","external_name":"headers","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(stream, consumer, delivered_count, stream_seq, consumer_seq, timestamp, pending, raw_data, subject, reply_to, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(msg:NATS::Message)-class-method","name":"new","doc":"Instantiate a `NATS::JetStream::Message` based on a `NATS::Message`.\nUsed by JetStream subscriptions to build `JetStream::Message`\ninstances, since JetStream is a layer on top of core NATS.","summary":"<p>Instantiate a <code><a href=\"../../NATS/JetStream/Message.html\">NATS::JetStream::Message</a></code> based on a <code><a href=\"../../NATS/Message.html\">NATS::Message</a></code>.</p>","abstract":false,"args":[{"name":"msg","external_name":"msg","restriction":"::NATS::Message"}],"args_string":"(msg : NATS::Message)","args_html":"(msg : <a href=\"../../NATS/Message.html\">NATS::Message</a>)","location":{"filename":"src/jetstream.cr","line_number":281,"url":null},"def":{"name":"new","args":[{"name":"msg","external_name":"msg","restriction":"::NATS::Message"}],"visibility":"Public","body":"if reply_to = msg.reply_to\n  _jetstream, _ack, stream, consumer, delivered_count, stream_seq, consumer_seq, timestamp, pending_messages = reply_to.split('.')\n  new(stream: stream, consumer: consumer, delivered_count: delivered_count.to_i64, stream_seq: stream_seq.to_i64, consumer_seq: consumer_seq.to_i64, timestamp: Time::UNIX_EPOCH + timestamp.to_i64.nanoseconds, pending: pending_messages.to_i64, raw_data: msg.raw_data, subject: msg.subject, reply_to: reply_to, headers: msg.headers)\nelse\n  raise(InvalidNATSMessage.new(\"Message does not have a reply_to set\"))\nend"}}],"instance_methods":[{"html_id":"consumer:String-instance-method","name":"consumer","doc":"The name of the consumer we received this message from","summary":"<p>The name of the consumer we received this message from</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":225,"url":null},"def":{"name":"consumer","return_type":"String","visibility":"Public","body":"@consumer"}},{"html_id":"consumer_seq:Int64-instance-method","name":"consumer_seq","doc":"The position of this message within its consumer, including redeliveries","summary":"<p>The position of this message within its consumer, including redeliveries</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":235,"url":null},"def":{"name":"consumer_seq","return_type":"Int64","visibility":"Public","body":"@consumer_seq"}},{"html_id":"data:String-instance-method","name":"data","doc":"The string encoded body of the message.\n\n```\njetstream.subscribe consumer do |msg|\n  puts msg.data\n\n  # ...\nend\n```","summary":"<p>The string encoded body of the message.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":252,"url":null},"def":{"name":"data","return_type":"String","visibility":"Public","body":"if (value = @data).nil?\n  @data = (String.new(raw_data))\nelse\n  value\nend"}},{"html_id":"delivered_count:Int64-instance-method","name":"delivered_count","doc":"The number of times this particular message has been delivered by this\nconsumer, starting at 1","summary":"<p>The number of times this particular message has been delivered by this consumer, starting at 1</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":229,"url":null},"def":{"name":"delivered_count","return_type":"Int64","visibility":"Public","body":"@delivered_count"}},{"html_id":"headers:Headers-instance-method","name":"headers","doc":"Any headers that were published with this message, including ones\ninterpreted by the NATS server, such as `Nats-Msg-Id` for message\ndeduplication.","summary":"<p>Any headers that were published with this message, including ones interpreted by the NATS server, such as <code>Nats-Msg-Id</code> for message deduplication.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":276,"url":null},"def":{"name":"headers","return_type":"Headers","visibility":"Public","body":"if (value = @headers).nil?\n  @headers = (HTTP::Headers.new)\nelse\n  value\nend"}},{"html_id":"pending:Int64-instance-method","name":"pending","doc":"How many messages follow this message for this consumer","summary":"<p>How many messages follow this message for this consumer</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":241,"url":null},"def":{"name":"pending","return_type":"Int64","visibility":"Public","body":"@pending"}},{"html_id":"raw_data:Bytes-instance-method","name":"raw_data","doc":"The original body of the message, encoded as binary. If you need text,\nuse `data`.\n\n```\njetstream.subscribe consumer do |msg|\n  String.new(msg.raw_data) == msg.data # => true\n\n  # ...\nend\n```","summary":"<p>The original body of the message, encoded as binary.</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":264,"url":null},"def":{"name":"raw_data","return_type":"Bytes","visibility":"Public","body":"@raw_data"}},{"html_id":"reply_to:String-instance-method","name":"reply_to","doc":"The subject used for acknowledging this message","summary":"<p>The subject used for acknowledging this message</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":271,"url":null},"def":{"name":"reply_to","return_type":"String","visibility":"Public","body":"@reply_to"}},{"html_id":"stream:String-instance-method","name":"stream","doc":"The name of the stream this message was consumed from","summary":"<p>The name of the stream this message was consumed from</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":222,"url":null},"def":{"name":"stream","return_type":"String","visibility":"Public","body":"@stream"}},{"html_id":"stream_seq:Int64-instance-method","name":"stream_seq","doc":"The position of this message within its stream","summary":"<p>The position of this message within its stream</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":232,"url":null},"def":{"name":"stream_seq","return_type":"Int64","visibility":"Public","body":"@stream_seq"}},{"html_id":"subject:String-instance-method","name":"subject","doc":"The original subject this message was published to, which can be (and\nmost likely is) different from the subject it was delivered to","summary":"<p>The original subject this message was published to, which can be (and most likely is) different from the subject it was delivered to</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":268,"url":null},"def":{"name":"subject","return_type":"String","visibility":"Public","body":"@subject"}},{"html_id":"timestamp:Time-instance-method","name":"timestamp","doc":"When this message was originally published","summary":"<p>When this message was originally published</p>","abstract":false,"location":{"filename":"src/jetstream.cr","line_number":238,"url":null},"def":{"name":"timestamp","return_type":"Time","visibility":"Public","body":"@timestamp"}}],"types":[{"html_id":"nats/NATS/JetStream/Message/InvalidNATSMessage","path":"NATS/JetStream/Message/InvalidNATSMessage.html","kind":"class","full_name":"NATS::JetStream::Message::InvalidNATSMessage","name":"InvalidNATSMessage","abstract":false,"superclass":{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/jetstream.cr","line_number":308,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/JetStream/Message","kind":"struct","full_name":"NATS::JetStream::Message","name":"Message"}}]},{"html_id":"nats/NATS/JetStream/Streams","path":"NATS/JetStream/Streams.html","kind":"alias","full_name":"NATS::JetStream::Streams","name":"Streams","abstract":false,"locations":[{"filename":"src/jetstream.cr","line_number":312,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"NATS::JetStream::API::V1::Streams","aliased_html":"<a href=\"../../NATS/JetStream/API/V1/Streams.html\">NATS::JetStream::API::V1::Streams</a>","const":false,"namespace":{"html_id":"nats/NATS/JetStream","kind":"module","full_name":"NATS::JetStream","name":"JetStream"}}]},{"html_id":"nats/NATS/KV","path":"NATS/KV.html","kind":"module","full_name":"NATS::KV","name":"KV","abstract":false,"locations":[{"filename":"src/kv.cr","line_number":26,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"doc":"`NATS::KV` is an experimental interface to the NATS server's experimental KV\nfeature.\n\nTo use KV:\n\n```\nrequire \"nats/kv\"\n\nnats = NATS::Client.new\nkv = nats.kv\n\nbucket = \"my-bucket\"\nkv.add(bucket)\nkv.put bucket, \"key\", \"value\"\n\nmsg = kv.get(bucket, \"key\").message\nString.new(msg.data) # => \"value\"\nmsg.seq              # => 1\n```","summary":"<p><code><a href=\"../NATS/KV.html\">NATS::KV</a></code> is an experimental interface to the NATS server's experimental KV feature.</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  NATS KV support is experimental and subject to change as NATS support for it changes</p>","types":[{"html_id":"nats/NATS/KV/Bucket","path":"NATS/KV/Bucket.html","kind":"struct","full_name":"NATS::KV::Bucket","name":"Bucket","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":41,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"},"instance_methods":[{"html_id":"[]=(key:String,value:Data)-instance-method","name":"[]=","doc":"Set the value of a key","summary":"<p>Set the value of a key</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Data"}],"args_string":"(key : String, value : Data)","args_html":"(key : String, value : <a href=\"../../NATS/KV/Data.html\">Data</a>)","location":{"filename":"src/kv.cr","line_number":100,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Data"}],"visibility":"Public","body":"put(key, value)"}},{"html_id":"[]?(key:String):Bytes?-instance-method","name":"[]?","doc":"Get the value of a key, if it exists (not counting `Delete` operations),\nstripping away all metadata to return only the value. If you need\nmetadata such as `revision`, `timestamp`, or `operation`, or if you need\nto be able to get deleted keys, you should use `Bucket#get` instead.","summary":"<p>Get the value of a key, if it exists (not counting <code>Delete</code> operations), stripping away all metadata to return only the value.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Bytes?","args_html":"(key : String) : Bytes?","location":{"filename":"src/kv.cr","line_number":121,"url":null},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Bytes | ::Nil","visibility":"Public","body":"if entry = get(key, ignore_deletes: true)\n  entry.value\nend"}},{"html_id":"create(key:String,value:String)-instance-method","name":"create","doc":"Creates the given `key` with the given `value` if and only if the key\ndoes not yet exist.","summary":"<p>Creates the given <code>key</code> with the given <code>value</code> if and only if the key does not yet exist.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : String, value : String)","args_html":"(key : String, value : String)","location":{"filename":"src/kv.cr","line_number":140,"url":null},"def":{"name":"create","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@kv.create(name, key, value)"}},{"html_id":"delete(key:String)-instance-method","name":"delete","doc":"Deletes the given `key` from the KV store. Inside the NATS server, this\nis implemented as adding another message to the stream that signifies\ndeletion.","summary":"<p>Deletes the given <code>key</code> from the KV store.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/kv.cr","line_number":156,"url":null},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@kv.delete(name, key)"}},{"html_id":"get(key:String,*,ignore_deletes=false):Entry?-instance-method","name":"get","doc":"Get the entry for a key as a `KV::Entry` - returns `nil` if the key does\nnot exist or if it's been deleted with `ignore_deletes` set to `true`.\n\n*Important*: If you do not set `ignore_deletes`, you may get a deleted\nkey. This is because the keys are stored in a stream and deleting the\nkey sets an `operation` flag (implemented in the NATS server as a\n`KV-Operation` message header) and this method retrieves the last entry\nin the stream for this key. `ignore_deletes` simply tells the client to\nignore deleted messages.","summary":"<p>Get the entry for a key as a <code><a href=\"../../NATS/KV/Entry.html\">KV::Entry</a></code> - returns <code>nil</code> if the key does not exist or if it's been deleted with <code>ignore_deletes</code> set to <code>true</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""}],"args_string":"(key : String, *, ignore_deletes = false) : Entry?","args_html":"(key : String, *, ignore_deletes = <span class=\"n\">false</span>) : <a href=\"../../NATS/KV/Entry.html\">Entry</a>?","location":{"filename":"src/kv.cr","line_number":113,"url":null},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""}],"splat_index":1,"return_type":"Entry | ::Nil","visibility":"Public","body":"@kv.get(name, key, ignore_deletes: ignore_deletes)"}},{"html_id":"get!(key:String,ignore_deletes=false):Entry-instance-method","name":"get!","doc":"Get the value of a key as a `KV::Entry` - raises `KeyError` if the key\ndoes not exist or if it's been deleted with `ignore_deletes` set to\n`true`.","summary":"<p>Get the value of a key as a <code><a href=\"../../NATS/KV/Entry.html\">KV::Entry</a></code> - raises <code><a href=\"../../NATS/KV/KeyError.html\">KeyError</a></code> if the key does not exist or if it's been deleted with <code>ignore_deletes</code> set to <code>true</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""}],"args_string":"(key : String, ignore_deletes = false) : Entry","args_html":"(key : String, ignore_deletes = <span class=\"n\">false</span>) : <a href=\"../../NATS/KV/Entry.html\">Entry</a>","location":{"filename":"src/kv.cr","line_number":130,"url":null},"def":{"name":"get!","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""}],"return_type":"Entry","visibility":"Public","body":"if value = get(key, ignore_deletes: ignore_deletes)\n  value\nelse\n  raise(KeyError.new(\"Key #{key.inspect} expected, but not found\"))\nend"}},{"html_id":"history(key:String)-instance-method","name":"history","doc":"Get the history","summary":"<p>Get the history</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/kv.cr","line_number":174,"url":null},"def":{"name":"history","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@kv.history(name, key)"}},{"html_id":"keys-instance-method","name":"keys","doc":"List all known keys for this bucket, returned as a `Set(String)`.","summary":"<p>List all known keys for this bucket, returned as a <code>Set(String)</code>.</p>","abstract":false,"location":{"filename":"src/kv.cr","line_number":169,"url":null},"def":{"name":"keys","visibility":"Public","body":"@kv.keys(name)"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/kv.cr","line_number":42,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"purge(key:String)-instance-method","name":"purge","doc":"Purges the given `key` from the KV store. Inside the NATS server, this\nis implemented as rolling up all versions of this key into a single\nmessage with its `KV::Entry#operation` value (`KV-Operation` header)\nset to `KV::Entry::Operation::Purge`.","summary":"<p>Purges the given <code>key</code> from the KV store.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/kv.cr","line_number":164,"url":null},"def":{"name":"purge","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@kv.purge(name, key)"}},{"html_id":"put(key:String,value:Data)-instance-method","name":"put","doc":"Set the value of a key","summary":"<p>Set the value of a key</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Data"}],"args_string":"(key : String, value : Data)","args_html":"(key : String, value : <a href=\"../../NATS/KV/Data.html\">Data</a>)","location":{"filename":"src/kv.cr","line_number":91,"url":null},"def":{"name":"put","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Data"}],"visibility":"Public","body":"@kv.put(name, key, value)"}},{"html_id":"set(key:String,value:Data)-instance-method","name":"set","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Data"}],"args_string":"(key : String, value : Data)","args_html":"(key : String, value : <a href=\"../../NATS/KV/Data.html\">Data</a>)","location":{"filename":"src/kv.cr","line_number":95,"url":null},"def":{"name":"set","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Data"}],"visibility":"Public","body":"@kv.set(name, key, value)"}},{"html_id":"stream_name:String-instance-method","name":"stream_name","abstract":false,"location":{"filename":"src/kv.cr","line_number":43,"url":null},"def":{"name":"stream_name","return_type":"String","visibility":"Public","body":"@stream_name"}},{"html_id":"update(key:String,value:String,revision:Int64)-instance-method","name":"update","doc":"Updates the given `key` with the given `value` if and only if it exists\nand is currently at the given `revision`. If you do not have the latest\nrevision, this method returns `nil` so you can perform domain-specific\nconflict resolution. If you need to set the key regardless of revision,\nuse `Bucket#put` instead.","summary":"<p>Updates the given <code>key</code> with the given <code>value</code> if and only if it exists and is currently at the given <code>revision</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"},{"name":"revision","external_name":"revision","restriction":"Int64"}],"args_string":"(key : String, value : String, revision : Int64)","args_html":"(key : String, value : String, revision : Int64)","location":{"filename":"src/kv.cr","line_number":149,"url":null},"def":{"name":"update","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"},{"name":"revision","external_name":"revision","restriction":"Int64"}],"visibility":"Public","body":"@kv.update(name, key, value, revision)"}},{"html_id":"watch(key:String,*,ignore_deletes=false,include_history=true,&block:Entry,Watch->)-instance-method","name":"watch","doc":"Watch the given key (or wildcard) for changes and yielding them to the\nblock. By default, this will also yield deleted messages. To avoid that,\npass `ignore_deletes: true`.\n\n```\nbucket.watch(\"session.*\") do |entry|\n  _prefix, session_id = entry.subject.split('.', 2)\n  if entry.operation.deleted?\n    # do deleted things\n  else\n    # the session was updated\n  end\nend\n```\n\nThis method blocks until the yielded `Watch` is stopped (use\n`watch.stop`), so if you want to run it in the background, you will need\nto run this method inside a `spawn` block.\n\nYou can also use this method to wait for a specific key to change once:\n\n```\nbucket.watch my_key do |entry, watch|\n  # react to the key change\n\n\nensure\n  watch.stop # exit the block\nend\n```","summary":"<p>Watch the given key (or wildcard) for changes and yielding them to the block.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""},{"name":"include_history","default_value":"true","external_name":"include_history","restriction":""}],"args_string":"(key : String, *, ignore_deletes = false, include_history = true, &block : Entry, Watch -> )","args_html":"(key : String, *, ignore_deletes = <span class=\"n\">false</span>, include_history = <span class=\"n\">true</span>, &block : <a href=\"../../NATS/KV/Entry.html\">Entry</a>, <a href=\"../../NATS/KV/Watch.html\">Watch</a> -> )","location":{"filename":"src/kv.cr","line_number":208,"url":null},"def":{"name":"watch","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""},{"name":"include_history","default_value":"true","external_name":"include_history","restriction":""}],"splat_index":1,"yields":2,"block_arg":{"name":"block","external_name":"block","restriction":"(Entry, Watch ->)"},"visibility":"Public","body":"@kv.watch(name, key, ignore_deletes: ignore_deletes, include_history: include_history, &block)"}}]},{"html_id":"nats/NATS/KV/Client","path":"NATS/KV/Client.html","kind":"class","full_name":"NATS::KV::Client","name":"Client","abstract":false,"superclass":{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":213,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"},"constructors":[{"html_id":"new(nats:NATS::Client)-class-method","name":"new","abstract":false,"args":[{"name":"nats","external_name":"nats","restriction":"::NATS::Client"}],"args_string":"(nats : NATS::Client)","args_html":"(nats : <a href=\"../../NATS/Client.html\">NATS::Client</a>)","location":{"filename":"src/kv.cr","line_number":214,"url":null},"def":{"name":"new","args":[{"name":"nats","external_name":"nats","restriction":"::NATS::Client"}],"visibility":"Public","body":"_ = allocate\n_.initialize(nats)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create(bucket:String,key:String,value:String|Bytes):Int64?-instance-method","name":"create","doc":"Create a key in the given `bucket` with the specified `value`. On\nsuccess, `create` returns the new revision number for the key. If the\nkey already exists, the value will not be set and `nil` is returned.\n\n```\nif revision = kv.create(\"my-bucket\", \"my-key\", \"my-value\")\n  # created\nelse\n  # key already existed and value was not set\nend\n```","summary":"<p>Create a key in the given <code>bucket</code> with the specified <code>value</code>.</p>","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String | Bytes"}],"args_string":"(bucket : String, key : String, value : String | Bytes) : Int64?","args_html":"(bucket : String, key : String, value : String | Bytes) : Int64?","location":{"filename":"src/kv.cr","line_number":311,"url":null},"def":{"name":"create","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String | Bytes"}],"return_type":"Int64 | ::Nil","visibility":"Public","body":"revision = update(bucket, key, value, revision: 0)\nif revision\n  revision\nelse\n  if (entry = get(bucket, key)) && (!entry.operation.put?)\n    update(bucket, key, value, revision: entry.revision)\n  end\nend\n"}},{"html_id":"create_bucket(name:String,description:String=\"\",*,max_value_size:Int32?=nil,history:UInt8?=nil,ttl:Time::Span?=nil,max_bytes:Int64?=nil,storage:JetStream::API::V1::StreamConfig::Storage=:file,replicas:Int32=1,allow_rollup:Bool=true,deny_delete:Bool=true)-instance-method","name":"create_bucket","doc":"https://github.com/nats-io/nats.go/blob/d7c1d78a50fc9cded3814ae7d7176fa66b73a4b0/kv.go#L295-L307","summary":"<p>https://github.com/nats-io/nats.go/blob/d7c1d78a50fc9cded3814ae7d7176fa66b73a4b0/kv.go#L295-L307</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"description","default_value":"\"\"","external_name":"description","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"max_value_size","default_value":"nil","external_name":"max_value_size","restriction":"Int32 | ::Nil"},{"name":"history","default_value":"nil","external_name":"history","restriction":"UInt8 | ::Nil"},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"},{"name":"max_bytes","default_value":"nil","external_name":"max_bytes","restriction":"Int64 | ::Nil"},{"name":"storage","default_value":":file","external_name":"storage","restriction":"JetStream::API::V1::StreamConfig::Storage"},{"name":"replicas","default_value":"1","external_name":"replicas","restriction":"Int32"},{"name":"allow_rollup","default_value":"true","external_name":"allow_rollup","restriction":"Bool"},{"name":"deny_delete","default_value":"true","external_name":"deny_delete","restriction":"Bool"}],"args_string":"(name : String, description : String = \"\", *, max_value_size : Int32? = nil, history : UInt8? = nil, ttl : Time::Span? = nil, max_bytes : Int64? = nil, storage : JetStream::API::V1::StreamConfig::Storage = :file, replicas : Int32 = 1, allow_rollup : Bool = true, deny_delete : Bool = true)","args_html":"(name : String, description : String = <span class=\"s\">&quot;&quot;</span>, *, max_value_size : Int32? = <span class=\"n\">nil</span>, history : UInt8? = <span class=\"n\">nil</span>, ttl : Time::Span? = <span class=\"n\">nil</span>, max_bytes : Int64? = <span class=\"n\">nil</span>, storage : <a href=\"../../NATS/JetStream/API/V1/StreamConfig/Storage.html\">JetStream::API::V1::StreamConfig::Storage</a> = <span class=\"n\">:file</span>, replicas : Int32 = <span class=\"n\">1</span>, allow_rollup : Bool = <span class=\"n\">true</span>, deny_delete : Bool = <span class=\"n\">true</span>)","location":{"filename":"src/kv.cr","line_number":218,"url":null},"def":{"name":"create_bucket","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"description","default_value":"\"\"","external_name":"description","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"max_value_size","default_value":"nil","external_name":"max_value_size","restriction":"Int32 | ::Nil"},{"name":"history","default_value":"nil","external_name":"history","restriction":"UInt8 | ::Nil"},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"},{"name":"max_bytes","default_value":"nil","external_name":"max_bytes","restriction":"Int64 | ::Nil"},{"name":"storage","default_value":":file","external_name":"storage","restriction":"JetStream::API::V1::StreamConfig::Storage"},{"name":"replicas","default_value":"1","external_name":"replicas","restriction":"Int32"},{"name":"allow_rollup","default_value":"true","external_name":"allow_rollup","restriction":"Bool"},{"name":"deny_delete","default_value":"true","external_name":"deny_delete","restriction":"Bool"}],"splat_index":2,"visibility":"Public","body":"if name =~ (/\\A[a-zA-Z0-9_-]+\\z/)\nelse\n  raise(ArgumentError.new(\"NATS KV bucket names can only contain alphanumeric characers, underscores, and dashes\"))\nend\nstream = @nats.jetstream.stream.create(name: \"KV_#{name}\", description: description, subjects: [\"$KV.#{name}.>\"], max_msgs_per_subject: history.try(&.to_i64), max_bytes: max_bytes, max_age: ttl, max_msg_size: max_value_size, storage: storage, replicas: {replicas, 1}.max, allow_rollup_headers: allow_rollup, deny_delete: deny_delete)\nBucket.new(stream, self)\n"}},{"html_id":"delete(bucket:String,key:String)-instance-method","name":"delete","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(bucket : String, key : String)","args_html":"(bucket : String, key : String)","location":{"filename":"src/kv.cr","line_number":453,"url":null},"def":{"name":"delete","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"validate_key!(key)\nheaders = HTTP::Headers {\"KV-Operation\" => \"DEL\"}\ncase response = @nats.jetstream.publish(\"$KV.#{bucket}.#{key}\", \"\", headers: headers)\nin JetStream::API::V1::PubAck\n  response\nin JetStream::API::V1::ErrorResponse\n  raise(Error.new(response.error.description))\nin Nil\n  raise(Error.new(\"No response received from the NATS server when deleting #{key.inspect} on KV #{bucket.inspect}\"))\nend\n"}},{"html_id":"delete(bucket:Bucket)-instance-method","name":"delete","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"Bucket"}],"args_string":"(bucket : Bucket)","args_html":"(bucket : <a href=\"../../NATS/KV/Bucket.html\">Bucket</a>)","location":{"filename":"src/kv.cr","line_number":482,"url":null},"def":{"name":"delete","args":[{"name":"bucket","external_name":"bucket","restriction":"Bucket"}],"visibility":"Public","body":"delete_bucket(bucket.name)"}},{"html_id":"delete_bucket(bucket:String)-instance-method","name":"delete_bucket","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"}],"args_string":"(bucket : String)","args_html":"(bucket : String)","location":{"filename":"src/kv.cr","line_number":486,"url":null},"def":{"name":"delete_bucket","args":[{"name":"bucket","external_name":"bucket","restriction":"String"}],"visibility":"Public","body":"@nats.jetstream.stream.delete(\"KV_#{bucket}\")"}},{"html_id":"get(bucket:String,key:String,ignore_deletes=false):Entry?-instance-method","name":"get","doc":"Get the value associated with the current","summary":"<p>Get the value associated with the current</p>","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""}],"args_string":"(bucket : String, key : String, ignore_deletes = false) : Entry?","args_html":"(bucket : String, key : String, ignore_deletes = <span class=\"n\">false</span>) : <a href=\"../../NATS/KV/Entry.html\">Entry</a>?","location":{"filename":"src/kv.cr","line_number":276,"url":null},"def":{"name":"get","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""}],"return_type":"Entry | ::Nil","visibility":"Public","body":"if response = @nats.jetstream.stream.get_msg(\"KV_#{bucket}\", last_by_subject: \"$KV.#{bucket}.#{key}\")\n  operation = Entry::Operation::Put\n  case response.message.headers.try do |h|\n    h[\"KV-Operation\"]?\n  end\n  when \"DEL\"\n    operation = Entry::Operation::Delete\n  when \"PURGE\"\n    operation = Entry::Operation::Purge\n  end\n  if ignore_deletes && (!operation.put?)\n    return nil\n  end\n  _, bucket_name, key_name = response.message.subject.split('.', 3)\n  get = Entry.new(bucket: bucket_name, key: key_name, value: response.message.raw_data, revision: response.message.seq, created_at: response.message.time, operation: operation)\nend"}},{"html_id":"get_bucket(name:String):Bucket?-instance-method","name":"get_bucket","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bucket?","args_html":"(name : String) : <a href=\"../../NATS/KV/Bucket.html\">Bucket</a>?","location":{"filename":"src/kv.cr","line_number":252,"url":null},"def":{"name":"get_bucket","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Bucket | ::Nil","visibility":"Public","body":"if stream = @nats.jetstream.stream.info(\"KV_#{name}\")\n  Bucket.new(stream, self)\nend"}},{"html_id":"history(bucket:String,key:String):Array(Entry)-instance-method","name":"history","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(bucket : String, key : String) : Array(Entry)","args_html":"(bucket : String, key : String) : Array(<a href=\"../../NATS/KV/Entry.html\">Entry</a>)","location":{"filename":"src/kv.cr","line_number":376,"url":null},"def":{"name":"history","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Array(Entry)","visibility":"Public","body":"history = [] of Entry\nif get(bucket, key).nil?\n  return history\nend\nwatch(bucket, key, include_history: true) do |msg, watch|\n  history << msg\n  if msg.delta == 0\n    watch.stop\n  end\nend\nhistory\n"}},{"html_id":"keys(bucket:String,pattern:String=\">\"):Set(String)-instance-method","name":"keys","doc":"Get all of the keys for the given bucket name","summary":"<p>Get all of the keys for the given bucket name</p>","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"pattern","default_value":"\">\"","external_name":"pattern","restriction":"String"}],"args_string":"(bucket : String, pattern : String = \">\") : Set(String)","args_html":"(bucket : String, pattern : String = <span class=\"s\">&quot;&gt;&quot;</span>) : Set(String)","location":{"filename":"src/kv.cr","line_number":354,"url":null},"def":{"name":"keys","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"pattern","default_value":"\">\"","external_name":"pattern","restriction":"String"}],"return_type":"Set(String)","visibility":"Public","body":"keys = Set(String).new\nif get(bucket, pattern).nil?\n  return keys\nend\nwatch(bucket, pattern) do |msg, watch|\n  case msg.operation\n  when .delete?, .purge?\n    keys.delete(msg.key)\n  else\n    keys << msg.key\n  end\n  if msg.delta == 0\n    watch.stop\n  end\nend\nkeys\n"}},{"html_id":"purge(bucket:String,key:String)-instance-method","name":"purge","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(bucket : String, key : String)","args_html":"(bucket : String, key : String)","location":{"filename":"src/kv.cr","line_number":467,"url":null},"def":{"name":"purge","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"headers = HTTP::Headers {\"KV-Operation\" => \"PURGE\", \"Nats-Rollup\" => \"sub\"}\ncase response = @nats.jetstream.publish(\"$KV.#{bucket}.#{key}\", \"\", headers: headers)\nin JetStream::API::V1::PubAck\n  response\nin JetStream::API::V1::ErrorResponse\n  raise(Error.new(response.error.description))\nin Nil\n  raise(Error.new(\"No response received from the NATS server when purging #{key.inspect} on KV #{bucket.inspect}\"))\nend\n"}},{"html_id":"put(bucket:String,key:String,value:String|Bytes):Int64-instance-method","name":"put","doc":"Assign `value` to `key` in `bucket`.","summary":"<p>Assign <code>value</code> to <code>key</code> in <code>bucket</code>.</p>","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String | Bytes"}],"args_string":"(bucket : String, key : String, value : String | Bytes) : Int64","args_html":"(bucket : String, key : String, value : String | Bytes) : Int64","location":{"filename":"src/kv.cr","line_number":259,"url":null},"def":{"name":"put","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String | Bytes"}],"return_type":"Int64","visibility":"Public","body":"validate_key!(key)\ncase response = @nats.jetstream.publish(\"$KV.#{bucket}.#{key}\", value)\nin JetStream::API::V1::PubAck\n  response.sequence\nin JetStream::API::V1::ErrorResponse\n  raise(Error.new(response.error.description))\nin Nil\n  raise(Error.new(\"No response received from the NATS server when setting #{key.inspect} on KV #{bucket.inspect}\"))\nend\n"}},{"html_id":"set(bucket:String,key:String,value:Data)-instance-method","name":"set","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Data"}],"args_string":"(bucket : String, key : String, value : Data)","args_html":"(bucket : String, key : String, value : <a href=\"../../NATS/KV/Data.html\">Data</a>)","location":{"filename":"src/kv.cr","line_number":271,"url":null},"def":{"name":"set","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Data"}],"visibility":"Public","body":"@nats.publish(\"$KV.#{bucket}.#{key}\", value)"}},{"html_id":"update(bucket:String,key:String,value:String|Bytes,revision:Int):Int64?-instance-method","name":"update","doc":"Update a bucket's key with the specified value only if the current value\nis the specified revision. If this revision is the latest, the update is\nnot performed and this method returns `nil`.\n\n```\nif revision = kv.update(bucket, key, value, revision)\n  # updated\nelse\n  # outdated revision\nend\n```","summary":"<p>Update a bucket's key with the specified value only if the current value is the specified revision.</p>","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String | Bytes"},{"name":"revision","external_name":"revision","restriction":"Int"}],"args_string":"(bucket : String, key : String, value : String | Bytes, revision : Int) : Int64?","args_html":"(bucket : String, key : String, value : String | Bytes, revision : Int) : Int64?","location":{"filename":"src/kv.cr","line_number":332,"url":null},"def":{"name":"update","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String | Bytes"},{"name":"revision","external_name":"revision","restriction":"Int"}],"return_type":"Int64 | ::Nil","visibility":"Public","body":"validate_key!(key)\nheaders = HTTP::Headers {\"Nats-Expected-Last-Subject-Sequence\" => revision.to_s}\ncase response = @nats.jetstream.publish(\"$KV.#{bucket}.#{key}\", value, headers: headers)\nin JetStream::API::V1::PubAck\n  response.sequence\nin JetStream::API::V1::ErrorResponse\n  if response.error.err_code.stream_wrong_last_sequence?\n    nil\n  else\n    raise(Error.new(response.error.description))\n  end\nin Nil\n  raise(Error.new(\"No response received from the NATS server when updating #{key.inspect} on KV #{bucket.inspect}\"))\nend\n"}},{"html_id":"watch(bucket:String,key:String,*,ignore_deletes=false,include_history=false,&block:Entry,Watch->)-instance-method","name":"watch","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""},{"name":"include_history","default_value":"false","external_name":"include_history","restriction":""}],"args_string":"(bucket : String, key : String, *, ignore_deletes = false, include_history = false, &block : Entry, Watch -> )","args_html":"(bucket : String, key : String, *, ignore_deletes = <span class=\"n\">false</span>, include_history = <span class=\"n\">false</span>, &block : <a href=\"../../NATS/KV/Entry.html\">Entry</a>, <a href=\"../../NATS/KV/Watch.html\">Watch</a> -> )","location":{"filename":"src/kv.cr","line_number":389,"url":null},"def":{"name":"watch","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"ignore_deletes","default_value":"false","external_name":"ignore_deletes","restriction":""},{"name":"include_history","default_value":"false","external_name":"include_history","restriction":""}],"splat_index":2,"yields":2,"block_arg":{"name":"block","external_name":"block","restriction":"(Entry, Watch ->)"},"visibility":"Public","body":"begin\n  stop_channel = Channel(Nil).new\n  watch = Watch.new(stop_channel)\n  inbox = \"$WATCH_INBOX.#{Random::Secure.hex}\"\n  deliver_group = Random::Secure.hex\n  if include_history\n    deliver_policy = JetStream::API::V1::ConsumerConfig::DeliverPolicy::All\n  else\n    deliver_policy = JetStream::API::V1::ConsumerConfig::DeliverPolicy::LastPerSubject\n  end\n  stream_name = \"KV_#{bucket}\"\n  consumer = @nats.jetstream.consumer.create(stream_name: stream_name, deliver_subject: inbox, deliver_group: deliver_group, deliver_policy: deliver_policy, filter_subject: \"$KV.#{bucket}.#{key}\", ack_policy: :none)\n  subscription = @nats.subscribe(inbox, queue_group: deliver_group) do |msg|\n    js_msg = JetStream::Message.new(msg)\n    operation = Entry::Operation::Put\n    case msg.headers.try do |h|\n      h[\"KV-Operation\"]?\n    end\n    when \"DEL\"\n      operation = Entry::Operation::Delete\n    when \"PURGE\"\n      operation = Entry::Operation::Purge\n    end\n    if (!ignore_deletes) || operation.put?\n      _, bucket_name, key_name = msg.subject.split('.', 3)\n      get = Entry.new(bucket: bucket_name, key: key_name, value: msg.raw_data, revision: js_msg.stream_seq, created_at: js_msg.timestamp, delta: js_msg.pending, operation: operation)\n      block.call(get, watch)\n    end\n  end\n  stop_channel.receive\nensure\n  if subscription\n    @nats.unsubscribe(subscription)\n  end\n  if (stream_name && consumer) && (name = consumer.name)\n    @nats.jetstream.consumer.delete(stream_name, name)\n  end\nend"}}]},{"html_id":"nats/NATS/KV/Data","path":"NATS/KV/Data.html","kind":"alias","full_name":"NATS::KV::Data","name":"Data","abstract":false,"locations":[{"filename":"src/kv.cr","line_number":27,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"(Slice(UInt8) | String)","aliased_html":"Slice(UInt8) | String","const":false,"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"}},{"html_id":"nats/NATS/KV/Entry","path":"NATS/KV/Entry.html","kind":"struct","full_name":"NATS::KV::Entry","name":"Entry","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":503,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"},"constructors":[{"html_id":"new(bucket,key,value,revision,created_at,operation,delta=0_i64)-class-method","name":"new","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":""},{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""},{"name":"revision","external_name":"revision","restriction":""},{"name":"created_at","external_name":"created_at","restriction":""},{"name":"operation","external_name":"operation","restriction":""},{"name":"delta","default_value":"0_i64","external_name":"delta","restriction":""}],"args_string":"(bucket, key, value, revision, created_at, operation, delta = 0_i64)","args_html":"(bucket, key, value, revision, created_at, operation, delta = <span class=\"n\">0_i64</span>)","location":{"filename":"src/kv.cr","line_number":518,"url":null},"def":{"name":"new","args":[{"name":"bucket","external_name":"bucket","restriction":""},{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""},{"name":"revision","external_name":"revision","restriction":""},{"name":"created_at","external_name":"created_at","restriction":""},{"name":"operation","external_name":"operation","restriction":""},{"name":"delta","default_value":"0_i64","external_name":"delta","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(bucket, key, value, revision, created_at, operation, delta)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bucket:String-instance-method","name":"bucket","abstract":false,"location":{"filename":"src/kv.cr","line_number":504,"url":null},"def":{"name":"bucket","return_type":"String","visibility":"Public","body":"@bucket"}},{"html_id":"created_at:Time-instance-method","name":"created_at","abstract":false,"location":{"filename":"src/kv.cr","line_number":508,"url":null},"def":{"name":"created_at","return_type":"Time","visibility":"Public","body":"@created_at"}},{"html_id":"delta:Int64-instance-method","name":"delta","abstract":false,"location":{"filename":"src/kv.cr","line_number":509,"url":null},"def":{"name":"delta","return_type":"Int64","visibility":"Public","body":"@delta"}},{"html_id":"key:String-instance-method","name":"key","abstract":false,"location":{"filename":"src/kv.cr","line_number":505,"url":null},"def":{"name":"key","return_type":"String","visibility":"Public","body":"@key"}},{"html_id":"operation:Operation-instance-method","name":"operation","abstract":false,"location":{"filename":"src/kv.cr","line_number":510,"url":null},"def":{"name":"operation","return_type":"Operation","visibility":"Public","body":"@operation"}},{"html_id":"revision:Int64-instance-method","name":"revision","abstract":false,"location":{"filename":"src/kv.cr","line_number":507,"url":null},"def":{"name":"revision","return_type":"Int64","visibility":"Public","body":"@revision"}},{"html_id":"value:Bytes-instance-method","name":"value","abstract":false,"location":{"filename":"src/kv.cr","line_number":506,"url":null},"def":{"name":"value","return_type":"Bytes","visibility":"Public","body":"@value"}}],"types":[{"html_id":"nats/NATS/KV/Entry/Operation","path":"NATS/KV/Entry/Operation.html","kind":"enum","full_name":"NATS::KV::Entry::Operation","name":"Operation","abstract":false,"ancestors":[{"html_id":"nats/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"nats/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":512,"url":null}],"repository_name":"nats","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Put","name":"Put","value":"0"},{"id":"Delete","name":"Delete","value":"1"},{"id":"Purge","name":"Purge","value":"2"}],"namespace":{"html_id":"nats/NATS/KV/Entry","kind":"struct","full_name":"NATS::KV::Entry","name":"Entry"},"instance_methods":[{"html_id":"delete?-instance-method","name":"delete?","abstract":false,"location":{"filename":"src/kv.cr","line_number":514,"url":null},"def":{"name":"delete?","visibility":"Public","body":"self == Delete"}},{"html_id":"purge?-instance-method","name":"purge?","abstract":false,"location":{"filename":"src/kv.cr","line_number":515,"url":null},"def":{"name":"purge?","visibility":"Public","body":"self == Purge"}},{"html_id":"put?-instance-method","name":"put?","abstract":false,"location":{"filename":"src/kv.cr","line_number":513,"url":null},"def":{"name":"put?","visibility":"Public","body":"self == Put"}}]}]},{"html_id":"nats/NATS/KV/Error","path":"NATS/KV/Error.html","kind":"class","full_name":"NATS::KV::Error","name":"Error","abstract":false,"superclass":{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":29,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"nats/NATS/KV/InvalidKeyname","kind":"class","full_name":"NATS::KV::InvalidKeyname","name":"InvalidKeyname"},{"html_id":"nats/NATS/KV/KeyEmptyError","kind":"class","full_name":"NATS::KV::KeyEmptyError","name":"KeyEmptyError"},{"html_id":"nats/NATS/KV/KeyError","kind":"class","full_name":"NATS::KV::KeyError","name":"KeyError"}],"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"}},{"html_id":"nats/NATS/KV/InvalidKeyname","path":"NATS/KV/InvalidKeyname.html","kind":"class","full_name":"NATS::KV::InvalidKeyname","name":"InvalidKeyname","abstract":false,"superclass":{"html_id":"nats/NATS/KV/Error","kind":"class","full_name":"NATS::KV::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/KV/Error","kind":"class","full_name":"NATS::KV::Error","name":"Error"},{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":38,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"}},{"html_id":"nats/NATS/KV/KeyEmptyError","path":"NATS/KV/KeyEmptyError.html","kind":"class","full_name":"NATS::KV::KeyEmptyError","name":"KeyEmptyError","abstract":false,"superclass":{"html_id":"nats/NATS/KV/Error","kind":"class","full_name":"NATS::KV::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/KV/Error","kind":"class","full_name":"NATS::KV::Error","name":"Error"},{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":32,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"}},{"html_id":"nats/NATS/KV/KeyError","path":"NATS/KV/KeyError.html","kind":"class","full_name":"NATS::KV::KeyError","name":"KeyError","abstract":false,"superclass":{"html_id":"nats/NATS/KV/Error","kind":"class","full_name":"NATS::KV::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/KV/Error","kind":"class","full_name":"NATS::KV::Error","name":"Error"},{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":35,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"}},{"html_id":"nats/NATS/KV/Watch","path":"NATS/KV/Watch.html","kind":"class","full_name":"NATS::KV::Watch","name":"Watch","abstract":false,"superclass":{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/kv.cr","line_number":522,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/KV","kind":"module","full_name":"NATS::KV","name":"KV"},"constructors":[{"html_id":"new(stop_channel:Channel(Nil))-class-method","name":"new","abstract":false,"args":[{"name":"stop_channel","external_name":"stop_channel","restriction":"Channel(Nil)"}],"args_string":"(stop_channel : Channel(Nil))","args_html":"(stop_channel : Channel(Nil))","location":{"filename":"src/kv.cr","line_number":523,"url":null},"def":{"name":"new","args":[{"name":"stop_channel","external_name":"stop_channel","restriction":"Channel(Nil)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(stop_channel)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"stop-instance-method","name":"stop","abstract":false,"location":{"filename":"src/kv.cr","line_number":526,"url":null},"def":{"name":"stop","visibility":"Public","body":"@stop_channel.send(nil)"}}]}]},{"html_id":"nats/NATS/Message","path":"NATS/Message.html","kind":"struct","full_name":"NATS::Message","name":"Message","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/nats.cr","line_number":63,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"constructors":[{"html_id":"new(subject,raw_data:Bytes,reply_to=nil,headers=nil)-class-method","name":"new","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":""},{"name":"raw_data","external_name":"raw_data","restriction":"Bytes"},{"name":"reply_to","default_value":"nil","external_name":"reply_to","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":""}],"args_string":"(subject, raw_data : Bytes, reply_to = nil, headers = nil)","args_html":"(subject, raw_data : Bytes, reply_to = <span class=\"n\">nil</span>, headers = <span class=\"n\">nil</span>)","location":{"filename":"src/nats.cr","line_number":78,"url":null},"def":{"name":"new","args":[{"name":"subject","external_name":"subject","restriction":""},{"name":"raw_data","external_name":"raw_data","restriction":"Bytes"},{"name":"reply_to","default_value":"nil","external_name":"reply_to","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(subject, raw_data, reply_to, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(subject,data:String,reply_to=nil,headers=nil)-class-method","name":"new","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":""},{"name":"data","external_name":"data","restriction":"String"},{"name":"reply_to","default_value":"nil","external_name":"reply_to","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":""}],"args_string":"(subject, data : String, reply_to = nil, headers = nil)","args_html":"(subject, data : String, reply_to = <span class=\"n\">nil</span>, headers = <span class=\"n\">nil</span>)","location":{"filename":"src/nats.cr","line_number":81,"url":null},"def":{"name":"new","args":[{"name":"subject","external_name":"subject","restriction":""},{"name":"data","external_name":"data","restriction":"String"},{"name":"reply_to","default_value":"nil","external_name":"reply_to","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(subject, data, reply_to, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"body:Bytes-instance-method","name":"body","summary":"<p><span class=\"flag red\">DEPRECATED</span>  <code><a href=\"../NATS/Message.html#body%3ABytes-instance-method\">#body</a></code> deprecated in favor of <code><a href=\"../NATS/Message.html#data%3AString-instance-method\">#data</a></code> or <code><a href=\"../NATS/Message.html#raw_data%3ABytes-instance-method\">#raw_data</a></code> to conform with NATS protocol nomenclature</p>","abstract":false,"location":{"filename":"src/nats.cr","line_number":91,"url":null},"def":{"name":"body","return_type":"Bytes","visibility":"Public","body":"@raw_data"}},{"html_id":"body_io-instance-method","name":"body_io","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Instantiating a new IO::Memory for each message made them heavier than intended, so we're now recommending using <code>String.new(msg.raw_data)</code></p>","abstract":false,"location":{"filename":"src/nats.cr","line_number":86,"url":null},"def":{"name":"body_io","visibility":"Public","body":"@body_io || (@body_io = IO::Memory.new(@body))"}},{"html_id":"data:String-instance-method","name":"data","doc":"Returns the string representation of `raw_data`","summary":"<p>Returns the string representation of <code><a href=\"../NATS/Message.html#raw_data%3ABytes-instance-method\">#raw_data</a></code></p>","abstract":false,"location":{"filename":"src/nats.cr","line_number":71,"url":null},"def":{"name":"data","return_type":"String","visibility":"Public","body":"if (value = @data).nil?\n  @data = (String.new(raw_data))\nelse\n  value\nend"}},{"html_id":"headers:Headers-instance-method","name":"headers","doc":"Returns the parsed headers data\n\nTODO: Should support duplicate keys. Maybe alias HTTP::Headers like the [Go client](https://github.com/nats-io/nats.go/blob/v1.13.0/nats.go#L3204).","summary":"<p>Returns the parsed headers data</p>","abstract":false,"location":{"filename":"src/nats.cr","line_number":76,"url":null},"def":{"name":"headers","return_type":"Headers","visibility":"Public","body":"if (value = @headers).nil?\n  @headers = (HTTP::Headers.new)\nelse\n  value\nend"}},{"html_id":"raw_data:Bytes-instance-method","name":"raw_data","doc":"Returns the raw byte payload","summary":"<p>Returns the raw byte payload</p>","abstract":false,"location":{"filename":"src/nats.cr","line_number":69,"url":null},"def":{"name":"raw_data","return_type":"Bytes","visibility":"Public","body":"@raw_data"}},{"html_id":"reply_to:String?-instance-method","name":"reply_to","abstract":false,"location":{"filename":"src/nats.cr","line_number":72,"url":null},"def":{"name":"reply_to","return_type":"String | ::Nil","visibility":"Public","body":"@reply_to"}},{"html_id":"subject:String-instance-method","name":"subject","abstract":false,"location":{"filename":"src/nats.cr","line_number":67,"url":null},"def":{"name":"subject","return_type":"String","visibility":"Public","body":"@subject"}}],"types":[{"html_id":"nats/NATS/Message/Headers","path":"NATS/Message/Headers.html","kind":"alias","full_name":"NATS::Message::Headers","name":"Headers","abstract":false,"locations":[{"filename":"src/nats.cr","line_number":65,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"HTTP::Headers","aliased_html":"HTTP::Headers","const":false,"namespace":{"html_id":"nats/NATS/Message","kind":"struct","full_name":"NATS::Message","name":"Message"},"doc":"See the Crystal [HTTP::Headers API](https://crystal-lang.org/api/latest/HTTP/Headers.html)","summary":"<p>See the Crystal <a href=\"https://crystal-lang.org/api/latest/HTTP/Headers.html\">HTTP::Headers API</a></p>"}]},{"html_id":"nats/NATS/NotAReply","path":"NATS/NotAReply.html","kind":"class","full_name":"NATS::NotAReply","name":"NotAReply","abstract":false,"superclass":{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/error.cr","line_number":7,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"doc":"Raised when trying to reply to a NATS message that is not a reply.","summary":"<p>Raised when trying to reply to a NATS message that is not a reply.</p>","constructors":[{"html_id":"new(error_message,nats_message:Message)-class-method","name":"new","abstract":false,"args":[{"name":"error_message","external_name":"error_message","restriction":""},{"name":"nats_message","external_name":"nats_message","restriction":"Message"}],"args_string":"(error_message, nats_message : Message)","args_html":"(error_message, nats_message : <a href=\"../NATS/Message.html\">Message</a>)","location":{"filename":"src/error.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"error_message","external_name":"error_message","restriction":""},{"name":"nats_message","external_name":"nats_message","restriction":"Message"}],"visibility":"Public","body":"_ = allocate\n_.initialize(error_message, nats_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"nats_message:Message-instance-method","name":"nats_message","abstract":false,"location":{"filename":"src/error.cr","line_number":8,"url":null},"def":{"name":"nats_message","return_type":"Message","visibility":"Public","body":"@nats_message"}}]},{"html_id":"nats/NATS/NUID","path":"NATS/NUID.html","kind":"class","full_name":"NATS::NUID","name":"NUID","abstract":false,"superclass":{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/nuid.cr","line_number":2,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"BASE","name":"BASE","value":"62"},{"id":"DIGITS","name":"DIGITS","value":"\"#{(\"0\"..\"9\").join}#{(\"A\"..\"Z\").join}#{(\"a\"..\"z\").join}\".to_slice"},{"id":"MAX_INCREMENT","name":"MAX_INCREMENT","value":"333_i64"},{"id":"MAX_SEQUENCE","name":"MAX_SEQUENCE","value":"839299365868340224_i64"},{"id":"MIN_INCREMENT","name":"MIN_INCREMENT","value":"33_i64"},{"id":"PREFIX_LENGTH","name":"PREFIX_LENGTH","value":"12"},{"id":"SEQUENCE_LENGTH","name":"SEQUENCE_LENGTH","value":"10"},{"id":"TOTAL_LENGTH","name":"TOTAL_LENGTH","value":"PREFIX_LENGTH + SEQUENCE_LENGTH"}],"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"class_methods":[{"html_id":"global-class-method","name":"global","abstract":false,"location":{"filename":"src/nuid.cr","line_number":12,"url":null},"def":{"name":"global","visibility":"Public","body":"@@global"}},{"html_id":"next-class-method","name":"next","abstract":false,"location":{"filename":"src/nuid.cr","line_number":27,"url":null},"def":{"name":"next","visibility":"Public","body":"string = \"\"\n@@lock.synchronize do\n  string = @@global.next\nend\nstring\n"}}],"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/nuid.cr","line_number":19,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"increment:Int64-instance-method","name":"increment","abstract":false,"location":{"filename":"src/nuid.cr","line_number":16,"url":null},"def":{"name":"increment","return_type":"Int64","visibility":"Public","body":"@increment"}},{"html_id":"next-instance-method","name":"next","abstract":false,"location":{"filename":"src/nuid.cr","line_number":33,"url":null},"def":{"name":"next","visibility":"Public","body":"@sequence = @sequence + increment\nif sequence >= MAX_SEQUENCE\n  initialize\nend\nbytes = Bytes.new(TOTAL_LENGTH)\nprefix.copy_to(bytes)\ni = bytes.size\nl = sequence\nwhile i > PREFIX_LENGTH\n  i = i - 1\n  bytes[i] = DIGITS[l % BASE]\n  l = l // BASE\nend\nString.new(bytes)\n"}},{"html_id":"prefix:Bytes-instance-method","name":"prefix","abstract":false,"location":{"filename":"src/nuid.cr","line_number":14,"url":null},"def":{"name":"prefix","return_type":"Bytes","visibility":"Public","body":"@prefix"}},{"html_id":"sequence:Int64-instance-method","name":"sequence","abstract":false,"location":{"filename":"src/nuid.cr","line_number":15,"url":null},"def":{"name":"sequence","return_type":"Int64","visibility":"Public","body":"@sequence"}}]},{"html_id":"nats/NATS/Objects","path":"NATS/Objects.html","kind":"module","full_name":"NATS::Objects","name":"Objects","abstract":false,"locations":[{"filename":"src/objects.cr","line_number":40,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_CHUNK_SIZE","name":"DEFAULT_CHUNK_SIZE","value":"128 * 1024"}],"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"doc":"The NATS object store is S3-style object storage backed by NATS JetStream.\n\nYou can access the object store API with `NATS::Client#objects`.\n\nCreate a bucket with `Objects::Client#create_bucket`:\n\n```\nbucket = nats.objects.create_bucket(\"my-bucket\")\n```\n\nAdd an object from a file on disk (for example, from a tempfile created from an HTTP file upload) with `Objects::Bucket#put`:\n\n```\nFile.open filename do |file|\n  bucket.put \"my-key\", file\nend\n```\n\nGet the metadata from an object in the store with `Objects::Bucket#get_info`:\n\n```\nbucket.get_info(\"my-key\")\n```\n\nGet the contents of an object in the store with `Objects::Bucket#get`, which returns an `IO` instance that you can read from gradually to avoid having to load the entire object into memory. For example, for storing large images or videos.\n\n```\nif io = bucket.get(\"my-key\")\n  io.gets_to_end\nend\n```","summary":"<p>The NATS object store is S3-style object storage backed by NATS JetStream.</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  NATS object store is experimental and the API could change</p>","types":[{"html_id":"nats/NATS/Objects/Bucket","path":"NATS/Objects/Bucket.html","kind":"struct","full_name":"NATS::Objects::Bucket","name":"Bucket","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/objects.cr","line_number":290,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/Objects","kind":"module","full_name":"NATS::Objects","name":"Objects"},"constructors":[{"html_id":"new(name,stream_name,client)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"stream_name","external_name":"stream_name","restriction":""},{"name":"client","external_name":"client","restriction":""}],"args_string":"(name, stream_name, client)","args_html":"(name, stream_name, client)","location":{"filename":"src/objects.cr","line_number":303,"url":null},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"stream_name","external_name":"stream_name","restriction":""},{"name":"client","external_name":"client","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, stream_name, client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(stream:JetStream::API::V1::Stream,client:Objects::Client)-class-method","name":"new","abstract":false,"args":[{"name":"stream","external_name":"stream","restriction":"JetStream::API::V1::Stream"},{"name":"client","external_name":"client","restriction":"Objects::Client"}],"args_string":"(stream : JetStream::API::V1::Stream, client : Objects::Client)","args_html":"(stream : <a href=\"../../NATS/JetStream/API/V1/Stream.html\">JetStream::API::V1::Stream</a>, client : <a href=\"../../NATS/Objects/Client.html\">Objects::Client</a>)","location":{"filename":"src/objects.cr","line_number":295,"url":null},"def":{"name":"new","args":[{"name":"stream","external_name":"stream","restriction":"JetStream::API::V1::Stream"},{"name":"client","external_name":"client","restriction":"Objects::Client"}],"visibility":"Public","body":"new(name: stream.config.name.lchop(\"OBJ_\"), stream_name: stream.config.name, client: client)"}}],"instance_methods":[{"html_id":"get(key:String)-instance-method","name":"get","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/objects.cr","line_number":334,"url":null},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@client.get(name, key)"}},{"html_id":"get!(key:String)-instance-method","name":"get!","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/objects.cr","line_number":326,"url":null},"def":{"name":"get!","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"if result = get(key)\n  result\nelse\n  raise(KeyError.new(\"Key #{key.inspect} does not exist for object bucket #{name.inspect}\"))\nend"}},{"html_id":"get_info(key:String)-instance-method","name":"get_info","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/objects.cr","line_number":322,"url":null},"def":{"name":"get_info","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@client.get_info(name, key)"}},{"html_id":"get_info!(key:String)-instance-method","name":"get_info!","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/objects.cr","line_number":314,"url":null},"def":{"name":"get_info!","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"if info = get_info(key)\n  info\nelse\n  raise(KeyError.new(\"Key #{key.inspect} does not exist for object bucket #{name.inspect}\"))\nend"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/objects.cr","line_number":291,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"put(key:String,value:IO,*,description:String?=nil,headers:Headers=HTTP::Headers.new,chunk_size:Int=DEFAULT_CHUNK_SIZE)-instance-method","name":"put","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"IO"},{"name":"","external_name":"","restriction":""},{"name":"description","default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":"Headers"},{"name":"chunk_size","default_value":"DEFAULT_CHUNK_SIZE","external_name":"chunk_size","restriction":"Int"}],"args_string":"(key : String, value : IO, *, description : String? = nil, headers : Headers = HTTP::Headers.new, chunk_size : Int = DEFAULT_CHUNK_SIZE)","args_html":"(key : String, value : IO, *, description : String? = <span class=\"n\">nil</span>, headers : <a href=\"../../NATS/Objects/Headers.html\">Headers</a> = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>, chunk_size : Int = <span class=\"t\">DEFAULT_CHUNK_SIZE</span>)","location":{"filename":"src/objects.cr","line_number":310,"url":null},"def":{"name":"put","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"IO"},{"name":"","external_name":"","restriction":""},{"name":"description","default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":"Headers"},{"name":"chunk_size","default_value":"DEFAULT_CHUNK_SIZE","external_name":"chunk_size","restriction":"Int"}],"splat_index":2,"visibility":"Public","body":"@client.put(name, key, value, description: description, headers: headers, chunk_size: chunk_size)"}},{"html_id":"put(key:String,value:String|Bytes,**kwargs)-instance-method","name":"put","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String | Bytes"}],"args_string":"(key : String, value : String | Bytes, **kwargs)","args_html":"(key : String, value : String | Bytes, **kwargs)","location":{"filename":"src/objects.cr","line_number":306,"url":null},"def":{"name":"put","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String | Bytes"}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"visibility":"Public","body":"put(key, IO::Memory.new(value), **kwargs)"}},{"html_id":"stream_name:String-instance-method","name":"stream_name","abstract":false,"location":{"filename":"src/objects.cr","line_number":292,"url":null},"def":{"name":"stream_name","return_type":"String","visibility":"Public","body":"@stream_name"}}]},{"html_id":"nats/NATS/Objects/Client","path":"NATS/Objects/Client.html","kind":"class","full_name":"NATS::Objects::Client","name":"Client","abstract":false,"superclass":{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/objects.cr","line_number":51,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/Objects","kind":"module","full_name":"NATS::Objects","name":"Objects"},"constructors":[{"html_id":"new(nats:NATS::Client)-class-method","name":"new","abstract":false,"args":[{"name":"nats","external_name":"nats","restriction":"NATS::Client"}],"args_string":"(nats : NATS::Client)","args_html":"(nats : <a href=\"../../NATS/Client.html\">NATS::Client</a>)","location":{"filename":"src/objects.cr","line_number":52,"url":null},"def":{"name":"new","args":[{"name":"nats","external_name":"nats","restriction":"NATS::Client"}],"visibility":"Public","body":"_ = allocate\n_.initialize(nats)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create_bucket(name:String,description:String=\"\",*,ttl:Time::Span?=nil,storage:JetStream::API::V1::StreamConfig::Storage=:file,replicas:Int?=nil)-instance-method","name":"create_bucket","doc":"Create a bucket in the object store\n\n```\nbucket = nats.objects.create_bucket(\"my-bucket\")\n```\n\nGive the bucket a description that will show up when you get bucket metadata\n```\nbucket = nats.objects.create_bucket(\"uploads\", description: \"Storage for user uploads\")\n```\n\nSet a maximum lifetime for your objects, after which they are deleted:\n```\nbucket = nats.objects.create_bucket(\"snapchat-images\", ttl: 1.day)\n```\n\nReplicate your objects across multiple NATS servers in your cluster:\n```\nbucket = nats.objects.create_bucket(\"durable-storage\", replicas: 3)\n```","summary":"<p>Create a bucket in the object store</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"description","default_value":"\"\"","external_name":"description","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"},{"name":"storage","default_value":":file","external_name":"storage","restriction":"JetStream::API::V1::StreamConfig::Storage"},{"name":"replicas","default_value":"nil","external_name":"replicas","restriction":"Int | ::Nil"}],"args_string":"(name : String, description : String = \"\", *, ttl : Time::Span? = nil, storage : JetStream::API::V1::StreamConfig::Storage = :file, replicas : Int? = nil)","args_html":"(name : String, description : String = <span class=\"s\">&quot;&quot;</span>, *, ttl : Time::Span? = <span class=\"n\">nil</span>, storage : <a href=\"../../NATS/JetStream/API/V1/StreamConfig/Storage.html\">JetStream::API::V1::StreamConfig::Storage</a> = <span class=\"n\">:file</span>, replicas : Int? = <span class=\"n\">nil</span>)","location":{"filename":"src/objects.cr","line_number":75,"url":null},"def":{"name":"create_bucket","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"description","default_value":"\"\"","external_name":"description","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"},{"name":"storage","default_value":":file","external_name":"storage","restriction":"JetStream::API::V1::StreamConfig::Storage"},{"name":"replicas","default_value":"nil","external_name":"replicas","restriction":"Int | ::Nil"}],"splat_index":2,"visibility":"Public","body":"stream = @nats.jetstream.stream.create(name: \"OBJ_#{name}\", description: description, subjects: [\"$O.#{name}.C.>\", \"$O.#{name}.M.>\"], max_age: ttl, storage: storage, discard: :new, allow_rollup_headers: true)\nBucket.new(stream, self)\n"}},{"html_id":"delete_bucket(name:String)-instance-method","name":"delete_bucket","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/objects.cr","line_number":105,"url":null},"def":{"name":"delete_bucket","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@nats.jetstream.stream.delete(\"OBJ_#{name}\")"}},{"html_id":"get(bucket:String,key:String):IO?-instance-method","name":"get","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(bucket : String, key : String) : IO?","args_html":"(bucket : String, key : String) : IO?","location":{"filename":"src/objects.cr","line_number":164,"url":null},"def":{"name":"get","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"return_type":"IO | ::Nil","visibility":"Public","body":"if info = get_info(bucket, key)\nelse\n  return\nend\nsubject = \"NATS.Objects.#{bucket}.data.#{key}.get.#{NUID.next}\"\nconsumer = @nats.jetstream.consumer.create(stream_name: \"OBJ_#{bucket}\", filter_subject: \"$O.#{bucket}.C.#{sanitize_key(key)}\", deliver_subject: subject, ack_policy: :none, max_deliver: 1, flow_control: true, idle_heartbeat: 5.seconds)\nread, write = IO.pipe\nchunks = 0\n@nats.subscribe(subject) do |msg, subscription|\n  begin\n    if msg.reply_to\n      @nats.reply(msg, \"\")\n    end\n    if msg.raw_data.size > 0\n      write.write(msg.raw_data)\n      chunks = chunks + 1\n      if chunks >= info.chunks\n        write.close\n        @nats.jetstream.consumer.delete(consumer)\n        @nats.unsubscribe(subscription)\n      end\n    end\n  rescue ex : IO::Error\n    write.close\n    @nats.jetstream.consumer.delete(consumer)\n    @nats.unsubscribe(subscription)\n  end\nend\nread\n"}},{"html_id":"get_bucket(name:String)-instance-method","name":"get_bucket","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/objects.cr","line_number":99,"url":null},"def":{"name":"get_bucket","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"if stream = @nats.jetstream.stream.info(\"OBJ_#{name}\")\n  Bucket.new(stream, self)\nend"}},{"html_id":"get_info(bucket:String,key:String)-instance-method","name":"get_info","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(bucket : String, key : String)","args_html":"(bucket : String, key : String)","location":{"filename":"src/objects.cr","line_number":154,"url":null},"def":{"name":"get_info","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"meta = \"$O.#{bucket}.M.#{sanitize_key(key)}\"\nstream = \"OBJ_#{bucket}\"\nif response = @nats.jetstream.stream.get_msg(stream, last_by_subject: meta)\n  info = ObjectInfo.from_json(response.message.data)\n  info.mtime = response.message.time\n  info\nend\n"}},{"html_id":"keys(bucket:String,pattern:String=\">\"):Set(String)-instance-method","name":"keys","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"pattern","default_value":"\">\"","external_name":"pattern","restriction":"String"}],"args_string":"(bucket : String, pattern : String = \">\") : Set(String)","args_html":"(bucket : String, pattern : String = <span class=\"s\">&quot;&gt;&quot;</span>) : Set(String)","location":{"filename":"src/objects.cr","line_number":199,"url":null},"def":{"name":"keys","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"pattern","default_value":"\">\"","external_name":"pattern","restriction":"String"}],"return_type":"Set(String)","visibility":"Public","body":"keys = Set(String).new\nif get_info(bucket, pattern).nil?\n  return keys\nend\nwatch(bucket, pattern) do |msg, watch|\n  keys << msg.name\n  if watch.pending == 0\n    watch.stop\n  end\nend\nkeys\n"}},{"html_id":"put(bucket:String,key:String,value:IO,description:String?=nil,headers:Headers=HTTP::Headers.new,chunk_size:Int=DEFAULT_CHUNK_SIZE)-instance-method","name":"put","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"IO"},{"name":"description","default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":"Headers"},{"name":"chunk_size","default_value":"DEFAULT_CHUNK_SIZE","external_name":"chunk_size","restriction":"Int"}],"args_string":"(bucket : String, key : String, value : IO, description : String? = nil, headers : Headers = HTTP::Headers.new, chunk_size : Int = DEFAULT_CHUNK_SIZE)","args_html":"(bucket : String, key : String, value : IO, description : String? = <span class=\"n\">nil</span>, headers : <a href=\"../../NATS/Objects/Headers.html\">Headers</a> = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>, chunk_size : Int = <span class=\"t\">DEFAULT_CHUNK_SIZE</span>)","location":{"filename":"src/objects.cr","line_number":109,"url":null},"def":{"name":"put","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"IO"},{"name":"description","default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":"Headers"},{"name":"chunk_size","default_value":"DEFAULT_CHUNK_SIZE","external_name":"chunk_size","restriction":"Int"}],"visibility":"Public","body":"existing = get_info(bucket, key)\nid = NUID.next\nchunk_subject = \"$O.#{bucket}.C.#{sanitize_key(key)}\"\nmeta_subject = \"$O.#{bucket}.M.#{sanitize_key(key)}\"\nchunk = Bytes.new(chunk_size)\nsha = Digest::SHA256.new\nsent = 0\ntotal = 0_i64\nbegin\n  while (count = value.read(chunk)) != 0\n    body = chunk[0...count]\n    sha << body\n    @nats.publish(chunk_subject, body)\n    sent = sent + 1\n    total = total + count\n  end\n  msg = ObjectInfo.new(bucket: bucket, name: key, description: description, headers: headers, nuid: id, size: total, mtime: Time.utc, chunks: sent, digest: Base64.urlsafe_encode(sha.final))\n  @nats.jetstream.publish(meta_subject, msg.to_json, headers: HTTP::Headers {\"Nats-Rollup\" => \"sub\"})\nrescue ex\n  @nats.jetstream.stream.purge(bucket, subject: chunk_subject)\n  raise(ex)\nend\nif existing\n  @nats.jetstream.stream.purge(bucket, subject: existing.nuid)\nend\n@nats.flush\nmsg\n"}},{"html_id":"watch(bucket:String,key:String,&block:ObjectInfo,Watch->)-instance-method","name":"watch","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(bucket : String, key : String, &block : ObjectInfo, Watch -> )","args_html":"(bucket : String, key : String, &block : <a href=\"../../NATS/Objects/Client/ObjectInfo.html\">ObjectInfo</a>, <a href=\"../../NATS/Objects/Client/Watch.html\">Watch</a> -> )","location":{"filename":"src/objects.cr","line_number":217,"url":null},"def":{"name":"watch","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"}],"yields":2,"block_arg":{"name":"block","external_name":"block","restriction":"(ObjectInfo, Watch ->)"},"visibility":"Public","body":"begin\n  stop_channel = Channel(Nil).new\n  watch = Watch.new(stop_channel)\n  inbox = \"$WATCH_INBOX.#{NUID.next}\"\n  deliver_group = NUID.next\n  stream_name = \"OBJ_#{bucket}\"\n  consumer = @nats.jetstream.consumer.create(stream_name: stream_name, deliver_subject: inbox, deliver_group: deliver_group, deliver_policy: :last_per_subject, filter_subject: \"$O.#{bucket}.M.#{sanitize_key(key)}\", ack_policy: :none)\n  subscription = @nats.subscribe(inbox, queue_group: deliver_group) do |msg|\n    js_msg = JetStream::Message.new(msg)\n    watch.pending = js_msg.pending\n    _, bucket_name, _, key_name = msg.subject.split('.', 4)\n    info = ObjectInfo.from_json(msg.data)\n    block.call(info, watch)\n  end\n  stop_channel.receive\nensure\n  if subscription\n    @nats.unsubscribe(subscription)\n  end\n  if (stream_name && consumer) && (name = consumer.name)\n    @nats.jetstream.consumer.delete(stream_name, name)\n  end\nend"}}],"types":[{"html_id":"nats/NATS/Objects/Client/ObjectInfo","path":"NATS/Objects/Client/ObjectInfo.html","kind":"struct","full_name":"NATS::Objects::Client::ObjectInfo","name":"ObjectInfo","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/objects.cr","line_number":267,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"nats/NATS/Objects/Client","kind":"class","full_name":"NATS::Objects::Client","name":"Client"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/objects.cr","line_number":268,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(*,bucket,name,description,headers,nuid,size,chunks,digest,mtime=Time.new(0,0),deleted=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"bucket","external_name":"bucket","restriction":""},{"name":"name","external_name":"name","restriction":""},{"name":"description","external_name":"description","restriction":""},{"name":"headers","external_name":"headers","restriction":""},{"name":"nuid","external_name":"nuid","restriction":""},{"name":"size","external_name":"size","restriction":""},{"name":"chunks","external_name":"chunks","restriction":""},{"name":"digest","external_name":"digest","restriction":""},{"name":"mtime","default_value":"Time.new(0, 0)","external_name":"mtime","restriction":""},{"name":"deleted","default_value":"nil","external_name":"deleted","restriction":""}],"args_string":"(*, bucket, name, description, headers, nuid, size, chunks, digest, mtime = Time.new(0, 0), deleted = nil)","args_html":"(*, bucket, name, description, headers, nuid, size, chunks, digest, mtime = <span class=\"t\">Time</span>.<span class=\"k\">new</span>(<span class=\"n\">0</span>, <span class=\"n\">0</span>), deleted = <span class=\"n\">nil</span>)","location":{"filename":"src/objects.cr","line_number":281,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"bucket","external_name":"bucket","restriction":""},{"name":"name","external_name":"name","restriction":""},{"name":"description","external_name":"description","restriction":""},{"name":"headers","external_name":"headers","restriction":""},{"name":"nuid","external_name":"nuid","restriction":""},{"name":"size","external_name":"size","restriction":""},{"name":"chunks","external_name":"chunks","restriction":""},{"name":"digest","external_name":"digest","restriction":""},{"name":"mtime","default_value":"Time.new(0, 0)","external_name":"mtime","restriction":""},{"name":"deleted","default_value":"nil","external_name":"deleted","restriction":""}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(bucket: bucket, name: name, description: description, headers: headers, nuid: nuid, size: size, chunks: chunks, digest: digest, mtime: mtime, deleted: deleted)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bucket:String-instance-method","name":"bucket","abstract":false,"location":{"filename":"src/objects.cr","line_number":270,"url":null},"def":{"name":"bucket","return_type":"String","visibility":"Public","body":"@bucket"}},{"html_id":"chunks:Int32-instance-method","name":"chunks","abstract":false,"location":{"filename":"src/objects.cr","line_number":277,"url":null},"def":{"name":"chunks","return_type":"Int32","visibility":"Public","body":"@chunks"}},{"html_id":"deleted:Bool?-instance-method","name":"deleted","abstract":false,"location":{"filename":"src/objects.cr","line_number":279,"url":null},"def":{"name":"deleted","return_type":"Bool | ::Nil","visibility":"Public","body":"@deleted"}},{"html_id":"description:String?-instance-method","name":"description","abstract":false,"location":{"filename":"src/objects.cr","line_number":272,"url":null},"def":{"name":"description","return_type":"String | ::Nil","visibility":"Public","body":"@description"}},{"html_id":"digest:String-instance-method","name":"digest","abstract":false,"location":{"filename":"src/objects.cr","line_number":278,"url":null},"def":{"name":"digest","return_type":"String","visibility":"Public","body":"@digest"}},{"html_id":"headers:Headers-instance-method","name":"headers","abstract":false,"location":{"filename":"src/objects.cr","line_number":273,"url":null},"def":{"name":"headers","return_type":"Headers","visibility":"Public","body":"if (value = @headers).nil?\n  @headers = (HTTP::Headers.new)\nelse\n  value\nend"}},{"html_id":"mtime:Time-instance-method","name":"mtime","abstract":false,"location":{"filename":"src/objects.cr","line_number":276,"url":null},"def":{"name":"mtime","return_type":"Time","visibility":"Public","body":"@mtime"}},{"html_id":"mtime=(mtime:Time)-instance-method","name":"mtime=","abstract":false,"args":[{"name":"mtime","external_name":"mtime","restriction":"Time"}],"args_string":"(mtime : Time)","args_html":"(mtime : Time)","location":{"filename":"src/objects.cr","line_number":276,"url":null},"def":{"name":"mtime=","args":[{"name":"mtime","external_name":"mtime","restriction":"Time"}],"visibility":"Public","body":"@mtime = mtime"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/objects.cr","line_number":271,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"nuid:String-instance-method","name":"nuid","abstract":false,"location":{"filename":"src/objects.cr","line_number":274,"url":null},"def":{"name":"nuid","return_type":"String","visibility":"Public","body":"@nuid"}},{"html_id":"size:Int64-instance-method","name":"size","abstract":false,"location":{"filename":"src/objects.cr","line_number":275,"url":null},"def":{"name":"size","return_type":"Int64","visibility":"Public","body":"@size"}}]},{"html_id":"nats/NATS/Objects/Client/Watch","path":"NATS/Objects/Client/Watch.html","kind":"struct","full_name":"NATS::Objects::Client::Watch","name":"Watch","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/objects.cr","line_number":256,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/Objects/Client","kind":"class","full_name":"NATS::Objects::Client","name":"Client"},"constructors":[{"html_id":"new(stop_channel:Channel(Nil))-class-method","name":"new","abstract":false,"args":[{"name":"stop_channel","external_name":"stop_channel","restriction":"Channel(Nil)"}],"args_string":"(stop_channel : Channel(Nil))","args_html":"(stop_channel : Channel(Nil))","location":{"filename":"src/objects.cr","line_number":259,"url":null},"def":{"name":"new","args":[{"name":"stop_channel","external_name":"stop_channel","restriction":"Channel(Nil)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(stop_channel)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"pending:Int64-instance-method","name":"pending","abstract":false,"location":{"filename":"src/objects.cr","line_number":257,"url":null},"def":{"name":"pending","return_type":"Int64","visibility":"Public","body":"@pending"}},{"html_id":"pending=(pending:Int64)-instance-method","name":"pending=","abstract":false,"args":[{"name":"pending","external_name":"pending","restriction":"Int64"}],"args_string":"(pending : Int64)","args_html":"(pending : Int64)","location":{"filename":"src/objects.cr","line_number":257,"url":null},"def":{"name":"pending=","args":[{"name":"pending","external_name":"pending","restriction":"Int64"}],"visibility":"Public","body":"@pending = pending"}},{"html_id":"stop-instance-method","name":"stop","abstract":false,"location":{"filename":"src/objects.cr","line_number":262,"url":null},"def":{"name":"stop","visibility":"Public","body":"@stop_channel.send(nil)"}}]}]},{"html_id":"nats/NATS/Objects/Error","path":"NATS/Objects/Error.html","kind":"class","full_name":"NATS::Objects::Error","name":"Error","abstract":false,"superclass":{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/objects.cr","line_number":43,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"nats/NATS/Objects/KeyError","kind":"class","full_name":"NATS::Objects::KeyError","name":"KeyError"}],"namespace":{"html_id":"nats/NATS/Objects","kind":"module","full_name":"NATS::Objects","name":"Objects"}},{"html_id":"nats/NATS/Objects/Headers","path":"NATS/Objects/Headers.html","kind":"alias","full_name":"NATS::Objects::Headers","name":"Headers","abstract":false,"locations":[{"filename":"src/objects.cr","line_number":41,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"(HTTP::Headers | Hash(String, Array(String) | String))","aliased_html":"HTTP::Headers | Hash(String, Array(String) | String)","const":false,"namespace":{"html_id":"nats/NATS/Objects","kind":"module","full_name":"NATS::Objects","name":"Objects"}},{"html_id":"nats/NATS/Objects/KeyError","path":"NATS/Objects/KeyError.html","kind":"class","full_name":"NATS::Objects::KeyError","name":"KeyError","abstract":false,"superclass":{"html_id":"nats/NATS/Objects/Error","kind":"class","full_name":"NATS::Objects::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Objects/Error","kind":"class","full_name":"NATS::Objects::Error","name":"Error"},{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/objects.cr","line_number":46,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS/Objects","kind":"module","full_name":"NATS::Objects","name":"Objects"}}]},{"html_id":"nats/NATS/Payload","path":"NATS/Payload.html","kind":"alias","full_name":"NATS::Payload","name":"Payload","abstract":false,"locations":[{"filename":"src/nats.cr","line_number":39,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"(Slice(UInt8) | String)","aliased_html":"Slice(UInt8) | String","const":false,"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"}},{"html_id":"nats/NATS/ServerInfo","path":"NATS/ServerInfo.html","kind":"struct","full_name":"NATS::ServerInfo","name":"ServerInfo","abstract":false,"superclass":{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"nats/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"nats/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/nats.cr","line_number":41,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"nats/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/nats.cr","line_number":42,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"auth_required?:Bool-instance-method","name":"auth_required?","abstract":false,"location":{"filename":"src/nats.cr","line_number":55,"url":null},"def":{"name":"auth_required?","return_type":"Bool","visibility":"Public","body":"@auth_required"}},{"html_id":"client_id:Int32-instance-method","name":"client_id","abstract":false,"location":{"filename":"src/nats.cr","line_number":53,"url":null},"def":{"name":"client_id","return_type":"Int32","visibility":"Public","body":"@client_id"}},{"html_id":"client_ip:String-instance-method","name":"client_ip","abstract":false,"location":{"filename":"src/nats.cr","line_number":54,"url":null},"def":{"name":"client_ip","return_type":"String","visibility":"Public","body":"@client_ip"}},{"html_id":"cluster:String?-instance-method","name":"cluster","abstract":false,"location":{"filename":"src/nats.cr","line_number":57,"url":null},"def":{"name":"cluster","return_type":"String | ::Nil","visibility":"Public","body":"@cluster"}},{"html_id":"connect_urls:Array(String)-instance-method","name":"connect_urls","abstract":false,"location":{"filename":"src/nats.cr","line_number":58,"url":null},"def":{"name":"connect_urls","return_type":"Array(String)","visibility":"Public","body":"@connect_urls"}},{"html_id":"headers?:Bool-instance-method","name":"headers?","abstract":false,"location":{"filename":"src/nats.cr","line_number":50,"url":null},"def":{"name":"headers?","return_type":"Bool","visibility":"Public","body":"@headers"}},{"html_id":"host:String-instance-method","name":"host","abstract":false,"location":{"filename":"src/nats.cr","line_number":48,"url":null},"def":{"name":"host","return_type":"String","visibility":"Public","body":"@host"}},{"html_id":"max_payload:Int32-instance-method","name":"max_payload","abstract":false,"location":{"filename":"src/nats.cr","line_number":52,"url":null},"def":{"name":"max_payload","return_type":"Int32","visibility":"Public","body":"@max_payload"}},{"html_id":"nonce:String?-instance-method","name":"nonce","abstract":false,"location":{"filename":"src/nats.cr","line_number":56,"url":null},"def":{"name":"nonce","return_type":"String | ::Nil","visibility":"Public","body":"@nonce"}},{"html_id":"port:Int32-instance-method","name":"port","abstract":false,"location":{"filename":"src/nats.cr","line_number":49,"url":null},"def":{"name":"port","return_type":"Int32","visibility":"Public","body":"@port"}},{"html_id":"proto:Int32-instance-method","name":"proto","abstract":false,"location":{"filename":"src/nats.cr","line_number":47,"url":null},"def":{"name":"proto","return_type":"Int32","visibility":"Public","body":"@proto"}},{"html_id":"server_id:String-instance-method","name":"server_id","abstract":false,"location":{"filename":"src/nats.cr","line_number":44,"url":null},"def":{"name":"server_id","return_type":"String","visibility":"Public","body":"@server_id"}},{"html_id":"server_name:String-instance-method","name":"server_name","abstract":false,"location":{"filename":"src/nats.cr","line_number":45,"url":null},"def":{"name":"server_name","return_type":"String","visibility":"Public","body":"@server_name"}},{"html_id":"tls_required?:Bool-instance-method","name":"tls_required?","abstract":false,"location":{"filename":"src/nats.cr","line_number":51,"url":null},"def":{"name":"tls_required?","return_type":"Bool","visibility":"Public","body":"@tls_required"}},{"html_id":"version:String-instance-method","name":"version","abstract":false,"location":{"filename":"src/nats.cr","line_number":46,"url":null},"def":{"name":"version","return_type":"String","visibility":"Public","body":"@version"}}]},{"html_id":"nats/NATS/ServerNotRespondingToPings","path":"NATS/ServerNotRespondingToPings.html","kind":"class","full_name":"NATS::ServerNotRespondingToPings","name":"ServerNotRespondingToPings","abstract":false,"superclass":{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/error.cr","line_number":15,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"}},{"html_id":"nats/NATS/Subscription","path":"NATS/Subscription.html","kind":"class","full_name":"NATS::Subscription","name":"Subscription","abstract":false,"superclass":{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/subscription.cr","line_number":2,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"},"constructors":[{"html_id":"new(subject,sid,queue_group,max_in_flight:Int=10,&block:Message,Subscription->)-class-method","name":"new","abstract":false,"args":[{"name":"subject","external_name":"subject","restriction":""},{"name":"sid","external_name":"sid","restriction":""},{"name":"queue_group","external_name":"queue_group","restriction":""},{"name":"max_in_flight","default_value":"10","external_name":"max_in_flight","restriction":"Int"}],"args_string":"(subject, sid, queue_group, max_in_flight : Int = 10, &block : Message, Subscription -> )","args_html":"(subject, sid, queue_group, max_in_flight : Int = <span class=\"n\">10</span>, &block : <a href=\"../NATS/Message.html\">Message</a>, <a href=\"../NATS/Subscription.html\">Subscription</a> -> )","location":{"filename":"src/subscription.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"subject","external_name":"subject","restriction":""},{"name":"sid","external_name":"sid","restriction":""},{"name":"queue_group","external_name":"queue_group","restriction":""},{"name":"max_in_flight","default_value":"10","external_name":"max_in_flight","restriction":"Int"}],"yields":2,"block_arg":{"name":"block","external_name":"block","restriction":"(Message, Subscription ->)"},"visibility":"Public","body":"_ = allocate\n_.initialize(subject, sid, queue_group, max_in_flight, &block) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"close-instance-method","name":"close","abstract":false,"location":{"filename":"src/subscription.cr","line_number":33,"url":null},"def":{"name":"close","visibility":"Public","body":"@message_channel.close"}},{"html_id":"messages_remaining:Int32?-instance-method","name":"messages_remaining","abstract":false,"location":{"filename":"src/subscription.cr","line_number":8,"url":null},"def":{"name":"messages_remaining","return_type":"Int32 | ::Nil","visibility":"Public","body":"@messages_remaining"}},{"html_id":"queue_group:String?-instance-method","name":"queue_group","abstract":false,"location":{"filename":"src/subscription.cr","line_number":7,"url":null},"def":{"name":"queue_group","return_type":"String | ::Nil","visibility":"Public","body":"@queue_group"}},{"html_id":"send(message,&on_error:Exception->):Nil-instance-method","name":"send","abstract":false,"args":[{"name":"message","external_name":"message","restriction":""}],"args_string":"(message, &on_error : Exception -> ) : Nil","args_html":"(message, &on_error : Exception -> ) : Nil","location":{"filename":"src/subscription.cr","line_number":37,"url":null},"def":{"name":"send","args":[{"name":"message","external_name":"message","restriction":""}],"yields":1,"block_arg":{"name":"on_error","external_name":"on_error","restriction":"(Exception ->)"},"return_type":"Nil","visibility":"Public","body":"message_channel.send({message, on_error})"}},{"html_id":"sid:Int64-instance-method","name":"sid","abstract":false,"location":{"filename":"src/subscription.cr","line_number":6,"url":null},"def":{"name":"sid","return_type":"Int64","visibility":"Public","body":"@sid"}},{"html_id":"start-instance-method","name":"start","abstract":false,"location":{"filename":"src/subscription.cr","line_number":18,"url":null},"def":{"name":"start","visibility":"Public","body":"spawn do\n  begin\n    remaining = @messages_remaining\n    while remaining.nil? || remaining > 0\n      message, on_error = message_channel.receive\n      LOG.debug do\n        \"Calling subscription handler for sid #{sid} (subscription to #{subject.inspect}, message subject #{message.subject.inspect})\"\n      end\n      call(message, on_error)\n      remaining = @messages_remaining\n    end\n  rescue ex\n  end\nend"}},{"html_id":"subject:String-instance-method","name":"subject","abstract":false,"location":{"filename":"src/subscription.cr","line_number":5,"url":null},"def":{"name":"subject","return_type":"String","visibility":"Public","body":"@subject"}},{"html_id":"unsubscribe_after(messagesmessages_remaining:Int32)-instance-method","name":"unsubscribe_after","abstract":false,"args":[{"name":"messages_remaining","external_name":"messages","restriction":"Int32"}],"args_string":"(messages messages_remaining : Int32)","args_html":"(messages messages_remaining : Int32)","location":{"filename":"src/subscription.cr","line_number":15,"url":null},"def":{"name":"unsubscribe_after","args":[{"name":"messages_remaining","external_name":"messages","restriction":"Int32"}],"visibility":"Public","body":"@messages_remaining = messages_remaining"}}],"types":[{"html_id":"nats/NATS/Subscription/MessageChannel","path":"NATS/Subscription/MessageChannel.html","kind":"alias","full_name":"NATS::Subscription::MessageChannel","name":"MessageChannel","abstract":false,"locations":[{"filename":"src/subscription.cr","line_number":3,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":true,"aliased":"Channel(Tuple(NATS::Message, Proc(Exception, Nil)))","aliased_html":"Channel({<a href=\"../../NATS/Message.html\">NATS::Message</a>, Exception -> Nil})","const":false,"namespace":{"html_id":"nats/NATS/Subscription","kind":"class","full_name":"NATS::Subscription","name":"Subscription"}}]},{"html_id":"nats/NATS/UnknownCommand","path":"NATS/UnknownCommand.html","kind":"class","full_name":"NATS::UnknownCommand","name":"UnknownCommand","abstract":false,"superclass":{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},"ancestors":[{"html_id":"nats/NATS/Error","kind":"class","full_name":"NATS::Error","name":"Error"},{"html_id":"nats/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"nats/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"nats/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/error.cr","line_number":18,"url":null}],"repository_name":"nats","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"nats/NATS","kind":"module","full_name":"NATS","name":"NATS"}}]}]}}